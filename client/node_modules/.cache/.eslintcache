[{"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\index.tsx":"1","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\store.ts":"2","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\App.tsx":"3","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\projectSlice.ts":"4","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\authSlice.ts":"5","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\usersSlice.ts":"6","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\bugSlice.ts":"7","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\muiStyles.ts":"8","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\Routes.tsx":"9","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\auth.ts":"10","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\projects.ts":"11","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\bug.ts":"12","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\users.ts":"13","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\register\\registerpage.component.tsx":"14","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\login-page\\loginpage.component.tsx":"15","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\home-page\\homepage.component.tsx":"16","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\project-page\\projectpage.component.tsx":"17","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\bug-page\\bugpage.component.tsx":"18","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\navbar\\navbar.component.tsx":"19","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\backendUrl.ts":"20","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\sortProject.ts":"21","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table\\projects-table.component.tsx":"22","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\spinner\\spinner.component.tsx":"23","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\form-dialog\\form-dialog.component.tsx":"24","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-search-sort\\projects-search-sort.component.tsx":"25","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-form\\project-form.component.tsx":"26","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table-mobile\\projects-table-mobile.component.tsx":"27","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table\\bugs-table.component.tsx":"28","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table-mobile\\bugs-table-mobile.component.tsx":"29","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-header\\project-header.component.tsx":"30","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details\\bug-details.component.tsx":"31","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details-mobile\\bug-details-mobile.component.tsx":"32","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\confirm-dialog\\confirm-dialog.component.tsx":"33","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-form\\bug-form.component.tsx":"34","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\dialogStyles.ts":"35","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\buttonStyles.ts":"36","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\helper.ts":"37","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\sort-bar\\sort-bar.component.tsx":"38","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\search-bar\\search-bar.component.tsx":"39","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\localStorage.ts":"40","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\error-alert\\error-alert.component.tsx":"41"},{"size":397,"mtime":1624414161759,"results":"42","hashOfConfig":"43"},{"size":679,"mtime":1624414161766,"results":"44","hashOfConfig":"43"},{"size":634,"mtime":1625101438417,"results":"45","hashOfConfig":"43"},{"size":4129,"mtime":1624931808421,"results":"46","hashOfConfig":"43"},{"size":2942,"mtime":1625110324737,"results":"47","hashOfConfig":"43"},{"size":995,"mtime":1624414161766,"results":"48","hashOfConfig":"43"},{"size":4291,"mtime":1624414161765,"results":"49","hashOfConfig":"43"},{"size":6640,"mtime":1625113961371,"results":"50","hashOfConfig":"43"},{"size":1795,"mtime":1625101402427,"results":"51","hashOfConfig":"43"},{"size":1057,"mtime":1625101532538,"results":"52","hashOfConfig":"43"},{"size":1247,"mtime":1625101498441,"results":"53","hashOfConfig":"43"},{"size":1338,"mtime":1625101519446,"results":"54","hashOfConfig":"43"},{"size":312,"mtime":1625101484429,"results":"55","hashOfConfig":"43"},{"size":4206,"mtime":1625109871191,"results":"56","hashOfConfig":"43"},{"size":3131,"mtime":1625110557115,"results":"57","hashOfConfig":"43"},{"size":2480,"mtime":1625109998215,"results":"58","hashOfConfig":"43"},{"size":2346,"mtime":1624414161763,"results":"59","hashOfConfig":"43"},{"size":3908,"mtime":1625109971247,"results":"60","hashOfConfig":"43"},{"size":2271,"mtime":1625113761900,"results":"61","hashOfConfig":"43"},{"size":141,"mtime":1624930344705,"results":"62","hashOfConfig":"43"},{"size":958,"mtime":1624414161770,"results":"63","hashOfConfig":"43"},{"size":2588,"mtime":1625101235549,"results":"64","hashOfConfig":"43"},{"size":537,"mtime":1624414161758,"results":"65","hashOfConfig":"43"},{"size":2312,"mtime":1624414161752,"results":"66","hashOfConfig":"43"},{"size":1948,"mtime":1624414161756,"results":"67","hashOfConfig":"43"},{"size":5362,"mtime":1624932621322,"results":"68","hashOfConfig":"43"},{"size":1863,"mtime":1624414161756,"results":"69","hashOfConfig":"43"},{"size":3459,"mtime":1624414161751,"results":"70","hashOfConfig":"43"},{"size":2601,"mtime":1624414161751,"results":"71","hashOfConfig":"43"},{"size":3093,"mtime":1624414161755,"results":"72","hashOfConfig":"43"},{"size":2065,"mtime":1624414161749,"results":"73","hashOfConfig":"43"},{"size":2223,"mtime":1624414161749,"results":"74","hashOfConfig":"43"},{"size":2129,"mtime":1624414161752,"results":"75","hashOfConfig":"43"},{"size":4004,"mtime":1624414161750,"results":"76","hashOfConfig":"43"},{"size":589,"mtime":1624414161769,"results":"77","hashOfConfig":"43"},{"size":863,"mtime":1624414161768,"results":"78","hashOfConfig":"43"},{"size":449,"mtime":1625108164371,"results":"79","hashOfConfig":"43"},{"size":960,"mtime":1624414161758,"results":"80","hashOfConfig":"43"},{"size":682,"mtime":1624414161757,"results":"81","hashOfConfig":"43"},{"size":543,"mtime":1625101464684,"results":"82","hashOfConfig":"43"},{"size":516,"mtime":1625105781042,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"b62o7",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\index.tsx",[],["183","184"],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\store.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\App.tsx",["185","186"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Routes from './Routes';\r\n\r\nimport { autoLogin } from './redux/slices/authSlice';\r\nimport classes from '*.module.css';\r\nimport { useBodyStyles } from './styles/muiStyles';\r\n\r\n// Axios.defaults.withCredentials = true;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useBodyStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(autoLogin());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.body}>\r\n        <Routes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\projectSlice.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\usersSlice.ts",["187"],"import { AppThunk } from './../store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { User } from '../types';\r\nimport authService from '../../services/auth';\r\nimport usersService from '../../services/users';\r\n\r\ninterface InitialUsersState {\r\n  users: User[];\r\n}\r\n\r\nconst initialState: InitialUsersState = {\r\n  users: [],\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setUsers: (state, action: PayloadAction<User[]>) => {\r\n      state.users = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUsers } = usersSlice.actions;\r\n\r\nexport const getUsers = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const allUsers = await usersService.getUsers();\r\n      dispatch(setUsers(allUsers));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectUsersState = (state: RootState) => state.users;\r\n\r\nexport default usersSlice.reducer;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\bugSlice.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\muiStyles.ts",["188","189"],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\Routes.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\auth.ts",["190"],"import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\ninterface Credentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ntype Token = string | null;\r\n\r\nlet token: Token = null;\r\n\r\nconst setToken = (newToken: string) => {\r\n  token = newToken;\r\n};\r\n\r\nexport const setConfig = () => {\r\n  return {\r\n    headers: {\r\n      'x-auth-token': token,\r\n    },\r\n  };\r\n};\r\n\r\nconst login = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst register = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/register`, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst verify = async () => {\r\n  const response = await Axios.get(`${backendUrl}/verify`, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst logout = async () => {\r\n  const response = await Axios.get(`${backendUrl}/logout`);\r\n};\r\nconst authService = { login, logout, verify, register, setToken };\r\n\r\nexport default authService;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\projects.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\bug.ts",["191"],"import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\nimport { BugPayload } from '../redux/types';\r\nimport { setConfig } from './auth';\r\n\r\nconst getBugs = async (projectId: string) => {\r\n  const response = await Axios.get(\r\n    `${backendUrl}/projects/${projectId}/bugs`,\r\n    setConfig()\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst createBug = async (projectId: string, bugData: BugPayload) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs`,\r\n    bugData,\r\n    setConfig()\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.delete(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}`,\r\n    setConfig()\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst closeBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/close`,\r\n    null,\r\n    setConfig()\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst reopenBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/reopen`,\r\n    null,\r\n    setConfig()\r\n  );\r\n};\r\nconst bugService = { getBugs, createBug, deleteBug, closeBug, reopenBug };\r\n\r\nexport default bugService;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\users.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\register\\registerpage.component.tsx",["192","193"],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\login-page\\loginpage.component.tsx",["194","195"],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\home-page\\homepage.component.tsx",["196","197"],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\project-page\\projectpage.component.tsx",["198","199"],"import { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { RootState } from '../../redux/store';\r\nimport BugsTable from '../../components/bugs-table/bugs-table.component';\r\nimport BugsCreate from '../../components/bugs-create/bugs-create.component';\r\nimport ProjectHeader from '../../components/project-header/project-header.component';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { selectProjectById } from '../../redux/slices/projectSlice';\r\nimport {\r\n  fetchBugs,\r\n  selectBugsStateForProject,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugSlice';\r\n\r\nimport BugForm from '../../components/bug-form/bug-form.component';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\nimport FormDialog from '../../components/form-dialog/form-dialog.component';\r\nimport BugsTableMobile from '../../components/bugs-table-mobile/bugs-table-mobile.component';\r\n\r\nimport { useTheme, useMediaQuery } from '@material-ui/core';\r\ninterface ParamTypes {\r\n  projectId: string;\r\n}\r\n\r\nconst ProjectPage = () => {\r\n  const { projectId } = useParams<ParamTypes>();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const currentProject = useSelector((state: RootState) =>\r\n    selectProjectById(state, projectId)\r\n  );\r\n\r\n  const { fetchStatus } = useSelector(selectBugsState);\r\n\r\n  const bugs = useSelector((state: RootState) =>\r\n    selectBugsStateForProject(state, projectId)\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBugs(projectId));\r\n  }, []);\r\n\r\n  const bugDisplay = () => {\r\n    if (fetchStatus === true) {\r\n      return <Spinner />;\r\n    } else {\r\n      return !isMobile ? (\r\n        <BugsTable projectId={projectId} />\r\n      ) : (\r\n        <BugsTableMobile bugs={bugs} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {currentProject && currentProject ? (\r\n        <ProjectHeader currentProject={currentProject} />\r\n      ) : null}\r\n      <FormDialog\r\n        title=\"Add a Bug\"\r\n        buttonType={{ type: 'normal', text: 'Add a Bug', icon: AddIcon }}\r\n      >\r\n        <BugForm editMode=\"add\" projectId={projectId} />\r\n      </FormDialog>\r\n      {bugDisplay()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\bug-page\\bugpage.component.tsx",["200","201","202","203","204","205","206","207","208","209","210","211","212"],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\navbar\\navbar.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\backendUrl.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\sortProject.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table\\projects-table.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\spinner\\spinner.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\form-dialog\\form-dialog.component.tsx",["213","214","215","216","217","218","219","220","221"],"import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n  Paper,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\nimport { ButtonTypes } from '../types';\r\n\r\nconst FormDialog: React.FC<{\r\n  title: string;\r\n  buttonType: ButtonTypes;\r\n  children: React.ReactNode;\r\n}> = ({ title, buttonType, children }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'icon') {\r\n      return (\r\n        <IconButton color={buttonType.color} onClick={handleClickOpen}>\r\n          <buttonType.icon fontSize={buttonType.iconSize} />\r\n        </IconButton>\r\n      );\r\n    } else if (buttonType.type === 'menu') {\r\n      return (\r\n        <MenuItem onClick={handleClickOpen}>\r\n          <buttonType.icon style={buttonType.iconStyle} />\r\n          {buttonType.text}\r\n        </MenuItem>\r\n      );\r\n    } else if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'inline' }}>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        classes={{ paper: classes.dialogWrapper }}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>{children}</DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDialog;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-search-sort\\projects-search-sort.component.tsx",["222"],"import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SearchBar from '../search-bar/search-bar.component';\r\nimport SortBar from '../sort-bar/sort-bar.component';\r\n\r\nimport { ProjectSortValues } from '../../redux/types';\r\nimport {\r\n  sortProjectsBy,\r\n  selectProjectsState,\r\n} from '../../redux/slices/projectSlice';\r\n\r\nimport { useSearchSortStyles } from '../../styles/muiStyles';\r\n\r\nconst sortItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'most-bugs', label: 'Most Bugs' },\r\n  { value: 'least-bugs', label: 'Least Bugs' },\r\n  { value: 'most-members', label: 'Most Members' },\r\n  { value: 'least-members', label: 'Least Members' },\r\n];\r\n\r\nconst ProjectsSearchSort: React.FC<{\r\n  searchText: string;\r\n  setSearchText: (searchText: string) => void;\r\n  isMobile: boolean;\r\n}> = ({ searchText, setSearchText, isMobile }) => {\r\n  const classes = useSearchSortStyles();\r\n  const dispatch = useDispatch();\r\n  const { sortBy } = useSelector(selectProjectsState);\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    const selectedValue = e.target.value as ProjectSortValues;\r\n    dispatch(sortProjectsBy(selectedValue));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.inputWrapper}>\r\n        <div className={classes.searchBar}>\r\n          <SearchBar\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n        <div className={classes.sortBar}>\r\n          <SortBar\r\n            handleSortChange={handleSortChange}\r\n            sortItems={sortItems}\r\n            sortBy={sortBy}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsSearchSort;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-form\\project-form.component.tsx",["223","224","225","226","227","228","229"],"import { useState, useEffect, Fragment } from 'react';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { editProjectName } from '../../redux/slices/projectSlice';\r\n\r\nimport { User } from '../../redux/types';\r\nimport { createNewProject } from '../../redux/slices/projectSlice';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\ninterface CreateProject {\r\n  editMode: 'project';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId?: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface AddMembers {\r\n  editMode: 'members';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface EditProjectName {\r\n  editMode: 'name';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentMembers?: string[];\r\n  closeDialog?: () => void;\r\n}\r\n\r\ntype ProjectFormType = CreateProject | EditProjectName | AddMembers;\r\n\r\nconst ProjectForm: React.FC<ProjectFormType> = ({\r\n  editMode,\r\n  currentName,\r\n  currentMembers,\r\n  projectId,\r\n  closeDialog,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector(selectUsersState);\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [name, setName] = useState<string>('');\r\n  const [projectName, setProjectName] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\r\n    setMembers(selectedOption.map((option) => option.id));\r\n  };\r\n\r\n  const handleCreateProject = (e: React.SyntheticEvent) => {\r\n    dispatch(createNewProject({ name, members }, closeDialog));\r\n  };\r\n\r\n  const handleEditProjectName = () => {\r\n    dispatch(editProjectName(projectId as string, projectName));\r\n  };\r\n\r\n  const handleAddMembers = () => {};\r\n\r\n  return (\r\n    <form\r\n      onSubmit={\r\n        editMode === 'project'\r\n          ? handleCreateProject\r\n          : editMode === 'name'\r\n          ? handleEditProjectName\r\n          : handleAddMembers\r\n      }\r\n    >\r\n      {editMode === 'project' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Project Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n      {editMode === 'name' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Edit Project Name\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            defaultValue={currentName}\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      {editMode === 'members' ? (\r\n        <Fragment>\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'name'\r\n          ? 'Edit Project Name'\r\n          : editMode === 'project'\r\n          ? 'Add Project'\r\n          : editMode === 'members'\r\n          ? 'Add Members'\r\n          : null}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table-mobile\\projects-table-mobile.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table\\bugs-table.component.tsx",["230","231","232","233"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { selectBugsState } from '../../redux/slices/bugSlice';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\nimport { useTableStyles } from '../../styles/muiStyles';\r\n\r\nconst BugsTable = ({ projectId }: { projectId: string }) => {\r\n  const classes = useTableStyles();\r\n  const history = useHistory();\r\n  const { bugs } = useSelector(selectBugsState);\r\n\r\n  const singleBugs = bugs[projectId];\r\n  console.log(singleBugs);\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell align=\"center\">Priority</TableCell>\r\n              <TableCell align=\"center\">Status</TableCell>\r\n              <TableCell align=\"right\">Added</TableCell>\r\n              {/* <TableCell align=\"right\">Updated</TableCell> */}\r\n              <TableCell align=\"right\">Created By</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {singleBugs &&\r\n              singleBugs.map((bug) => (\r\n                <TableRow key={bug.id}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.clickableCell}\r\n                    onClick={() =>\r\n                      history.push(`/projects/${projectId}/bugs/${bug.id}`)\r\n                    }\r\n                  >\r\n                    {bug.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div\r\n                      style={{\r\n                        ...priorityStyles(bug.priority),\r\n                        textTransform: 'capitalize',\r\n                        margin: '0 auto',\r\n                      }}\r\n                    >\r\n                      {bug.priority}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div\r\n                      style={{\r\n                        ...statusStyles(bug.isResolved),\r\n                        margin: '0 auto',\r\n                      }}\r\n                    >\r\n                      {bug.isResolved ? 'Closed' : 'Open'}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {formatDateTime(bug.createdAt)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{bug.createdBy.username}</TableCell>\r\n                  {/* <TableCell align=\"right\">{bug.protein}</TableCell> */}\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsTable;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table-mobile\\bugs-table-mobile.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-header\\project-header.component.tsx",["234","235","236","237"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Icon, Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteProject } from '../../redux/slices/projectSlice';\r\nimport { ProjectState } from '../../redux/types';\r\nimport ConfirmDialog from '../confirm-dialog/confirm-dialog.component';\r\nimport FormDialog from '../form-dialog/form-dialog.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport ProjectForm from '../project-form/project-form.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst ProjectHeader: React.FC<{ currentProject: ProjectState }> = ({\r\n  currentProject,\r\n}) => {\r\n  const classes = useHeaderStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { user } = useSelector(selectAuthState);\r\n  const { createdAt, createdBy, id, members, name, updatedAt } = currentProject;\r\n\r\n  const isAdmin = user?.id === createdBy.id;\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Confirm Delete Project\"\r\n            bodyContent=\"Do you want to permanently delete your project?\"\r\n            buttonText=\"Delete Project\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Project',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleProjectDelete}\r\n          />\r\n        </div>\r\n        <FormDialog\r\n          title=\"Add Project Members\"\r\n          buttonType={{\r\n            type: 'normal',\r\n            text: 'Add Members',\r\n            icon: GroupIcon,\r\n          }}\r\n        >\r\n          <ProjectForm editMode=\"members\" projectId={id} />\r\n        </FormDialog>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleProjectDelete = () => {\r\n    dispatch(deleteProject(id, history));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.headerPaper}>\r\n        <div className={classes.title}>\r\n          <Typography style={{ fontSize: '2rem', fontWeight: 'bold' }}>\r\n            {name}\r\n          </Typography>\r\n          {isAdmin ? (\r\n            <FormDialog\r\n              title=\"Edit Project Name\"\r\n              buttonType={{ type: 'icon', icon: EditIcon, size: 'small' }}\r\n            >\r\n              <ProjectForm editMode=\"name\" currentName={name} projectId={id} />\r\n            </FormDialog>\r\n          ) : null}\r\n        </div>\r\n\r\n        <Typography>Admin: {createdBy.username}</Typography>\r\n        <Typography>Created On: {formatDateTime(createdAt)}</Typography>\r\n\r\n        <div className={classes.adminButtons}>{adminButtons()}</div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectHeader;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details\\bug-details.component.tsx",["238","239","240","241","242","243","244"],"import React from 'react';\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport { BugState } from '../../redux/types';\r\nimport { useBugPageStyles } from '../../styles/muiStyles';\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\nconst BugDetails: React.FC<{ bug: BugState }> = ({ bug }) => {\r\n  const classes = useBugPageStyles();\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.body}>\r\n        <div>\r\n          <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n            Description\r\n          </Typography>\r\n          <Typography>{description}</Typography>\r\n        </div>\r\n        <div className={classes.details}>\r\n          <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n            Bug Details\r\n          </Typography>\r\n          <Typography>Created By: {createdBy.username}</Typography>\r\n          <Typography>Created On {bug && formatDateTime(createdAt)}</Typography>\r\n          <Typography>\r\n            Priority:\r\n            <div\r\n              style={{\r\n                ...priorityStyles(bug.priority),\r\n                textTransform: 'capitalize',\r\n                display: 'inline',\r\n                padding: '0.15em 0.4em',\r\n              }}\r\n            >\r\n              {priority}\r\n            </div>\r\n          </Typography>\r\n\r\n          <Typography>\r\n            Status:\r\n            <div\r\n              style={{\r\n                ...statusStyles(bug.isResolved),\r\n                display: 'inline',\r\n                padding: '0.15em 0.4em',\r\n              }}\r\n            >\r\n              {bug.isResolved ? 'Closed' : 'Open'}\r\n            </div>\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n      {/* <div className={classes.buttons}>{adminButtons()}</div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugDetails;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details-mobile\\bug-details-mobile.component.tsx",["245","246","247","248","249","250","251"],"import React from 'react';\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport { BugState } from '../../redux/types';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\nconst BugDetailsMobile: React.FC<{ bug: BugState }> = ({ bug }) => {\r\n  const classes = useHeaderStyles();\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.mobileWrapper}>\r\n          <div className={classes.mobileDescription}>\r\n            <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n              Description\r\n            </Typography>\r\n            <Typography>{description}</Typography>\r\n          </div>\r\n          <div className={classes.mobileDescription}>\r\n            <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n              Bug Details\r\n            </Typography>\r\n            <Typography>Created By: {createdBy.username}</Typography>\r\n            <Typography>\r\n              Created On {bug && formatDateTime(createdAt)}\r\n            </Typography>\r\n            <Typography>\r\n              Priority:\r\n              <div\r\n                style={{\r\n                  ...priorityStyles(bug.priority),\r\n                  textTransform: 'capitalize',\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {priority}\r\n              </div>\r\n            </Typography>\r\n\r\n            <Typography>\r\n              Status:\r\n              <div\r\n                style={{\r\n                  ...statusStyles(bug.isResolved),\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {bug.isResolved ? 'Closed' : 'Open'}\r\n              </div>\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugDetailsMobile;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\confirm-dialog\\confirm-dialog.component.tsx",["252","253","254","255","256","257","258","259"],"import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n} from '@material-ui/core';\r\n\r\nimport { ButtonTypes } from '../types';\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\n\r\nconst ConfirmDialog: React.FC<{\r\n  title: string;\r\n  bodyContent: string;\r\n  buttonText: string;\r\n  buttonType: ButtonTypes;\r\n  actionFunction: () => void;\r\n}> = ({ title, bodyContent, buttonText, buttonType, actionFunction }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAction = () => {\r\n    actionFunction();\r\n    handleClose();\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography>{bodyContent}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {buttonType.text}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-form\\bug-form.component.tsx",["260","261","262","263","264","265","266","267"],"import { useState, Fragment } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createBug } from '../../redux/slices/bugSlice';\r\nimport { BugPayload, BugPriority } from '../../redux/types';\r\n\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n  DialogContent,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core';\r\n\r\ninterface AddBug {\r\n  editMode: 'add';\r\n  currentName?: string;\r\n  projectId?: string;\r\n  currentId?: string;\r\n  bugDescription?: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\ninterface UpdateBug {\r\n  editMode: 'update';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentId: string;\r\n  bugDescription: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\n\r\ntype BugFormTypes = UpdateBug | AddBug;\r\n\r\nconst BugForm: React.FC<BugFormTypes> = ({\r\n  editMode,\r\n  currentName,\r\n  currentId,\r\n  projectId,\r\n  bugDescription,\r\n  resolvedStatus,\r\n  priorityStatus,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [priority, setPriority] = useState<BugPriority>('Low');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setPriority(event.target.value as BugPriority);\r\n  };\r\n\r\n  const handleAddBug = () => {\r\n    console.log('testing');\r\n    dispatch(createBug(projectId as string, { name, description, priority }));\r\n  };\r\n\r\n  const handleEditBug = () => {\r\n    console.log('testing');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={editMode === 'add' ? handleAddBug : handleEditBug}>\r\n      {editMode === 'add' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Bug Title\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            // multiline={true}\r\n            // rows={2}\r\n            fullWidth\r\n            className={classes.inputField}\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setDescription(e.target.value)\r\n            }\r\n          />\r\n          <FormControl component=\"fieldset\" className={classes.radioGroupForm}>\r\n            <RadioGroup\r\n              row\r\n              defaultValue=\"low\"\r\n              value={priority}\r\n              onChange={handleChange}\r\n              className={classes.radioGroup}\r\n            >\r\n              <FormLabel component=\"legend\" className={classes.radioGroupLabel}>\r\n                Priority:\r\n              </FormLabel>\r\n\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel value=\"Low\" control={<Radio />} label=\"Low\" />\r\n                <FormControlLabel\r\n                  value=\"Medium\"\r\n                  control={<Radio />}\r\n                  label=\"Medium\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"High\"\r\n                  control={<Radio />}\r\n                  label=\"High\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Fragment>\r\n      ) : null}\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'add' ? 'Add a Bug' : 'Edit Bug '}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BugForm;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\dialogStyles.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\buttonStyles.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\helper.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\sort-bar\\sort-bar.component.tsx",["268","269"],"import React from 'react';\r\n\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\n\r\nconst SortBar: React.FC<{\r\n  handleSortChange: (e: React.ChangeEvent<{ value: unknown }>) => void;\r\n  sortItems: { value: string; label: string }[];\r\n  sortBy: string;\r\n  label: string;\r\n  size?: 'small' | 'medium';\r\n}> = ({ handleSortChange, sortItems, sortBy, label, size }) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" fullWidth size={size || 'medium'}>\r\n      <InputLabel>Sort {label} By</InputLabel>\r\n      <Select\r\n        value={sortBy}\r\n        onChange={handleSortChange}\r\n        label={`Sort ${label} By`}\r\n      >\r\n        {sortItems.map((item) => (\r\n          <MenuItem key={item.value} value={item.value}>\r\n            {item.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SortBar;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\search-bar\\search-bar.component.tsx",["270","271","272"],"import React from 'react';\r\n\r\nimport { TextField, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst SearchBar: React.FC<{\r\n  searchText: string;\r\n  setSearchText: (searchText: string) => void;\r\n  label: string;\r\n  size?: 'small' | 'medium';\r\n}> = ({ searchText, setSearchText, label, size }) => {\r\n  return (\r\n    <TextField\r\n      value={searchText}\r\n      onChange={(e) => setSearchText(e.target.value)}\r\n      fullWidth\r\n      type=\"text\"\r\n      variant=\"outlined\"\r\n      size={size || 'medium'}\r\n      label={`Search ${label}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\localStorage.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\error-alert\\error-alert.component.tsx",[],{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":6,"column":8,"nodeType":"279","messageId":"280","endLine":6,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":17,"column":6,"nodeType":"283","endLine":17,"endColumn":8,"suggestions":"284"},{"ruleId":"277","severity":1,"message":"285","line":5,"column":8,"nodeType":"279","messageId":"280","endLine":5,"endColumn":19},{"ruleId":"277","severity":1,"message":"286","line":2,"column":10,"nodeType":"279","messageId":"280","endLine":2,"endColumn":20},{"ruleId":"277","severity":1,"message":"287","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":26},{"ruleId":"277","severity":1,"message":"288","line":43,"column":9,"nodeType":"279","messageId":"280","endLine":43,"endColumn":17},{"ruleId":"277","severity":1,"message":"288","line":46,"column":9,"nodeType":"279","messageId":"280","endLine":46,"endColumn":17},{"ruleId":"277","severity":1,"message":"289","line":1,"column":10,"nodeType":"279","messageId":"280","endLine":1,"endColumn":18},{"ruleId":"277","severity":1,"message":"290","line":50,"column":11,"nodeType":"279","messageId":"280","endLine":50,"endColumn":18},{"ruleId":"277","severity":1,"message":"289","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"290","line":33,"column":11,"nodeType":"279","messageId":"280","endLine":33,"endColumn":18},{"ruleId":"277","severity":1,"message":"291","line":24,"column":34,"nodeType":"279","messageId":"280","endLine":24,"endColumn":44},{"ruleId":"277","severity":1,"message":"292","line":27,"column":9,"nodeType":"279","messageId":"280","endLine":27,"endColumn":17},{"ruleId":"277","severity":1,"message":"293","line":6,"column":8,"nodeType":"279","messageId":"280","endLine":6,"endColumn":18},{"ruleId":"281","severity":1,"message":"294","line":45,"column":6,"nodeType":"283","endLine":45,"endColumn":8,"suggestions":"295"},{"ruleId":"277","severity":1,"message":"296","line":6,"column":10,"nodeType":"279","messageId":"280","endLine":6,"endColumn":15},{"ruleId":"277","severity":1,"message":"297","line":6,"column":17,"nodeType":"279","messageId":"280","endLine":6,"endColumn":27},{"ruleId":"277","severity":1,"message":"298","line":16,"column":10,"nodeType":"279","messageId":"280","endLine":16,"endColumn":24},{"ruleId":"277","severity":1,"message":"299","line":26,"column":10,"nodeType":"279","messageId":"280","endLine":26,"endColumn":24},{"ruleId":"277","severity":1,"message":"300","line":26,"column":26,"nodeType":"279","messageId":"280","endLine":26,"endColumn":38},{"ruleId":"277","severity":1,"message":"301","line":54,"column":5,"nodeType":"279","messageId":"280","endLine":54,"endColumn":7},{"ruleId":"277","severity":1,"message":"302","line":55,"column":5,"nodeType":"279","messageId":"280","endLine":55,"endColumn":9},{"ruleId":"277","severity":1,"message":"303","line":56,"column":5,"nodeType":"279","messageId":"280","endLine":56,"endColumn":16},{"ruleId":"277","severity":1,"message":"304","line":57,"column":5,"nodeType":"279","messageId":"280","endLine":57,"endColumn":13},{"ruleId":"277","severity":1,"message":"305","line":59,"column":5,"nodeType":"279","messageId":"280","endLine":59,"endColumn":14},{"ruleId":"277","severity":1,"message":"306","line":60,"column":5,"nodeType":"279","messageId":"280","endLine":60,"endColumn":14},{"ruleId":"277","severity":1,"message":"307","line":61,"column":5,"nodeType":"279","messageId":"280","endLine":61,"endColumn":13},{"ruleId":"277","severity":1,"message":"308","line":62,"column":5,"nodeType":"279","messageId":"280","endLine":62,"endColumn":14},{"ruleId":"277","severity":1,"message":"309","line":3,"column":3,"nodeType":"279","messageId":"280","endLine":3,"endColumn":15},{"ruleId":"277","severity":1,"message":"310","line":4,"column":3,"nodeType":"279","messageId":"280","endLine":4,"endColumn":8},{"ruleId":"277","severity":1,"message":"311","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":13},{"ruleId":"277","severity":1,"message":"312","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":13},{"ruleId":"277","severity":1,"message":"313","line":14,"column":3,"nodeType":"279","messageId":"280","endLine":14,"endColumn":16},{"ruleId":"277","severity":1,"message":"297","line":17,"column":3,"nodeType":"279","messageId":"280","endLine":17,"endColumn":13},{"ruleId":"277","severity":1,"message":"314","line":18,"column":3,"nodeType":"279","messageId":"280","endLine":18,"endColumn":6},{"ruleId":"277","severity":1,"message":"296","line":19,"column":3,"nodeType":"279","messageId":"280","endLine":19,"endColumn":8},{"ruleId":"277","severity":1,"message":"315","line":34,"column":9,"nodeType":"279","messageId":"280","endLine":34,"endColumn":17},{"ruleId":"277","severity":1,"message":"316","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":25},{"ruleId":"277","severity":1,"message":"317","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":11},{"ruleId":"277","severity":1,"message":"318","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":17},{"ruleId":"277","severity":1,"message":"319","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":15},{"ruleId":"277","severity":1,"message":"320","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":9},{"ruleId":"277","severity":1,"message":"321","line":10,"column":3,"nodeType":"279","messageId":"280","endLine":10,"endColumn":7},{"ruleId":"277","severity":1,"message":"322","line":11,"column":3,"nodeType":"279","messageId":"280","endLine":11,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":71,"column":6,"nodeType":"283","endLine":71,"endColumn":8,"suggestions":"323"},{"ruleId":"277","severity":1,"message":"311","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":13},{"ruleId":"277","severity":1,"message":"310","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":8},{"ruleId":"277","severity":1,"message":"309","line":7,"column":3,"nodeType":"279","messageId":"280","endLine":7,"endColumn":15},{"ruleId":"277","severity":1,"message":"324","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":13},{"ruleId":"277","severity":1,"message":"325","line":3,"column":10,"nodeType":"279","messageId":"280","endLine":3,"endColumn":14},{"ruleId":"277","severity":1,"message":"326","line":3,"column":35,"nodeType":"279","messageId":"280","endLine":3,"endColumn":48},{"ruleId":"277","severity":1,"message":"327","line":27,"column":37,"nodeType":"279","messageId":"280","endLine":27,"endColumn":44},{"ruleId":"277","severity":1,"message":"328","line":27,"column":52,"nodeType":"279","messageId":"280","endLine":27,"endColumn":61},{"ruleId":"277","severity":1,"message":"326","line":2,"column":29,"nodeType":"279","messageId":"280","endLine":2,"endColumn":42},{"ruleId":"277","severity":1,"message":"329","line":2,"column":44,"nodeType":"279","messageId":"280","endLine":2,"endColumn":52},{"ruleId":"277","severity":1,"message":"301","line":13,"column":5,"nodeType":"279","messageId":"280","endLine":13,"endColumn":7},{"ruleId":"277","severity":1,"message":"302","line":14,"column":5,"nodeType":"279","messageId":"280","endLine":14,"endColumn":9},{"ruleId":"277","severity":1,"message":"330","line":17,"column":5,"nodeType":"279","messageId":"280","endLine":17,"endColumn":15},{"ruleId":"277","severity":1,"message":"306","line":19,"column":5,"nodeType":"279","messageId":"280","endLine":19,"endColumn":14},{"ruleId":"277","severity":1,"message":"307","line":20,"column":5,"nodeType":"279","messageId":"280","endLine":20,"endColumn":13},{"ruleId":"277","severity":1,"message":"326","line":2,"column":29,"nodeType":"279","messageId":"280","endLine":2,"endColumn":42},{"ruleId":"277","severity":1,"message":"329","line":2,"column":44,"nodeType":"279","messageId":"280","endLine":2,"endColumn":52},{"ruleId":"277","severity":1,"message":"301","line":13,"column":5,"nodeType":"279","messageId":"280","endLine":13,"endColumn":7},{"ruleId":"277","severity":1,"message":"302","line":14,"column":5,"nodeType":"279","messageId":"280","endLine":14,"endColumn":9},{"ruleId":"277","severity":1,"message":"330","line":17,"column":5,"nodeType":"279","messageId":"280","endLine":17,"endColumn":15},{"ruleId":"277","severity":1,"message":"306","line":19,"column":5,"nodeType":"279","messageId":"280","endLine":19,"endColumn":14},{"ruleId":"277","severity":1,"message":"307","line":20,"column":5,"nodeType":"279","messageId":"280","endLine":20,"endColumn":13},{"ruleId":"277","severity":1,"message":"309","line":3,"column":3,"nodeType":"279","messageId":"280","endLine":3,"endColumn":15},{"ruleId":"277","severity":1,"message":"310","line":4,"column":3,"nodeType":"279","messageId":"280","endLine":4,"endColumn":8},{"ruleId":"277","severity":1,"message":"311","line":5,"column":3,"nodeType":"279","messageId":"280","endLine":5,"endColumn":13},{"ruleId":"277","severity":1,"message":"312","line":6,"column":3,"nodeType":"279","messageId":"280","endLine":6,"endColumn":13},{"ruleId":"277","severity":1,"message":"331","line":11,"column":3,"nodeType":"279","messageId":"280","endLine":11,"endColumn":13},{"ruleId":"277","severity":1,"message":"332","line":12,"column":3,"nodeType":"279","messageId":"280","endLine":12,"endColumn":11},{"ruleId":"277","severity":1,"message":"314","line":18,"column":3,"nodeType":"279","messageId":"280","endLine":18,"endColumn":6},{"ruleId":"277","severity":1,"message":"333","line":32,"column":9,"nodeType":"279","messageId":"280","endLine":32,"endColumn":16},{"ruleId":"277","severity":1,"message":"334","line":6,"column":10,"nodeType":"279","messageId":"280","endLine":6,"endColumn":20},{"ruleId":"277","severity":1,"message":"317","line":13,"column":3,"nodeType":"279","messageId":"280","endLine":13,"endColumn":11},{"ruleId":"277","severity":1,"message":"318","line":14,"column":3,"nodeType":"279","messageId":"280","endLine":14,"endColumn":17},{"ruleId":"277","severity":1,"message":"319","line":15,"column":3,"nodeType":"279","messageId":"280","endLine":15,"endColumn":15},{"ruleId":"277","severity":1,"message":"320","line":16,"column":3,"nodeType":"279","messageId":"280","endLine":16,"endColumn":9},{"ruleId":"277","severity":1,"message":"321","line":17,"column":3,"nodeType":"279","messageId":"280","endLine":17,"endColumn":7},{"ruleId":"277","severity":1,"message":"322","line":18,"column":3,"nodeType":"279","messageId":"280","endLine":18,"endColumn":17},{"ruleId":"277","severity":1,"message":"335","line":19,"column":3,"nodeType":"279","messageId":"280","endLine":19,"endColumn":16},{"ruleId":"277","severity":1,"message":"322","line":8,"column":3,"nodeType":"279","messageId":"280","endLine":8,"endColumn":17},{"ruleId":"277","severity":1,"message":"336","line":10,"column":8,"nodeType":"279","messageId":"280","endLine":10,"endColumn":16},{"ruleId":"277","severity":1,"message":"331","line":3,"column":21,"nodeType":"279","messageId":"280","endLine":3,"endColumn":31},{"ruleId":"277","severity":1,"message":"337","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":18},{"ruleId":"277","severity":1,"message":"338","line":5,"column":8,"nodeType":"279","messageId":"280","endLine":5,"endColumn":17},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"@typescript-eslint/no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["341"],"'authService' is defined but never used.","'isAbsolute' is defined but never used.","'isWhiteSpaceLike' is defined but never used.","'response' is assigned a value but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","'fetchError' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'BugsCreate' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'projectId'. Either include them or remove the dependency array.",["342"],"'Paper' is defined but never used.","'Typography' is defined but never used.","'formatDateTime' is defined but never used.","'priorityStyles' is defined but never used.","'statusStyles' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'description' is assigned a value but never used.","'priority' is assigned a value but never used.","'createdBy' is assigned a value but never used.","'updatedBy' is assigned a value but never used.","'closedBy' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'createStyles' is defined but never used.","'Theme' is defined but never used.","'withStyles' is defined but never used.","'WithStyles' is defined but never used.","'DialogActions' is defined but never used.","'Fab' is defined but never used.","'isMobile' is assigned a value but never used.","'Fragment' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'Avatar' is defined but never used.","'Chip' is defined but never used.","'InputAdornment' is defined but never used.",["343"],"'makeStyles' is defined but never used.","'Icon' is defined but never used.","'useMediaQuery' is defined but never used.","'members' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'useTheme' is defined but never used.","'isResolved' is assigned a value but never used.","'IconButton' is defined but never used.","'MenuItem' is defined but never used.","'classes' is assigned a value but never used.","'BugPayload' is defined but never used.","'DialogContent' is defined but never used.","'SortIcon' is defined but never used.","'SearchIcon' is defined but never used.","'ClearIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"344","fix":"348"},"Update the dependencies array to be: [dispatch]",{"range":"349","text":"350"},"Update the dependencies array to be: [dispatch, projectId]",{"range":"351","text":"352"},{"range":"353","text":"350"},[461,463],"[dispatch]",[1644,1646],"[dispatch, projectId]",[1837,1839]]