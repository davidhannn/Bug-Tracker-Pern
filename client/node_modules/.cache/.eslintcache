[{"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\index.tsx":"1","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\store.ts":"2","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\App.tsx":"3","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\projectSlice.ts":"4","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\authSlice.ts":"5","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\usersSlice.ts":"6","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\bugSlice.ts":"7","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\muiStyles.ts":"8","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\Routes.tsx":"9","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\auth.ts":"10","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\projects.ts":"11","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\bug.ts":"12","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\users.ts":"13","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\register\\registerpage.component.tsx":"14","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\create-project\\createprojectpage.component.tsx":"15","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\login-page\\loginpage.component.tsx":"16","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\home-page\\homepage.component.tsx":"17","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\project-page\\projectpage.component.tsx":"18","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\bug-page\\bugpage.component.tsx":"19","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\navbar\\navbar.component.tsx":"20","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\backendUrl.ts":"21","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\sortProject.ts":"22","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table\\projects-table.component.tsx":"23","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\spinner\\spinner.component.tsx":"24","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\form-dialog\\form-dialog.component.tsx":"25","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-search-sort\\projects-search-sort.component.tsx":"26","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-form\\project-form.component.tsx":"27","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table-mobile\\projects-table-mobile.component.tsx":"28","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table\\bugs-table.component.tsx":"29","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table-mobile\\bugs-table-mobile.component.tsx":"30","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-header\\project-header.component.tsx":"31","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details\\bug-details.component.tsx":"32","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details-mobile\\bug-details-mobile.component.tsx":"33","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\confirm-dialog\\confirm-dialog.component.tsx":"34","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-form\\bug-form.component.tsx":"35","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\dialogStyles.ts":"36","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\buttonStyles.ts":"37","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\helper.ts":"38","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\sort-bar\\sort-bar.component.tsx":"39","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\search-bar\\search-bar.component.tsx":"40"},{"size":397,"mtime":1624414161759,"results":"41","hashOfConfig":"42"},{"size":679,"mtime":1624414161766,"results":"43","hashOfConfig":"42"},{"size":772,"mtime":1624418372773,"results":"44","hashOfConfig":"42"},{"size":4082,"mtime":1624414161765,"results":"45","hashOfConfig":"42"},{"size":2117,"mtime":1624414161765,"results":"46","hashOfConfig":"42"},{"size":995,"mtime":1624414161766,"results":"47","hashOfConfig":"42"},{"size":4291,"mtime":1624414161765,"results":"48","hashOfConfig":"42"},{"size":5766,"mtime":1624414161769,"results":"49","hashOfConfig":"42"},{"size":2020,"mtime":1624414161748,"results":"50","hashOfConfig":"42"},{"size":843,"mtime":1624414161767,"results":"51","hashOfConfig":"42"},{"size":1374,"mtime":1624414161768,"results":"52","hashOfConfig":"42"},{"size":1428,"mtime":1624414161767,"results":"53","hashOfConfig":"42"},{"size":324,"mtime":1624414161768,"results":"54","hashOfConfig":"42"},{"size":3195,"mtime":1624414161763,"results":"55","hashOfConfig":"42"},{"size":2519,"mtime":1624414161760,"results":"56","hashOfConfig":"42"},{"size":2590,"mtime":1624414161762,"results":"57","hashOfConfig":"42"},{"size":2942,"mtime":1624414161762,"results":"58","hashOfConfig":"42"},{"size":2346,"mtime":1624414161763,"results":"59","hashOfConfig":"42"},{"size":3839,"mtime":1624414161760,"results":"60","hashOfConfig":"42"},{"size":1548,"mtime":1624414161753,"results":"61","hashOfConfig":"42"},{"size":91,"mtime":1624504170977,"results":"62","hashOfConfig":"42"},{"size":958,"mtime":1624414161770,"results":"63","hashOfConfig":"42"},{"size":3100,"mtime":1624414161757,"results":"64","hashOfConfig":"42"},{"size":537,"mtime":1624414161758,"results":"65","hashOfConfig":"42"},{"size":2312,"mtime":1624414161752,"results":"66","hashOfConfig":"42"},{"size":1948,"mtime":1624414161756,"results":"67","hashOfConfig":"42"},{"size":5387,"mtime":1624414161755,"results":"68","hashOfConfig":"42"},{"size":1863,"mtime":1624414161756,"results":"69","hashOfConfig":"42"},{"size":3459,"mtime":1624414161751,"results":"70","hashOfConfig":"42"},{"size":2601,"mtime":1624414161751,"results":"71","hashOfConfig":"42"},{"size":3093,"mtime":1624414161755,"results":"72","hashOfConfig":"42"},{"size":2065,"mtime":1624414161749,"results":"73","hashOfConfig":"42"},{"size":2223,"mtime":1624414161749,"results":"74","hashOfConfig":"42"},{"size":2129,"mtime":1624414161752,"results":"75","hashOfConfig":"42"},{"size":4004,"mtime":1624414161750,"results":"76","hashOfConfig":"42"},{"size":589,"mtime":1624414161769,"results":"77","hashOfConfig":"42"},{"size":863,"mtime":1624414161768,"results":"78","hashOfConfig":"42"},{"size":176,"mtime":1624414161770,"results":"79","hashOfConfig":"42"},{"size":960,"mtime":1624414161758,"results":"80","hashOfConfig":"42"},{"size":682,"mtime":1624414161757,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b62o7",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\index.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\store.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\App.tsx",["187","188","189","190","191","192"],"import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Routes from './Routes';\r\nimport Axios from 'axios';\r\nimport backendUrl from './backendUrl';\r\n\r\nimport { autoLogin, selectAuthState } from './redux/slices/authSlice';\r\nimport classes from '*.module.css';\r\nimport { useBodyStyles } from './styles/muiStyles';\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useBodyStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(autoLogin());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.body}>\r\n        <Routes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\projectSlice.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\authSlice.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\usersSlice.ts",["193"],"import { AppThunk } from './../store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { User } from '../types';\r\nimport authService from '../../services/auth';\r\nimport usersService from '../../services/users';\r\n\r\ninterface InitialUsersState {\r\n  users: User[];\r\n}\r\n\r\nconst initialState: InitialUsersState = {\r\n  users: [],\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setUsers: (state, action: PayloadAction<User[]>) => {\r\n      state.users = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUsers } = usersSlice.actions;\r\n\r\nexport const getUsers = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const allUsers = await usersService.getUsers();\r\n      dispatch(setUsers(allUsers));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectUsersState = (state: RootState) => state.users;\r\n\r\nexport default usersSlice.reducer;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\redux\\slices\\bugSlice.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\muiStyles.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\Routes.tsx",["194","195"],"import { useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAuthState } from './redux/slices/authSlice';\r\n\r\nimport CreateProjectPage from './pages/create-project/createprojectpage.component';\r\nimport RegisterPage from './pages/register/registerpage.component';\r\nimport LoginPage from './pages/login-page/loginpage.component';\r\nimport HomePage from './pages/home-page/homepage.component';\r\nimport ProjectPage from './pages/project-page/projectpage.component';\r\nimport BugPage from './pages/bug-page/bugpage.component';\r\n\r\nimport Navbar from './components/navbar/navbar.component';\r\nimport Axios from 'axios';\r\nimport backendUrl from './backendUrl';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Container, useMediaQuery } from '@material-ui/core';\r\n\r\nconst Routes = () => {\r\n  const { user } = useSelector(selectAuthState);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Container disableGutters={isMobile}>\r\n      <BrowserRouter>\r\n        {user ? <Navbar /> : null}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {user ? <HomePage /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n          <Route exact path=\"/register\" component={RegisterPage} />\r\n          <Route exact path=\"/login\">\r\n            {!user ? <LoginPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route exact path=\"/createProject\">\r\n            {user ? <CreateProjectPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route exact path=\"/projects/:projectId\">\r\n            {user ? <ProjectPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route exact path=\"/projects/:projectId/bugs/:bugId\">\r\n            {user ? <BugPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\auth.ts",["196"],"import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\ninterface Credentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst login = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst register = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/register`, credentials, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst verify = async () => {\r\n  const response = await Axios.get(`${backendUrl}/verify`, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst logout = async () => {\r\n  const response = await Axios.get(`${backendUrl}/logout`);\r\n};\r\nconst authService = { login, logout, verify, register };\r\n\r\nexport default authService;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\projects.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\bug.ts",["197"],"import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\nimport { BugPayload } from '../redux/types';\r\n\r\nconst getBugs = async (projectId: string) => {\r\n  const response = await Axios.get(`${backendUrl}/projects/${projectId}/bugs`, {\r\n    withCredentials: true,\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst createBug = async (projectId: string, bugData: BugPayload) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs`,\r\n    bugData,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.delete(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}`,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst closeBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/close`,\r\n    null,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst reopenBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/reopen`,\r\n    null,\r\n    { withCredentials: true }\r\n  );\r\n};\r\nconst bugService = { getBugs, createBug, deleteBug, closeBug, reopenBug };\r\n\r\nexport default bugService;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\services\\users.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\register\\registerpage.component.tsx",["198","199","200","201","202"],"import React, { useState, Fragment } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { registerUser } from '../../redux/slices/authSlice';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextField, Paper, Typography, Button } from '@material-ui/core';\r\n\r\nimport { authPageStyles } from '../../styles/muiStyles';\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst RegisterPage = () => {\r\n  const classes = authPageStyles();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const [username, setUsername] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      console.log('error, passwords not matching');\r\n    }\r\n    dispatch(registerUser({ username, password }));\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.body} elevation={2}>\r\n        <Typography variant=\"h4\" style={{ marginBottom: '2rem' }}>\r\n          Register Page\r\n        </Typography>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={username}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUsername(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={password}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setPassword(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Confirm Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={confirmPassword}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setConfirmPassword(e.target.value)\r\n            }\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n          >\r\n            Register!\r\n          </Button>\r\n          <Typography\r\n            style={{\r\n              marginTop: '1rem',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            Already have an account? <a href=\"/login\">Log in</a>\r\n          </Typography>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\create-project\\createprojectpage.component.tsx",["203","204","205","206","207"],"import { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport MemberDropdown from '../../components/member-dropdown/member-dropdown.component';\r\n\r\nimport { User } from '../../redux/types';\r\nimport { createNewProject } from '../../redux/slices/projectSlice';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 500,\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst CreateProjectPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector(selectUsersState);\r\n  const classes = useStyles();\r\n\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [name, setName] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\r\n    setMembers(selectedOption.map((option) => option.id));\r\n  };\r\n\r\n  const handleCreateProject = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(createNewProject({ name, members }));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleCreateProject}>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Project Name\"\r\n        variant=\"outlined\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          setName(e.target.value)\r\n        }\r\n      />\r\n      {/* <MemberDropdown /> */}\r\n      {users && (\r\n        <Autocomplete\r\n          multiple\r\n          id=\"tags-outlined\"\r\n          onChange={selectMembersOnChange}\r\n          options={users}\r\n          getOptionLabel={(user) => user && user.username}\r\n          defaultValue={[]}\r\n          filterSelectedOptions\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Select Members\"\r\n              placeholder=\"Favorites\"\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n      <button>Create Project</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateProjectPage;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\login-page\\loginpage.component.tsx",["208","209","210","211","212","213","214"],"import React, { useState, Fragment } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextField, Paper, Typography, Button } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport backendUrl from '../../backendUrl';\r\n\r\nimport { login } from '../../redux/slices/authSlice';\r\n\r\nimport { authPageStyles } from '../../styles/muiStyles';\r\n\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst LoginPage = () => {\r\n  const classes = authPageStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      dispatch(login({ username, password }));\r\n      history.push('/');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.body} elevation={2}>\r\n        <Typography variant=\"h4\" style={{ marginBottom: '2rem' }}>\r\n          Login Page\r\n        </Typography>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={username}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUsername(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={password}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setPassword(e.target.value)\r\n            }\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n          >\r\n            Login!\r\n          </Button>\r\n          <Typography style={{ marginTop: '1rem' }}>\r\n            Don't have an account? <a href=\"/register\">Register Here</a>\r\n          </Typography>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\home-page\\homepage.component.tsx",["215","216","217","218","219"],"import { useEffect, useState, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Paper, useMediaQuery } from '@material-ui/core';\r\n\r\nimport ProjectsTable from '../../components/projects-table/projects-table.component';\r\n// import ProjectButton from '../../components/project-button/project-button.component';\r\n// import ProjectHeader from '../../components/project-header/project-header.component';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\n// import ProjectCreate from '../../components/project-create/project-create.component';\r\n\r\nimport FormDialog from '../../components/form-dialog/form-dialog.component';\r\nimport ProjectForm from '../../components/project-form/project-form.component';\r\nimport ProjectsSearchSort from '../../components/projects-search-sort/projects-search-sort.component';\r\n\r\nimport { fetchProjects } from '../../redux/slices/projectSlice';\r\n\r\nimport { selectProjectsState } from '../../redux/slices/projectSlice';\r\n\r\nimport { useHomePageStyles } from '../../styles/muiStyles';\r\nimport sortProjects from '../../utils/sortProject';\r\n\r\nimport Axios from 'axios';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport ProjectsTableMobile from '../../components/projects-table-mobile/projects-table-mobile.component';\r\n\r\nconst HomePage = () => {\r\n  const { projects, fetchStatus, fetchError, sortBy } =\r\n    useSelector(selectProjectsState);\r\n  const classes = useHomePageStyles();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const filteredSortedProjects = sortProjects(\r\n    projects.filter((project) =>\r\n      project.name.toLowerCase().includes(searchText.toLowerCase())\r\n    ),\r\n    sortBy\r\n  );\r\n\r\n  useEffect(() => {\r\n    // dispatch(fetchProjects());\r\n  }, [projects]);\r\n\r\n  const projectDisplay = () => {\r\n    if (fetchStatus === 'loading') {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <div className={classes.projectsListTable}>\r\n          {!isMobile ? (\r\n            <ProjectsTable projects={filteredSortedProjects} />\r\n          ) : (\r\n            <ProjectsTableMobile projects={filteredSortedProjects} />\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.body} elevation={3}>\r\n        <FormDialog\r\n          title=\"Create Project\"\r\n          buttonType={{ type: 'normal', text: 'Create Project', icon: AddIcon }}\r\n        >\r\n          <ProjectForm editMode=\"project\" />\r\n        </FormDialog>\r\n        <ProjectsSearchSort\r\n          searchText={searchText}\r\n          setSearchText={setSearchText}\r\n          isMobile={isMobile}\r\n        />\r\n        {projectDisplay()}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\project-page\\projectpage.component.tsx",["220","221"],"import { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { RootState } from '../../redux/store';\r\nimport BugsTable from '../../components/bugs-table/bugs-table.component';\r\nimport BugsCreate from '../../components/bugs-create/bugs-create.component';\r\nimport ProjectHeader from '../../components/project-header/project-header.component';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { selectProjectById } from '../../redux/slices/projectSlice';\r\nimport {\r\n  fetchBugs,\r\n  selectBugsStateForProject,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugSlice';\r\n\r\nimport BugForm from '../../components/bug-form/bug-form.component';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\nimport FormDialog from '../../components/form-dialog/form-dialog.component';\r\nimport BugsTableMobile from '../../components/bugs-table-mobile/bugs-table-mobile.component';\r\n\r\nimport { useTheme, useMediaQuery } from '@material-ui/core';\r\ninterface ParamTypes {\r\n  projectId: string;\r\n}\r\n\r\nconst ProjectPage = () => {\r\n  const { projectId } = useParams<ParamTypes>();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const currentProject = useSelector((state: RootState) =>\r\n    selectProjectById(state, projectId)\r\n  );\r\n\r\n  const { fetchStatus } = useSelector(selectBugsState);\r\n\r\n  const bugs = useSelector((state: RootState) =>\r\n    selectBugsStateForProject(state, projectId)\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBugs(projectId));\r\n  }, []);\r\n\r\n  const bugDisplay = () => {\r\n    if (fetchStatus === true) {\r\n      return <Spinner />;\r\n    } else {\r\n      return !isMobile ? (\r\n        <BugsTable projectId={projectId} />\r\n      ) : (\r\n        <BugsTableMobile bugs={bugs} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {currentProject && currentProject ? (\r\n        <ProjectHeader currentProject={currentProject} />\r\n      ) : null}\r\n      <FormDialog\r\n        title=\"Add a Bug\"\r\n        buttonType={{ type: 'normal', text: 'Add a Bug', icon: AddIcon }}\r\n      >\r\n        <BugForm editMode=\"add\" projectId={projectId} />\r\n      </FormDialog>\r\n      {bugDisplay()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\pages\\bug-page\\bugpage.component.tsx",["222","223","224","225","226","227","228","229","230","231","232","233","234"],"import { Fragment } from 'react';\r\nimport { RootState } from '../../redux/store';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport {\r\n  selectBugById,\r\n  deleteBug,\r\n  resolveBug,\r\n} from '../../redux/slices/bugSlice';\r\n\r\nimport BugDetailsMobile from '../../components/bug-details-mobile/bug-details-mobile.component';\r\nimport BugDetails from '../../components/bug-details/bug-details.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport { useBugPageStyles } from '../../styles/muiStyles';\r\n\r\nimport ConfirmDialog from '../../components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\n\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\ninterface ParamTypes {\r\n  projectId: string;\r\n  bugId: string;\r\n}\r\n\r\nconst BugPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { bugId, projectId } = useParams<ParamTypes>();\r\n  const { user } = useSelector(selectAuthState);\r\n  const bug = useSelector((state: RootState) =>\r\n    selectBugById(state, bugId, projectId)\r\n  );\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const classes = useBugPageStyles();\r\n\r\n  if (!bug) {\r\n    return (\r\n      <div>\r\n        <p>No bugs</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log(bug);\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  const isAdmin = user?.id === bug?.createdBy.id;\r\n\r\n  const handleBugDelete = () => {\r\n    dispatch(deleteBug(projectId, bugId));\r\n    history.push(`/projects/${projectId}`);\r\n  };\r\n\r\n  const handleBugReopen = () => {\r\n    dispatch(resolveBug(projectId, bugId, 'reopen'));\r\n  };\r\n\r\n  const handleBugClose = () => {\r\n    dispatch(resolveBug(projectId, bugId, 'close'));\r\n  };\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Delete Bug\"\r\n            bodyContent=\"Do you want to permanently delete your bug?\"\r\n            buttonText=\"Delete Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Bug',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleBugDelete}\r\n          />\r\n        </div>\r\n        {isResolved ? (\r\n          <ConfirmDialog\r\n            title=\"Re-open Bug\"\r\n            bodyContent=\"Do you want to re-open your bug?\"\r\n            buttonText=\"Re-open Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Re-open Bug',\r\n              icon: RedoIcon,\r\n            }}\r\n            actionFunction={handleBugReopen}\r\n          ></ConfirmDialog>\r\n        ) : (\r\n          <ConfirmDialog\r\n            title=\"Close Bug\"\r\n            bodyContent=\"Do you want to close out your bug?\"\r\n            buttonText=\"Close Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Close Bug',\r\n              icon: DoneOutlineIcon,\r\n            }}\r\n            actionFunction={handleBugClose}\r\n          ></ConfirmDialog>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isMobile ? <BugDetails bug={bug} /> : <BugDetailsMobile bug={bug} />}\r\n      <div className={classes.buttons}>{adminButtons()}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BugPage;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\navbar\\navbar.component.tsx",["235","236","237","238","239"],"import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { navStyles } from '../../styles/muiStyles';\r\nimport { logout } from '../../redux/slices/authSlice';\r\n\r\nconst Navbar = () => {\r\n  const classes = navStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Bug Tracker\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\backendUrl.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\sortProject.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table\\projects-table.component.tsx",["240","241","242","243","244","245"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nimport { selectProjectsState } from '../../redux/slices/projectSlice';\r\nimport { ProjectState } from '../../redux/types';\r\nimport { useTableStyles } from '../../styles/muiStyles';\r\n\r\nconst ProjectsTable: React.FC<{ projects: ProjectState[] }> = ({\r\n  projects,\r\n}) => {\r\n  const classes = useTableStyles();\r\n  const history = useHistory();\r\n  // const { projects } = useSelector(selectProjectsState);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Project Name</TableCell>\r\n              <TableCell align=\"right\">Bugs</TableCell>\r\n              <TableCell align=\"right\">Members</TableCell>\r\n              <TableCell align=\"right\">Admin</TableCell>\r\n              <TableCell align=\"right\">Added</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {projects &&\r\n              projects.map((project, i) => (\r\n                <TableRow key={project.id}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    onClick={() => history.push(`/projects/${project.id}`)}\r\n                    className={classes.clickableCell}\r\n                  >\r\n                    {project.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <BugReportIcon />\r\n                    {project && project.bugs.length}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <PersonIcon />\r\n\r\n                    {project && project.members.length}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {project && project.createdBy.username}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {/* {project.createdBy[0]} */}\r\n                    {formatDateTime(project.createdAt)}\r\n                  </TableCell>\r\n                  {/* <StyledTableCell align=\"right\">{project.carbs}</StyledTableCell> */}\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsTable;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\spinner\\spinner.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\form-dialog\\form-dialog.component.tsx",["246","247","248","249","250","251","252","253","254"],"import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n  Paper,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\nimport { ButtonTypes } from '../types';\r\n\r\nconst FormDialog: React.FC<{\r\n  title: string;\r\n  buttonType: ButtonTypes;\r\n  children: React.ReactNode;\r\n}> = ({ title, buttonType, children }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'icon') {\r\n      return (\r\n        <IconButton color={buttonType.color} onClick={handleClickOpen}>\r\n          <buttonType.icon fontSize={buttonType.iconSize} />\r\n        </IconButton>\r\n      );\r\n    } else if (buttonType.type === 'menu') {\r\n      return (\r\n        <MenuItem onClick={handleClickOpen}>\r\n          <buttonType.icon style={buttonType.iconStyle} />\r\n          {buttonType.text}\r\n        </MenuItem>\r\n      );\r\n    } else if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'inline' }}>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        classes={{ paper: classes.dialogWrapper }}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>{children}</DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDialog;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-search-sort\\projects-search-sort.component.tsx",["255"],"import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SearchBar from '../search-bar/search-bar.component';\r\nimport SortBar from '../sort-bar/sort-bar.component';\r\n\r\nimport { ProjectSortValues } from '../../redux/types';\r\nimport {\r\n  sortProjectsBy,\r\n  selectProjectsState,\r\n} from '../../redux/slices/projectSlice';\r\n\r\nimport { useSearchSortStyles } from '../../styles/muiStyles';\r\n\r\nconst sortItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'most-bugs', label: 'Most Bugs' },\r\n  { value: 'least-bugs', label: 'Least Bugs' },\r\n  { value: 'most-members', label: 'Most Members' },\r\n  { value: 'least-members', label: 'Least Members' },\r\n];\r\n\r\nconst ProjectsSearchSort: React.FC<{\r\n  searchText: string;\r\n  setSearchText: (searchText: string) => void;\r\n  isMobile: boolean;\r\n}> = ({ searchText, setSearchText, isMobile }) => {\r\n  const classes = useSearchSortStyles();\r\n  const dispatch = useDispatch();\r\n  const { sortBy } = useSelector(selectProjectsState);\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    const selectedValue = e.target.value as ProjectSortValues;\r\n    dispatch(sortProjectsBy(selectedValue));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.inputWrapper}>\r\n        <div className={classes.searchBar}>\r\n          <SearchBar\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n        <div className={classes.sortBar}>\r\n          <SortBar\r\n            handleSortChange={handleSortChange}\r\n            sortItems={sortItems}\r\n            sortBy={sortBy}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsSearchSort;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-form\\project-form.component.tsx",["256","257","258","259","260","261","262"],"import { useState, useEffect, Fragment } from 'react';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { editProjectName } from '../../redux/slices/projectSlice';\r\n\r\nimport { User } from '../../redux/types';\r\nimport { createNewProject } from '../../redux/slices/projectSlice';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\ninterface CreateProject {\r\n  editMode: 'project';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId?: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface AddMembers {\r\n  editMode: 'members';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface EditProjectName {\r\n  editMode: 'name';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentMembers?: string[];\r\n  closeDialog?: () => void;\r\n}\r\n\r\ntype ProjectFormType = CreateProject | EditProjectName | AddMembers;\r\n\r\nconst ProjectForm: React.FC<ProjectFormType> = ({\r\n  editMode,\r\n  currentName,\r\n  currentMembers,\r\n  projectId,\r\n  closeDialog,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector(selectUsersState);\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [name, setName] = useState<string>('');\r\n  const [projectName, setProjectName] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\r\n    setMembers(selectedOption.map((option) => option.id));\r\n  };\r\n\r\n  const handleCreateProject = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(createNewProject({ name, members }, closeDialog));\r\n  };\r\n\r\n  const handleEditProjectName = () => {\r\n    dispatch(editProjectName(projectId as string, projectName));\r\n  };\r\n\r\n  const handleAddMembers = () => {};\r\n\r\n  return (\r\n    <form\r\n      onSubmit={\r\n        editMode === 'project'\r\n          ? handleCreateProject\r\n          : editMode === 'name'\r\n          ? handleEditProjectName\r\n          : handleAddMembers\r\n      }\r\n    >\r\n      {editMode === 'project' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Project Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n      {editMode === 'name' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Edit Project Name\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            defaultValue={currentName}\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      {editMode === 'members' ? (\r\n        <Fragment>\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'name'\r\n          ? 'Edit Project Name'\r\n          : editMode === 'project'\r\n          ? 'Add Project'\r\n          : editMode === 'members'\r\n          ? 'Add Members'\r\n          : null}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\projects-table-mobile\\projects-table-mobile.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table\\bugs-table.component.tsx",["263","264","265","266"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { selectBugsState } from '../../redux/slices/bugSlice';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\nimport { useTableStyles } from '../../styles/muiStyles';\r\n\r\nconst BugsTable = ({ projectId }: { projectId: string }) => {\r\n  const classes = useTableStyles();\r\n  const history = useHistory();\r\n  const { bugs } = useSelector(selectBugsState);\r\n\r\n  const singleBugs = bugs[projectId];\r\n  console.log(singleBugs);\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell align=\"center\">Priority</TableCell>\r\n              <TableCell align=\"center\">Status</TableCell>\r\n              <TableCell align=\"right\">Added</TableCell>\r\n              {/* <TableCell align=\"right\">Updated</TableCell> */}\r\n              <TableCell align=\"right\">Created By</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {singleBugs &&\r\n              singleBugs.map((bug) => (\r\n                <TableRow key={bug.id}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.clickableCell}\r\n                    onClick={() =>\r\n                      history.push(`/projects/${projectId}/bugs/${bug.id}`)\r\n                    }\r\n                  >\r\n                    {bug.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div\r\n                      style={{\r\n                        ...priorityStyles(bug.priority),\r\n                        textTransform: 'capitalize',\r\n                        margin: '0 auto',\r\n                      }}\r\n                    >\r\n                      {bug.priority}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div\r\n                      style={{\r\n                        ...statusStyles(bug.isResolved),\r\n                        margin: '0 auto',\r\n                      }}\r\n                    >\r\n                      {bug.isResolved ? 'Closed' : 'Open'}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {formatDateTime(bug.createdAt)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{bug.createdBy.username}</TableCell>\r\n                  {/* <TableCell align=\"right\">{bug.protein}</TableCell> */}\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsTable;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bugs-table-mobile\\bugs-table-mobile.component.tsx",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\project-header\\project-header.component.tsx",["267","268","269","270"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Icon, Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteProject } from '../../redux/slices/projectSlice';\r\nimport { ProjectState } from '../../redux/types';\r\nimport ConfirmDialog from '../confirm-dialog/confirm-dialog.component';\r\nimport FormDialog from '../form-dialog/form-dialog.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport ProjectForm from '../project-form/project-form.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst ProjectHeader: React.FC<{ currentProject: ProjectState }> = ({\r\n  currentProject,\r\n}) => {\r\n  const classes = useHeaderStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { user } = useSelector(selectAuthState);\r\n  const { createdAt, createdBy, id, members, name, updatedAt } = currentProject;\r\n\r\n  const isAdmin = user?.id === createdBy.id;\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Confirm Delete Project\"\r\n            bodyContent=\"Do you want to permanently delete your project?\"\r\n            buttonText=\"Delete Project\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Project',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleProjectDelete}\r\n          />\r\n        </div>\r\n        <FormDialog\r\n          title=\"Add Project Members\"\r\n          buttonType={{\r\n            type: 'normal',\r\n            text: 'Add Members',\r\n            icon: GroupIcon,\r\n          }}\r\n        >\r\n          <ProjectForm editMode=\"members\" projectId={id} />\r\n        </FormDialog>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleProjectDelete = () => {\r\n    dispatch(deleteProject(id, history));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.headerPaper}>\r\n        <div className={classes.title}>\r\n          <Typography style={{ fontSize: '2rem', fontWeight: 'bold' }}>\r\n            {name}\r\n          </Typography>\r\n          {isAdmin ? (\r\n            <FormDialog\r\n              title=\"Edit Project Name\"\r\n              buttonType={{ type: 'icon', icon: EditIcon, size: 'small' }}\r\n            >\r\n              <ProjectForm editMode=\"name\" currentName={name} projectId={id} />\r\n            </FormDialog>\r\n          ) : null}\r\n        </div>\r\n\r\n        <Typography>Admin: {createdBy.username}</Typography>\r\n        <Typography>Created On: {formatDateTime(createdAt)}</Typography>\r\n\r\n        <div className={classes.adminButtons}>{adminButtons()}</div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectHeader;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details\\bug-details.component.tsx",["271","272","273","274","275","276","277"],"import React from 'react';\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport { BugState } from '../../redux/types';\r\nimport { useBugPageStyles } from '../../styles/muiStyles';\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\nconst BugDetails: React.FC<{ bug: BugState }> = ({ bug }) => {\r\n  const classes = useBugPageStyles();\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.body}>\r\n        <div>\r\n          <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n            Description\r\n          </Typography>\r\n          <Typography>{description}</Typography>\r\n        </div>\r\n        <div className={classes.details}>\r\n          <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n            Bug Details\r\n          </Typography>\r\n          <Typography>Created By: {createdBy.username}</Typography>\r\n          <Typography>Created On {bug && formatDateTime(createdAt)}</Typography>\r\n          <Typography>\r\n            Priority:\r\n            <div\r\n              style={{\r\n                ...priorityStyles(bug.priority),\r\n                textTransform: 'capitalize',\r\n                display: 'inline',\r\n                padding: '0.15em 0.4em',\r\n              }}\r\n            >\r\n              {priority}\r\n            </div>\r\n          </Typography>\r\n\r\n          <Typography>\r\n            Status:\r\n            <div\r\n              style={{\r\n                ...statusStyles(bug.isResolved),\r\n                display: 'inline',\r\n                padding: '0.15em 0.4em',\r\n              }}\r\n            >\r\n              {bug.isResolved ? 'Closed' : 'Open'}\r\n            </div>\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n      {/* <div className={classes.buttons}>{adminButtons()}</div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugDetails;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-details-mobile\\bug-details-mobile.component.tsx",["278","279","280","281","282","283","284"],"import React from 'react';\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport { BugState } from '../../redux/types';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\nconst BugDetailsMobile: React.FC<{ bug: BugState }> = ({ bug }) => {\r\n  const classes = useHeaderStyles();\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.mobileWrapper}>\r\n          <div className={classes.mobileDescription}>\r\n            <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n              Description\r\n            </Typography>\r\n            <Typography>{description}</Typography>\r\n          </div>\r\n          <div className={classes.mobileDescription}>\r\n            <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n              Bug Details\r\n            </Typography>\r\n            <Typography>Created By: {createdBy.username}</Typography>\r\n            <Typography>\r\n              Created On {bug && formatDateTime(createdAt)}\r\n            </Typography>\r\n            <Typography>\r\n              Priority:\r\n              <div\r\n                style={{\r\n                  ...priorityStyles(bug.priority),\r\n                  textTransform: 'capitalize',\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {priority}\r\n              </div>\r\n            </Typography>\r\n\r\n            <Typography>\r\n              Status:\r\n              <div\r\n                style={{\r\n                  ...statusStyles(bug.isResolved),\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {bug.isResolved ? 'Closed' : 'Open'}\r\n              </div>\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugDetailsMobile;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\confirm-dialog\\confirm-dialog.component.tsx",["285","286","287","288","289","290","291","292"],"import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n} from '@material-ui/core';\r\n\r\nimport { ButtonTypes } from '../types';\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\n\r\nconst ConfirmDialog: React.FC<{\r\n  title: string;\r\n  bodyContent: string;\r\n  buttonText: string;\r\n  buttonType: ButtonTypes;\r\n  actionFunction: () => void;\r\n}> = ({ title, bodyContent, buttonText, buttonType, actionFunction }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAction = () => {\r\n    actionFunction();\r\n    handleClose();\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography>{bodyContent}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {buttonType.text}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\bug-form\\bug-form.component.tsx",["293","294","295","296","297","298","299","300"],"import { useState, Fragment } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createBug } from '../../redux/slices/bugSlice';\r\nimport { BugPayload, BugPriority } from '../../redux/types';\r\n\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n  DialogContent,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core';\r\n\r\ninterface AddBug {\r\n  editMode: 'add';\r\n  currentName?: string;\r\n  projectId?: string;\r\n  currentId?: string;\r\n  bugDescription?: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\ninterface UpdateBug {\r\n  editMode: 'update';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentId: string;\r\n  bugDescription: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\n\r\ntype BugFormTypes = UpdateBug | AddBug;\r\n\r\nconst BugForm: React.FC<BugFormTypes> = ({\r\n  editMode,\r\n  currentName,\r\n  currentId,\r\n  projectId,\r\n  bugDescription,\r\n  resolvedStatus,\r\n  priorityStatus,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [priority, setPriority] = useState<BugPriority>('Low');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setPriority(event.target.value as BugPriority);\r\n  };\r\n\r\n  const handleAddBug = () => {\r\n    console.log('testing');\r\n    dispatch(createBug(projectId as string, { name, description, priority }));\r\n  };\r\n\r\n  const handleEditBug = () => {\r\n    console.log('testing');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={editMode === 'add' ? handleAddBug : handleEditBug}>\r\n      {editMode === 'add' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Bug Title\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            // multiline={true}\r\n            // rows={2}\r\n            fullWidth\r\n            className={classes.inputField}\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setDescription(e.target.value)\r\n            }\r\n          />\r\n          <FormControl component=\"fieldset\" className={classes.radioGroupForm}>\r\n            <RadioGroup\r\n              row\r\n              defaultValue=\"low\"\r\n              value={priority}\r\n              onChange={handleChange}\r\n              className={classes.radioGroup}\r\n            >\r\n              <FormLabel component=\"legend\" className={classes.radioGroupLabel}>\r\n                Priority:\r\n              </FormLabel>\r\n\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel value=\"Low\" control={<Radio />} label=\"Low\" />\r\n                <FormControlLabel\r\n                  value=\"Medium\"\r\n                  control={<Radio />}\r\n                  label=\"Medium\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"High\"\r\n                  control={<Radio />}\r\n                  label=\"High\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Fragment>\r\n      ) : null}\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'add' ? 'Add a Bug' : 'Edit Bug '}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BugForm;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\dialogStyles.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\styles\\buttonStyles.ts",[],"C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\utils\\helper.ts",["301"],"import { format, formatDistanceToNowStrict } from 'date-fns';\r\n\r\nexport const formatDateTime = (date: Date) => {\r\n  return format(new Date(date), \"dd/MM/yy',' h':'mm a\");\r\n};\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\sort-bar\\sort-bar.component.tsx",["302","303"],"import React from 'react';\r\n\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\n\r\nconst SortBar: React.FC<{\r\n  handleSortChange: (e: React.ChangeEvent<{ value: unknown }>) => void;\r\n  sortItems: { value: string; label: string }[];\r\n  sortBy: string;\r\n  label: string;\r\n  size?: 'small' | 'medium';\r\n}> = ({ handleSortChange, sortItems, sortBy, label, size }) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" fullWidth size={size || 'medium'}>\r\n      <InputLabel>Sort {label} By</InputLabel>\r\n      <Select\r\n        value={sortBy}\r\n        onChange={handleSortChange}\r\n        label={`Sort ${label} By`}\r\n      >\r\n        {sortItems.map((item) => (\r\n          <MenuItem key={item.value} value={item.value}>\r\n            {item.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SortBar;\r\n","C:\\Users\\david\\Desktop\\Bug-Tracker-Pern\\client\\src\\components\\search-bar\\search-bar.component.tsx",["304","305","306"],"import React from 'react';\r\n\r\nimport { TextField, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst SearchBar: React.FC<{\r\n  searchText: string;\r\n  setSearchText: (searchText: string) => void;\r\n  label: string;\r\n  size?: 'small' | 'medium';\r\n}> = ({ searchText, setSearchText, label, size }) => {\r\n  return (\r\n    <TextField\r\n      value={searchText}\r\n      onChange={(e) => setSearchText(e.target.value)}\r\n      fullWidth\r\n      type=\"text\"\r\n      variant=\"outlined\"\r\n      size={size || 'medium'}\r\n      label={`Search ${label}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n",{"ruleId":"307","severity":1,"message":"308","line":2,"column":10,"nodeType":"309","messageId":"310","endLine":2,"endColumn":15},{"ruleId":"307","severity":1,"message":"311","line":3,"column":23,"nodeType":"309","messageId":"310","endLine":3,"endColumn":34},{"ruleId":"307","severity":1,"message":"312","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":18},{"ruleId":"307","severity":1,"message":"313","line":8,"column":21,"nodeType":"309","messageId":"310","endLine":8,"endColumn":36},{"ruleId":"307","severity":1,"message":"314","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":15},{"ruleId":"315","severity":1,"message":"316","line":20,"column":6,"nodeType":"317","endLine":20,"endColumn":8,"suggestions":"318"},{"ruleId":"307","severity":1,"message":"319","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":19},{"ruleId":"307","severity":1,"message":"320","line":14,"column":8,"nodeType":"309","messageId":"310","endLine":14,"endColumn":13},{"ruleId":"307","severity":1,"message":"312","line":15,"column":8,"nodeType":"309","messageId":"310","endLine":15,"endColumn":18},{"ruleId":"307","severity":1,"message":"321","line":29,"column":9,"nodeType":"309","messageId":"310","endLine":29,"endColumn":17},{"ruleId":"307","severity":1,"message":"321","line":50,"column":9,"nodeType":"309","messageId":"310","endLine":50,"endColumn":17},{"ruleId":"307","severity":1,"message":"322","line":1,"column":27,"nodeType":"309","messageId":"310","endLine":1,"endColumn":35},{"ruleId":"307","severity":1,"message":"323","line":4,"column":10,"nodeType":"309","messageId":"310","endLine":4,"endColumn":22},{"ruleId":"307","severity":1,"message":"324","line":4,"column":24,"nodeType":"309","messageId":"310","endLine":4,"endColumn":34},{"ruleId":"307","severity":1,"message":"325","line":4,"column":36,"nodeType":"309","messageId":"310","endLine":4,"endColumn":41},{"ruleId":"307","severity":1,"message":"326","line":11,"column":11,"nodeType":"309","messageId":"310","endLine":11,"endColumn":22},{"ruleId":"307","severity":1,"message":"327","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":12},{"ruleId":"307","severity":1,"message":"328","line":10,"column":8,"nodeType":"309","messageId":"310","endLine":10,"endColumn":14},{"ruleId":"307","severity":1,"message":"329","line":13,"column":8,"nodeType":"309","messageId":"310","endLine":13,"endColumn":22},{"ruleId":"307","severity":1,"message":"330","line":32,"column":9,"nodeType":"309","messageId":"310","endLine":32,"endColumn":16},{"ruleId":"315","severity":1,"message":"316","line":39,"column":6,"nodeType":"317","endLine":39,"endColumn":8,"suggestions":"331"},{"ruleId":"307","severity":1,"message":"322","line":1,"column":27,"nodeType":"309","messageId":"310","endLine":1,"endColumn":35},{"ruleId":"307","severity":1,"message":"323","line":3,"column":10,"nodeType":"309","messageId":"310","endLine":3,"endColumn":22},{"ruleId":"307","severity":1,"message":"324","line":3,"column":24,"nodeType":"309","messageId":"310","endLine":3,"endColumn":34},{"ruleId":"307","severity":1,"message":"325","line":3,"column":36,"nodeType":"309","messageId":"310","endLine":3,"endColumn":41},{"ruleId":"307","severity":1,"message":"320","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":13},{"ruleId":"307","severity":1,"message":"312","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":18},{"ruleId":"307","severity":1,"message":"326","line":13,"column":11,"nodeType":"309","messageId":"310","endLine":13,"endColumn":22},{"ruleId":"307","severity":1,"message":"322","line":1,"column":31,"nodeType":"309","messageId":"310","endLine":1,"endColumn":39},{"ruleId":"307","severity":1,"message":"332","line":17,"column":10,"nodeType":"309","messageId":"310","endLine":17,"endColumn":23},{"ruleId":"307","severity":1,"message":"320","line":24,"column":8,"nodeType":"309","messageId":"310","endLine":24,"endColumn":13},{"ruleId":"307","severity":1,"message":"333","line":29,"column":34,"nodeType":"309","messageId":"310","endLine":29,"endColumn":44},{"ruleId":"307","severity":1,"message":"334","line":32,"column":9,"nodeType":"309","messageId":"310","endLine":32,"endColumn":17},{"ruleId":"307","severity":1,"message":"335","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":18},{"ruleId":"315","severity":1,"message":"336","line":45,"column":6,"nodeType":"317","endLine":45,"endColumn":8,"suggestions":"337"},{"ruleId":"307","severity":1,"message":"338","line":6,"column":10,"nodeType":"309","messageId":"310","endLine":6,"endColumn":15},{"ruleId":"307","severity":1,"message":"339","line":6,"column":17,"nodeType":"309","messageId":"310","endLine":6,"endColumn":27},{"ruleId":"307","severity":1,"message":"340","line":16,"column":10,"nodeType":"309","messageId":"310","endLine":16,"endColumn":24},{"ruleId":"307","severity":1,"message":"341","line":26,"column":10,"nodeType":"309","messageId":"310","endLine":26,"endColumn":24},{"ruleId":"307","severity":1,"message":"342","line":26,"column":26,"nodeType":"309","messageId":"310","endLine":26,"endColumn":38},{"ruleId":"307","severity":1,"message":"343","line":55,"column":5,"nodeType":"309","messageId":"310","endLine":55,"endColumn":7},{"ruleId":"307","severity":1,"message":"344","line":56,"column":5,"nodeType":"309","messageId":"310","endLine":56,"endColumn":9},{"ruleId":"307","severity":1,"message":"345","line":57,"column":5,"nodeType":"309","messageId":"310","endLine":57,"endColumn":16},{"ruleId":"307","severity":1,"message":"346","line":58,"column":5,"nodeType":"309","messageId":"310","endLine":58,"endColumn":13},{"ruleId":"307","severity":1,"message":"347","line":60,"column":5,"nodeType":"309","messageId":"310","endLine":60,"endColumn":14},{"ruleId":"307","severity":1,"message":"348","line":61,"column":5,"nodeType":"309","messageId":"310","endLine":61,"endColumn":14},{"ruleId":"307","severity":1,"message":"349","line":62,"column":5,"nodeType":"309","messageId":"310","endLine":62,"endColumn":13},{"ruleId":"307","severity":1,"message":"350","line":63,"column":5,"nodeType":"309","messageId":"310","endLine":63,"endColumn":14},{"ruleId":"307","severity":1,"message":"323","line":4,"column":10,"nodeType":"309","messageId":"310","endLine":4,"endColumn":22},{"ruleId":"307","severity":1,"message":"324","line":4,"column":24,"nodeType":"309","messageId":"310","endLine":4,"endColumn":34},{"ruleId":"307","severity":1,"message":"325","line":4,"column":36,"nodeType":"309","messageId":"310","endLine":4,"endColumn":41},{"ruleId":"307","severity":1,"message":"351","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":18},{"ruleId":"307","severity":1,"message":"352","line":10,"column":8,"nodeType":"309","messageId":"310","endLine":10,"endColumn":16},{"ruleId":"307","severity":1,"message":"311","line":2,"column":10,"nodeType":"309","messageId":"310","endLine":2,"endColumn":21},{"ruleId":"307","severity":1,"message":"353","line":7,"column":3,"nodeType":"309","messageId":"310","endLine":7,"endColumn":13},{"ruleId":"307","severity":1,"message":"325","line":8,"column":3,"nodeType":"309","messageId":"310","endLine":8,"endColumn":8},{"ruleId":"307","severity":1,"message":"323","line":9,"column":3,"nodeType":"309","messageId":"310","endLine":9,"endColumn":15},{"ruleId":"307","severity":1,"message":"324","line":10,"column":3,"nodeType":"309","messageId":"310","endLine":10,"endColumn":13},{"ruleId":"307","severity":1,"message":"354","line":23,"column":10,"nodeType":"309","messageId":"310","endLine":23,"endColumn":29},{"ruleId":"307","severity":1,"message":"323","line":3,"column":3,"nodeType":"309","messageId":"310","endLine":3,"endColumn":15},{"ruleId":"307","severity":1,"message":"325","line":4,"column":3,"nodeType":"309","messageId":"310","endLine":4,"endColumn":8},{"ruleId":"307","severity":1,"message":"353","line":6,"column":3,"nodeType":"309","messageId":"310","endLine":6,"endColumn":13},{"ruleId":"307","severity":1,"message":"355","line":7,"column":3,"nodeType":"309","messageId":"310","endLine":7,"endColumn":13},{"ruleId":"307","severity":1,"message":"356","line":14,"column":3,"nodeType":"309","messageId":"310","endLine":14,"endColumn":16},{"ruleId":"307","severity":1,"message":"339","line":17,"column":3,"nodeType":"309","messageId":"310","endLine":17,"endColumn":13},{"ruleId":"307","severity":1,"message":"357","line":18,"column":3,"nodeType":"309","messageId":"310","endLine":18,"endColumn":6},{"ruleId":"307","severity":1,"message":"338","line":19,"column":3,"nodeType":"309","messageId":"310","endLine":19,"endColumn":8},{"ruleId":"307","severity":1,"message":"358","line":34,"column":9,"nodeType":"309","messageId":"310","endLine":34,"endColumn":17},{"ruleId":"307","severity":1,"message":"322","line":1,"column":17,"nodeType":"309","messageId":"310","endLine":1,"endColumn":25},{"ruleId":"307","severity":1,"message":"359","line":6,"column":3,"nodeType":"309","messageId":"310","endLine":6,"endColumn":11},{"ruleId":"307","severity":1,"message":"360","line":7,"column":3,"nodeType":"309","messageId":"310","endLine":7,"endColumn":17},{"ruleId":"307","severity":1,"message":"361","line":8,"column":3,"nodeType":"309","messageId":"310","endLine":8,"endColumn":15},{"ruleId":"307","severity":1,"message":"362","line":9,"column":3,"nodeType":"309","messageId":"310","endLine":9,"endColumn":9},{"ruleId":"307","severity":1,"message":"327","line":10,"column":3,"nodeType":"309","messageId":"310","endLine":10,"endColumn":7},{"ruleId":"307","severity":1,"message":"363","line":11,"column":3,"nodeType":"309","messageId":"310","endLine":11,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":71,"column":6,"nodeType":"317","endLine":71,"endColumn":8,"suggestions":"364"},{"ruleId":"307","severity":1,"message":"353","line":5,"column":3,"nodeType":"309","messageId":"310","endLine":5,"endColumn":13},{"ruleId":"307","severity":1,"message":"325","line":6,"column":3,"nodeType":"309","messageId":"310","endLine":6,"endColumn":8},{"ruleId":"307","severity":1,"message":"323","line":7,"column":3,"nodeType":"309","messageId":"310","endLine":7,"endColumn":15},{"ruleId":"307","severity":1,"message":"324","line":8,"column":3,"nodeType":"309","messageId":"310","endLine":8,"endColumn":13},{"ruleId":"307","severity":1,"message":"365","line":3,"column":10,"nodeType":"309","messageId":"310","endLine":3,"endColumn":14},{"ruleId":"307","severity":1,"message":"366","line":3,"column":35,"nodeType":"309","messageId":"310","endLine":3,"endColumn":48},{"ruleId":"307","severity":1,"message":"367","line":27,"column":37,"nodeType":"309","messageId":"310","endLine":27,"endColumn":44},{"ruleId":"307","severity":1,"message":"368","line":27,"column":52,"nodeType":"309","messageId":"310","endLine":27,"endColumn":61},{"ruleId":"307","severity":1,"message":"366","line":2,"column":29,"nodeType":"309","messageId":"310","endLine":2,"endColumn":42},{"ruleId":"307","severity":1,"message":"369","line":2,"column":44,"nodeType":"309","messageId":"310","endLine":2,"endColumn":52},{"ruleId":"307","severity":1,"message":"343","line":13,"column":5,"nodeType":"309","messageId":"310","endLine":13,"endColumn":7},{"ruleId":"307","severity":1,"message":"344","line":14,"column":5,"nodeType":"309","messageId":"310","endLine":14,"endColumn":9},{"ruleId":"307","severity":1,"message":"370","line":17,"column":5,"nodeType":"309","messageId":"310","endLine":17,"endColumn":15},{"ruleId":"307","severity":1,"message":"348","line":19,"column":5,"nodeType":"309","messageId":"310","endLine":19,"endColumn":14},{"ruleId":"307","severity":1,"message":"349","line":20,"column":5,"nodeType":"309","messageId":"310","endLine":20,"endColumn":13},{"ruleId":"307","severity":1,"message":"366","line":2,"column":29,"nodeType":"309","messageId":"310","endLine":2,"endColumn":42},{"ruleId":"307","severity":1,"message":"369","line":2,"column":44,"nodeType":"309","messageId":"310","endLine":2,"endColumn":52},{"ruleId":"307","severity":1,"message":"343","line":13,"column":5,"nodeType":"309","messageId":"310","endLine":13,"endColumn":7},{"ruleId":"307","severity":1,"message":"344","line":14,"column":5,"nodeType":"309","messageId":"310","endLine":14,"endColumn":9},{"ruleId":"307","severity":1,"message":"370","line":17,"column":5,"nodeType":"309","messageId":"310","endLine":17,"endColumn":15},{"ruleId":"307","severity":1,"message":"348","line":19,"column":5,"nodeType":"309","messageId":"310","endLine":19,"endColumn":14},{"ruleId":"307","severity":1,"message":"349","line":20,"column":5,"nodeType":"309","messageId":"310","endLine":20,"endColumn":13},{"ruleId":"307","severity":1,"message":"323","line":3,"column":3,"nodeType":"309","messageId":"310","endLine":3,"endColumn":15},{"ruleId":"307","severity":1,"message":"325","line":4,"column":3,"nodeType":"309","messageId":"310","endLine":4,"endColumn":8},{"ruleId":"307","severity":1,"message":"353","line":5,"column":3,"nodeType":"309","messageId":"310","endLine":5,"endColumn":13},{"ruleId":"307","severity":1,"message":"355","line":6,"column":3,"nodeType":"309","messageId":"310","endLine":6,"endColumn":13},{"ruleId":"307","severity":1,"message":"351","line":11,"column":3,"nodeType":"309","messageId":"310","endLine":11,"endColumn":13},{"ruleId":"307","severity":1,"message":"371","line":12,"column":3,"nodeType":"309","messageId":"310","endLine":12,"endColumn":11},{"ruleId":"307","severity":1,"message":"357","line":18,"column":3,"nodeType":"309","messageId":"310","endLine":18,"endColumn":6},{"ruleId":"307","severity":1,"message":"330","line":32,"column":9,"nodeType":"309","messageId":"310","endLine":32,"endColumn":16},{"ruleId":"307","severity":1,"message":"372","line":6,"column":10,"nodeType":"309","messageId":"310","endLine":6,"endColumn":20},{"ruleId":"307","severity":1,"message":"359","line":13,"column":3,"nodeType":"309","messageId":"310","endLine":13,"endColumn":11},{"ruleId":"307","severity":1,"message":"360","line":14,"column":3,"nodeType":"309","messageId":"310","endLine":14,"endColumn":17},{"ruleId":"307","severity":1,"message":"361","line":15,"column":3,"nodeType":"309","messageId":"310","endLine":15,"endColumn":15},{"ruleId":"307","severity":1,"message":"362","line":16,"column":3,"nodeType":"309","messageId":"310","endLine":16,"endColumn":9},{"ruleId":"307","severity":1,"message":"327","line":17,"column":3,"nodeType":"309","messageId":"310","endLine":17,"endColumn":7},{"ruleId":"307","severity":1,"message":"363","line":18,"column":3,"nodeType":"309","messageId":"310","endLine":18,"endColumn":17},{"ruleId":"307","severity":1,"message":"373","line":19,"column":3,"nodeType":"309","messageId":"310","endLine":19,"endColumn":16},{"ruleId":"307","severity":1,"message":"374","line":1,"column":18,"nodeType":"309","messageId":"310","endLine":1,"endColumn":43},{"ruleId":"307","severity":1,"message":"363","line":8,"column":3,"nodeType":"309","messageId":"310","endLine":8,"endColumn":17},{"ruleId":"307","severity":1,"message":"375","line":10,"column":8,"nodeType":"309","messageId":"310","endLine":10,"endColumn":16},{"ruleId":"307","severity":1,"message":"351","line":3,"column":21,"nodeType":"309","messageId":"310","endLine":3,"endColumn":31},{"ruleId":"307","severity":1,"message":"376","line":4,"column":8,"nodeType":"309","messageId":"310","endLine":4,"endColumn":18},{"ruleId":"307","severity":1,"message":"377","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":17},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'backendUrl' is defined but never used.","'selectAuthState' is defined but never used.","'classes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["378"],"'authService' is defined but never used.","'Axios' is defined but never used.","'response' is assigned a value but never used.","'Fragment' is defined but never used.","'createStyles' is defined but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'InputValues' is defined but never used.","'Chip' is defined but never used.","'Button' is defined but never used.","'MemberDropdown' is defined but never used.","'classes' is assigned a value but never used.",["379"],"'fetchProjects' is defined but never used.","'fetchError' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'BugsCreate' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'projectId'. Either include them or remove the dependency array.",["380"],"'Paper' is defined but never used.","'Typography' is defined but never used.","'formatDateTime' is defined but never used.","'priorityStyles' is defined but never used.","'statusStyles' is defined but never used.","'id' is assigned a value but never used.","'name' is assigned a value but never used.","'description' is assigned a value but never used.","'priority' is assigned a value but never used.","'createdBy' is assigned a value but never used.","'updatedBy' is assigned a value but never used.","'closedBy' is assigned a value but never used.","'createdAt' is assigned a value but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'withStyles' is defined but never used.","'selectProjectsState' is defined but never used.","'WithStyles' is defined but never used.","'DialogActions' is defined but never used.","'Fab' is defined but never used.","'isMobile' is assigned a value but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'Avatar' is defined but never used.","'InputAdornment' is defined but never used.",["381"],"'Icon' is defined but never used.","'useMediaQuery' is defined but never used.","'members' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'useTheme' is defined but never used.","'isResolved' is assigned a value but never used.","'MenuItem' is defined but never used.","'BugPayload' is defined but never used.","'DialogContent' is defined but never used.","'formatDistanceToNowStrict' is defined but never used.","'SortIcon' is defined but never used.","'SearchIcon' is defined but never used.","'ClearIcon' is defined but never used.",{"desc":"382","fix":"383"},{"desc":"382","fix":"384"},{"desc":"385","fix":"386"},{"desc":"382","fix":"387"},"Update the dependencies array to be: [dispatch]",{"range":"388","text":"389"},{"range":"390","text":"389"},"Update the dependencies array to be: [dispatch, projectId]",{"range":"391","text":"392"},{"range":"393","text":"389"},[599,601],"[dispatch]",[1218,1220],[1644,1646],"[dispatch, projectId]",[1837,1839]]