{"ast":null,"code":"import Axios from 'axios';\nimport backendUrl from '../backendUrl';\nlet token = null;\n\nconst setToken = newToken => {\n  token = newToken;\n};\n\nexport const setConfig = () => {\n  return {\n    headers: {\n      'x-auth-token': token\n    }\n  };\n};\n\nconst login = async credentials => {\n  const response = await Axios.post(`${backendUrl}/login`, credentials);\n  return response.data;\n};\n\nconst register = async credentials => {\n  const response = await Axios.post(`${backendUrl}/register`, credentials, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nconst verify = async () => {\n  const response = await Axios.get(`${backendUrl}/verify`, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nconst logout = async () => {\n  const response = await Axios.get(`${backendUrl}/logout`);\n};\n\nconst authService = {\n  login,\n  logout,\n  verify,\n  register,\n  setToken\n};\nexport default authService;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/services/auth.ts"],"names":["Axios","backendUrl","token","setToken","newToken","setConfig","headers","login","credentials","response","post","data","register","withCredentials","verify","get","logout","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AASA,IAAIC,KAAY,GAAG,IAAnB;;AAEA,MAAMC,QAAQ,GAAIC,QAAD,IAAsB;AACrCF,EAAAA,KAAK,GAAGE,QAAR;AACD,CAFD;;AAIA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,OAAO,EAAE;AAAE,sBAAgBJ;AAAlB;AADJ,GAAP;AAGD,CAJM;;AAMP,MAAMK,KAAK,GAAG,MAAOC,WAAP,IAAoC;AAChD,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAET,UAAW,QAAzB,EAAkCO,WAAlC,CAAvB;AACA,SAAOC,QAAQ,CAACE,IAAhB;AACD,CAHD;;AAKA,MAAMC,QAAQ,GAAG,MAAOJ,WAAP,IAAoC;AACnD,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAET,UAAW,WAAzB,EAAqCO,WAArC,EAAkD;AACvEK,IAAAA,eAAe,EAAE;AADsD,GAAlD,CAAvB;AAGA,SAAOJ,QAAQ,CAACE,IAAhB;AACD,CALD;;AAOA,MAAMG,MAAM,GAAG,YAAY;AACzB,QAAML,QAAQ,GAAG,MAAMT,KAAK,CAACe,GAAN,CAAW,GAAEd,UAAW,SAAxB,EAAkC;AACvDY,IAAAA,eAAe,EAAE;AADsC,GAAlC,CAAvB;AAGA,SAAOJ,QAAQ,CAACE,IAAhB;AACD,CALD;;AAOA,MAAMK,MAAM,GAAG,YAAY;AACzB,QAAMP,QAAQ,GAAG,MAAMT,KAAK,CAACe,GAAN,CAAW,GAAEd,UAAW,SAAxB,CAAvB;AACD,CAFD;;AAGA,MAAMgB,WAAW,GAAG;AAAEV,EAAAA,KAAF;AAASS,EAAAA,MAAT;AAAiBF,EAAAA,MAAjB;AAAyBF,EAAAA,QAAzB;AAAmCT,EAAAA;AAAnC,CAApB;AAEA,eAAec,WAAf","sourcesContent":["import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\ninterface Credentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ntype Token = string | null;\r\n\r\nlet token: Token = null;\r\n\r\nconst setToken = (newToken: string) => {\r\n  token = newToken;\r\n};\r\n\r\nexport const setConfig = () => {\r\n  return {\r\n    headers: { 'x-auth-token': token },\r\n  };\r\n};\r\n\r\nconst login = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst register = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/register`, credentials, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst verify = async () => {\r\n  const response = await Axios.get(`${backendUrl}/verify`, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst logout = async () => {\r\n  const response = await Axios.get(`${backendUrl}/logout`);\r\n};\r\nconst authService = { login, logout, verify, register, setToken };\r\n\r\nexport default authService;\r\n"]},"metadata":{},"sourceType":"module"}