{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\Bug-Tracker-Pern\\\\client\\\\src\\\\components\\\\project-header\\\\project-header.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Paper, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useHeaderStyles } from '../../styles/muiStyles';\nimport { useHistory } from 'react-router-dom';\nimport { selectAuthState } from '../../redux/slices/authSlice';\nimport { deleteProject } from '../../redux/slices/projectSlice';\nimport ConfirmDialog from '../confirm-dialog/confirm-dialog.component';\nimport FormDialog from '../form-dialog/form-dialog.component';\nimport { formatDateTime } from '../../utils/helper';\nimport ProjectForm from '../project-form/project-form.component';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Avatar from '@material-ui/core/Avatar';\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProjectHeader = ({\n  currentProject\n}) => {\n  _s();\n\n  const classes = useHeaderStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    user\n  } = useSelector(selectAuthState);\n  const {\n    createdAt,\n    createdBy,\n    id,\n    members,\n    name,\n    updatedAt\n  } = currentProject;\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.id) === createdBy.id;\n\n  const adminButtons = () => {\n    if (!isAdmin) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonWrapper,\n        children: /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n          title: \"Confirm Delete Project\",\n          bodyContent: \"Do you want to permanently delete your project?\",\n          buttonText: \"Delete Project\",\n          buttonType: {\n            type: 'normal',\n            text: 'Delete Project',\n            icon: DeleteOutlineIcon\n          },\n          actionFunction: handleProjectDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormDialog, {\n        title: \"Add Project Members\",\n        buttonType: {\n          type: 'normal',\n          text: 'Add Members',\n          icon: GroupIcon\n        },\n        children: /*#__PURE__*/_jsxDEV(ProjectForm, {\n          editMode: \"members\",\n          projectId: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  const handleProjectDelete = () => {\n    dispatch(deleteProject(id, history));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.headerPaper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.title,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontSize: '2rem',\n            fontWeight: 'bold'\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), isAdmin ? /*#__PURE__*/_jsxDEV(FormDialog, {\n          title: \"Edit Project Name\",\n          buttonType: {\n            type: 'icon',\n            icon: EditIcon,\n            size: 'small'\n          },\n          children: /*#__PURE__*/_jsxDEV(ProjectForm, {\n            editMode: \"name\",\n            currentName: name,\n            projectId: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Admin: \", createdBy.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Created On: \", formatDateTime(createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Members:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AvatarGroup, {\n          max: 4,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Remy Sharp\",\n            src: \"/static/images/avatar/1.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Travis Howard\",\n            src: \"/static/images/avatar/2.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Cindy Baker\",\n            src: \"/static/images/avatar/3.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Agnes Walker\",\n            src: \"/static/images/avatar/4.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Trevor Henderson\",\n            src: \"/static/images/avatar/5.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.adminButtons,\n        children: adminButtons()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectHeader, \"/hiLwwfF0HVel9r6ZUWSrc/OB/k=\", false, function () {\n  return [useHeaderStyles, useDispatch, useHistory, useSelector];\n});\n\n_c = ProjectHeader;\nexport default ProjectHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectHeader\");","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/project-header/project-header.component.tsx"],"names":["React","useSelector","useDispatch","Paper","Typography","EditIcon","useHeaderStyles","useHistory","selectAuthState","deleteProject","ConfirmDialog","FormDialog","formatDateTime","ProjectForm","DeleteOutlineIcon","GroupIcon","Avatar","AvatarGroup","ProjectHeader","currentProject","classes","dispatch","history","user","createdAt","createdBy","id","members","name","updatedAt","isAdmin","adminButtons","buttonWrapper","type","text","icon","handleProjectDelete","root","headerPaper","title","fontSize","fontWeight","size","username"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Icon, Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteProject } from '../../redux/slices/projectSlice';\r\nimport { ProjectState } from '../../redux/types';\r\nimport ConfirmDialog from '../confirm-dialog/confirm-dialog.component';\r\nimport FormDialog from '../form-dialog/form-dialog.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport ProjectForm from '../project-form/project-form.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AvatarGroup from '@material-ui/lab/AvatarGroup';\r\n\r\nconst ProjectHeader: React.FC<{ currentProject: ProjectState }> = ({\r\n  currentProject,\r\n}) => {\r\n  const classes = useHeaderStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { user } = useSelector(selectAuthState);\r\n  const { createdAt, createdBy, id, members, name, updatedAt } = currentProject;\r\n\r\n  const isAdmin = user?.id === createdBy.id;\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Confirm Delete Project\"\r\n            bodyContent=\"Do you want to permanently delete your project?\"\r\n            buttonText=\"Delete Project\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Project',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleProjectDelete}\r\n          />\r\n        </div>\r\n        <FormDialog\r\n          title=\"Add Project Members\"\r\n          buttonType={{\r\n            type: 'normal',\r\n            text: 'Add Members',\r\n            icon: GroupIcon,\r\n          }}\r\n        >\r\n          <ProjectForm editMode=\"members\" projectId={id} />\r\n        </FormDialog>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleProjectDelete = () => {\r\n    dispatch(deleteProject(id, history));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.headerPaper}>\r\n        <div className={classes.title}>\r\n          <Typography style={{ fontSize: '2rem', fontWeight: 'bold' }}>\r\n            {name}\r\n          </Typography>\r\n          {isAdmin ? (\r\n            <FormDialog\r\n              title=\"Edit Project Name\"\r\n              buttonType={{ type: 'icon', icon: EditIcon, size: 'small' }}\r\n            >\r\n              <ProjectForm editMode=\"name\" currentName={name} projectId={id} />\r\n            </FormDialog>\r\n          ) : null}\r\n        </div>\r\n\r\n        <Typography>Admin: {createdBy.username}</Typography>\r\n        <Typography>Created On: {formatDateTime(createdAt)}</Typography>\r\n        <div>\r\n          <Typography>Members:</Typography>\r\n          <AvatarGroup max={4}>\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n            <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\r\n            <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\r\n            <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />\r\n            <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />\r\n          </AvatarGroup>\r\n        </div>\r\n        <div className={classes.adminButtons}>{adminButtons()}</div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectHeader;\r\n"]},"metadata":{},"sourceType":"module"}