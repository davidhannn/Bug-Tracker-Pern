{"ast":null,"code":"import _objectSpread from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect,Fragment}from'react';import{TextField,Button}from'@material-ui/core';import Autocomplete from'@material-ui/lab/Autocomplete';import{useDispatch}from'react-redux';import{useSelector}from'react-redux';import{getUsers,selectUsersState}from'../../redux/slices/usersSlice';import{selectAuthState}from'../../redux/slices/authSlice';import{editProjectName}from'../../redux/slices/projectSlice';import{createNewProject}from'../../redux/slices/projectSlice';import{useFormStyles}from'../../styles/muiStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectForm=function ProjectForm(_ref){var editMode=_ref.editMode,currentName=_ref.currentName,currentMembers=_ref.currentMembers,projectId=_ref.projectId,closeDialog=_ref.closeDialog;var classes=useFormStyles();var dispatch=useDispatch();var _useSelector=useSelector(selectUsersState),users=_useSelector.users;var _useSelector2=useSelector(selectAuthState),user=_useSelector2.user;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),members=_useState2[0],setMembers=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),projectName=_useState6[0],setProjectName=_useState6[1];useEffect(function(){dispatch(getUsers());},[]);var selectMembersOnChange=function selectMembersOnChange(e,selectedOption){setMembers(selectedOption.map(function(option){return option.id;}));};var handleCreateProject=function handleCreateProject(e){e.preventDefault();dispatch(createNewProject({name:name,members:members},closeDialog));};var handleEditProjectName=function handleEditProjectName(){dispatch(editProjectName(projectId,projectName));};var handleAddMembers=function handleAddMembers(){};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:editMode==='project'?handleCreateProject:editMode==='name'?handleEditProjectName:handleAddMembers,children:[editMode==='project'?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Project Name\",variant:\"outlined\",fullWidth:true,type:\"text\",name:\"name\",value:name,className:classes.inputField,onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/_jsx(Autocomplete,{multiple:true,id:\"tags-outlined\",className:classes.inputField,onChange:selectMembersOnChange,options:users.filter(function(projectUser){return user!=null?projectUser.id!==user.id:null;}),getOptionLabel:function getOptionLabel(user){return user&&user.username;},defaultValue:[],filterSelectedOptions:true,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{variant:\"outlined\",label:\"Select Members\",placeholder:\"Favorites\"}));}})]}):null,editMode==='name'?/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Edit Project Name\",variant:\"outlined\",type:\"text\",fullWidth:true,className:classes.inputField,defaultValue:currentName,value:projectName,onChange:function onChange(e){return setProjectName(e.target.value);}})}):null,editMode==='members'?/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(Autocomplete,{multiple:true,id:\"tags-outlined\",className:classes.inputField,onChange:selectMembersOnChange,options:users.filter(function(projectUser){return user!=null?projectUser.id!==user.id:null;}),getOptionLabel:function getOptionLabel(user){return user&&user.username;},defaultValue:[],filterSelectedOptions:true,renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{variant:\"outlined\",label:\"Select Members\",placeholder:\"Favorites\"}));}})}):null,/*#__PURE__*/_jsx(Button,{size:\"large\",color:\"primary\",variant:\"contained\",type:\"submit\",className:classes.submitButton,children:editMode==='name'?'Edit Project Name':editMode==='project'?'Add Project':editMode==='members'?'Add Members':null})]});};export default ProjectForm;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/project-form/project-form.component.tsx"],"names":["useState","useEffect","Fragment","TextField","Button","Autocomplete","useDispatch","useSelector","getUsers","selectUsersState","selectAuthState","editProjectName","createNewProject","useFormStyles","ProjectForm","editMode","currentName","currentMembers","projectId","closeDialog","classes","dispatch","users","user","members","setMembers","name","setName","projectName","setProjectName","selectMembersOnChange","e","selectedOption","map","option","id","handleCreateProject","preventDefault","handleEditProjectName","handleAddMembers","inputField","target","value","filter","projectUser","username","params","submitButton"],"mappings":"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","sourcesContent":["import { useState, useEffect, Fragment } from 'react';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { editProjectName } from '../../redux/slices/projectSlice';\r\n\r\nimport { User } from '../../redux/types';\r\nimport { createNewProject } from '../../redux/slices/projectSlice';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\ninterface CreateProject {\r\n  editMode: 'project';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId?: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface AddMembers {\r\n  editMode: 'members';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface EditProjectName {\r\n  editMode: 'name';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentMembers?: string[];\r\n  closeDialog?: () => void;\r\n}\r\n\r\ntype ProjectFormType = CreateProject | EditProjectName | AddMembers;\r\n\r\nconst ProjectForm: React.FC<ProjectFormType> = ({\r\n  editMode,\r\n  currentName,\r\n  currentMembers,\r\n  projectId,\r\n  closeDialog,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector(selectUsersState);\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [name, setName] = useState<string>('');\r\n  const [projectName, setProjectName] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\r\n    setMembers(selectedOption.map((option) => option.id));\r\n  };\r\n\r\n  const handleCreateProject = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(createNewProject({ name, members }, closeDialog));\r\n  };\r\n\r\n  const handleEditProjectName = () => {\r\n    dispatch(editProjectName(projectId as string, projectName));\r\n  };\r\n\r\n  const handleAddMembers = () => {};\r\n\r\n  return (\r\n    <form\r\n      onSubmit={\r\n        editMode === 'project'\r\n          ? handleCreateProject\r\n          : editMode === 'name'\r\n          ? handleEditProjectName\r\n          : handleAddMembers\r\n      }\r\n    >\r\n      {editMode === 'project' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Project Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n      {editMode === 'name' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Edit Project Name\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            defaultValue={currentName}\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      {editMode === 'members' ? (\r\n        <Fragment>\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'name'\r\n          ? 'Edit Project Name'\r\n          : editMode === 'project'\r\n          ? 'Add Project'\r\n          : editMode === 'members'\r\n          ? 'Add Members'\r\n          : null}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n"]},"metadata":{},"sourceType":"module"}