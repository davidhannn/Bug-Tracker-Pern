{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\Bug-Tracker-Pern\\\\client\\\\src\\\\components\\\\projects-search-sort\\\\projects-search-sort.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport SearchBar from '../search-bar/search-bar.component';\nimport SortBar from '../sort-bar/sort-bar.component';\nimport { sortProjectsBy, selectProjectsState } from '../../redux/slices/projectSlice';\nimport { useSearchSortStyles } from '../../styles/muiStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortItems = [{\n  value: 'newest',\n  label: 'Newest'\n}, {\n  value: 'oldest',\n  label: 'Oldest'\n}, {\n  value: 'most-bugs',\n  label: 'Most Bugs'\n}, {\n  value: 'least-bugs',\n  label: 'Least Bugs'\n}, {\n  value: 'most-members',\n  label: 'Most Members'\n}, {\n  value: 'least-members',\n  label: 'Least Members'\n}];\n\nconst ProjectsSearchSort = ({\n  searchText,\n  setSearchText,\n  isMobile\n}) => {\n  _s();\n\n  const classes = useSearchSortStyles();\n  const dispatch = useDispatch();\n  const {\n    sortBy\n  } = useSelector(selectProjectsState);\n\n  const handleSortChange = e => {\n    const selectedValue = e.target.value;\n    dispatch(sortProjectsBy(selectedValue));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.searchBar,\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {\n          searchText: searchText,\n          setSearchText: setSearchText,\n          label: \"Projects\",\n          size: isMobile ? 'small' : 'medium'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sortBar,\n        children: /*#__PURE__*/_jsxDEV(SortBar, {\n          handleSortChange: handleSortChange,\n          sortItems: sortItems,\n          sortBy: sortBy,\n          label: \"Projects\",\n          size: isMobile ? 'small' : 'medium'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectsSearchSort, \"uNlstvMgrROYizUJQLHwsxIuU3Q=\", false, function () {\n  return [useSearchSortStyles, useDispatch, useSelector];\n});\n\n_c = ProjectsSearchSort;\nexport default ProjectsSearchSort;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsSearchSort\");","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/projects-search-sort/projects-search-sort.component.tsx"],"names":["React","useDispatch","useSelector","SearchBar","SortBar","sortProjectsBy","selectProjectsState","useSearchSortStyles","sortItems","value","label","ProjectsSearchSort","searchText","setSearchText","isMobile","classes","dispatch","sortBy","handleSortChange","e","selectedValue","target","inputWrapper","searchBar","sortBar"],"mappings":";;;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AAGA,SACEC,cADF,EAEEC,mBAFF,QAGO,iCAHP;AAKA,SAASC,mBAAT,QAAoC,wBAApC;;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADgB,EAEhB;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFgB,EAGhB;AAAED,EAAAA,KAAK,EAAE,WAAT;AAAsBC,EAAAA,KAAK,EAAE;AAA7B,CAHgB,EAIhB;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAJgB,EAKhB;AAAED,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CALgB,EAMhB;AAAED,EAAAA,KAAK,EAAE,eAAT;AAA0BC,EAAAA,KAAK,EAAE;AAAjC,CANgB,CAAlB;;AASA,MAAMC,kBAIJ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,aAAd;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAAA;;AAChD,QAAMC,OAAO,GAAGR,mBAAmB,EAAnC;AACA,QAAMS,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAaf,WAAW,CAACI,mBAAD,CAA9B;;AACA,QAAMY,gBAAgB,GAAIC,CAAD,IAA8C;AACrE,UAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASZ,KAA/B;AACAO,IAAAA,QAAQ,CAACX,cAAc,CAACe,aAAD,CAAf,CAAR;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEL,OAAO,CAACO,YAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACQ,SAAxB;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,UAAU,EAAEX,UADd;AAEE,UAAA,aAAa,EAAEC,aAFjB;AAGE,UAAA,KAAK,EAAC,UAHR;AAIE,UAAA,IAAI,EAAEC,QAAQ,GAAG,OAAH,GAAa;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAK,QAAA,SAAS,EAAEC,OAAO,CAACS,OAAxB;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,gBAAgB,EAAEN,gBADpB;AAEE,UAAA,SAAS,EAAEV,SAFb;AAGE,UAAA,MAAM,EAAES,MAHV;AAIE,UAAA,KAAK,EAAC,UAJR;AAKE,UAAA,IAAI,EAAEH,QAAQ,GAAG,OAAH,GAAa;AAL7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApCD;;GAAMH,kB;UAKYJ,mB,EACCN,W,EACEC,W;;;KAPfS,kB;AAsCN,eAAeA,kBAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SearchBar from '../search-bar/search-bar.component';\r\nimport SortBar from '../sort-bar/sort-bar.component';\r\n\r\nimport { ProjectSortValues } from '../../redux/types';\r\nimport {\r\n  sortProjectsBy,\r\n  selectProjectsState,\r\n} from '../../redux/slices/projectSlice';\r\n\r\nimport { useSearchSortStyles } from '../../styles/muiStyles';\r\n\r\nconst sortItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'most-bugs', label: 'Most Bugs' },\r\n  { value: 'least-bugs', label: 'Least Bugs' },\r\n  { value: 'most-members', label: 'Most Members' },\r\n  { value: 'least-members', label: 'Least Members' },\r\n];\r\n\r\nconst ProjectsSearchSort: React.FC<{\r\n  searchText: string;\r\n  setSearchText: (searchText: string) => void;\r\n  isMobile: boolean;\r\n}> = ({ searchText, setSearchText, isMobile }) => {\r\n  const classes = useSearchSortStyles();\r\n  const dispatch = useDispatch();\r\n  const { sortBy } = useSelector(selectProjectsState);\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    const selectedValue = e.target.value as ProjectSortValues;\r\n    dispatch(sortProjectsBy(selectedValue));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.inputWrapper}>\r\n        <div className={classes.searchBar}>\r\n          <SearchBar\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n        <div className={classes.sortBar}>\r\n          <SortBar\r\n            handleSortChange={handleSortChange}\r\n            sortItems={sortItems}\r\n            sortBy={sortBy}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsSearchSort;\r\n"]},"metadata":{},"sourceType":"module"}