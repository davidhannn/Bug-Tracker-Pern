{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\Bug-Tracker-Pern\\\\client\\\\src\\\\components\\\\bug-form\\\\bug-form.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createBug } from '../../redux/slices/bugSlice';\nimport { useFormStyles } from '../../styles/muiStyles';\nimport { TextField, Button, FormControl, FormLabel, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BugForm = ({\n  editMode,\n  currentName,\n  currentId,\n  projectId,\n  bugDescription,\n  resolvedStatus,\n  priorityStatus\n}) => {\n  _s();\n\n  const classes = useFormStyles();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [priority, setPriority] = useState('Low');\n\n  const handleChange = event => {\n    setPriority(event.target.value);\n  };\n\n  const handleAddBug = () => {\n    console.log('testing');\n    dispatch(createBug(projectId, {\n      name,\n      description,\n      priority\n    }));\n  };\n\n  const handleEditBug = () => {\n    console.log('testing');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: editMode === 'add' ? handleAddBug : handleEditBug,\n    children: [editMode === 'add' ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Bug Title\",\n        variant: \"outlined\",\n        name: \"title\",\n        fullWidth: true,\n        value: name,\n        className: classes.inputField,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\" // multiline={true}\n        // rows={2}\n        ,\n        fullWidth: true,\n        className: classes.inputField,\n        label: \"Description\",\n        variant: \"outlined\",\n        name: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        className: classes.radioGroupForm,\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          defaultValue: \"low\",\n          value: priority,\n          onChange: handleChange,\n          className: classes.radioGroup,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            className: classes.radioGroupLabel,\n            children: \"Priority:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formControlLabels,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Low\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 56\n              }, this),\n              label: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"Medium\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 28\n              }, this),\n              label: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"High\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 28\n              }, this),\n              label: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      size: \"large\",\n      color: \"primary\",\n      variant: \"contained\",\n      type: \"submit\",\n      className: classes.submitButton,\n      children: editMode === 'add' ? 'Add a Bug' : 'Edit Bug '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BugForm, \"54fct8PqsY51VZVmocgzV9QncKI=\", false, function () {\n  return [useFormStyles, useDispatch];\n});\n\n_c = BugForm;\nexport default BugForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BugForm\");","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/bug-form/bug-form.component.tsx"],"names":["useState","Fragment","useDispatch","createBug","useFormStyles","TextField","Button","FormControl","FormLabel","RadioGroup","FormControlLabel","Radio","BugForm","editMode","currentName","currentId","projectId","bugDescription","resolvedStatus","priorityStatus","classes","dispatch","name","setName","description","setDescription","priority","setPriority","handleChange","event","target","value","handleAddBug","console","log","handleEditBug","inputField","e","radioGroupForm","radioGroup","radioGroupLabel","formControlLabels","submitButton"],"mappings":"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","sourcesContent":["import { useState, Fragment } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createBug } from '../../redux/slices/bugSlice';\r\nimport { BugPayload, BugPriority } from '../../redux/types';\r\n\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n  DialogContent,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core';\r\n\r\ninterface AddBug {\r\n  editMode: 'add';\r\n  currentName?: string;\r\n  projectId?: string;\r\n  currentId?: string;\r\n  bugDescription?: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\ninterface UpdateBug {\r\n  editMode: 'update';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentId: string;\r\n  bugDescription: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\n\r\ntype BugFormTypes = UpdateBug | AddBug;\r\n\r\nconst BugForm: React.FC<BugFormTypes> = ({\r\n  editMode,\r\n  currentName,\r\n  currentId,\r\n  projectId,\r\n  bugDescription,\r\n  resolvedStatus,\r\n  priorityStatus,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [priority, setPriority] = useState<BugPriority>('Low');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setPriority(event.target.value as BugPriority);\r\n  };\r\n\r\n  const handleAddBug = () => {\r\n    console.log('testing');\r\n    dispatch(createBug(projectId as string, { name, description, priority }));\r\n  };\r\n\r\n  const handleEditBug = () => {\r\n    console.log('testing');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={editMode === 'add' ? handleAddBug : handleEditBug}>\r\n      {editMode === 'add' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Bug Title\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            // multiline={true}\r\n            // rows={2}\r\n            fullWidth\r\n            className={classes.inputField}\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setDescription(e.target.value)\r\n            }\r\n          />\r\n          <FormControl component=\"fieldset\" className={classes.radioGroupForm}>\r\n            <RadioGroup\r\n              row\r\n              defaultValue=\"low\"\r\n              value={priority}\r\n              onChange={handleChange}\r\n              className={classes.radioGroup}\r\n            >\r\n              <FormLabel component=\"legend\" className={classes.radioGroupLabel}>\r\n                Priority:\r\n              </FormLabel>\r\n\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel value=\"Low\" control={<Radio />} label=\"Low\" />\r\n                <FormControlLabel\r\n                  value=\"Medium\"\r\n                  control={<Radio />}\r\n                  label=\"Medium\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"High\"\r\n                  control={<Radio />}\r\n                  label=\"High\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Fragment>\r\n      ) : null}\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'add' ? 'Add a Bug' : 'Edit Bug '}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BugForm;\r\n"]},"metadata":{},"sourceType":"module"}