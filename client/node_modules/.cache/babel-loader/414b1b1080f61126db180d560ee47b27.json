{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{Paper,Typography}from'@material-ui/core';import EditIcon from'@material-ui/icons/Edit';import{useHeaderStyles}from'../../styles/muiStyles';import{useHistory}from'react-router-dom';import{selectAuthState}from'../../redux/slices/authSlice';import{deleteProject}from'../../redux/slices/projectSlice';import ConfirmDialog from'../confirm-dialog/confirm-dialog.component';import FormDialog from'../form-dialog/form-dialog.component';import{formatDateTime}from'../../utils/helper';import ProjectForm from'../project-form/project-form.component';import DeleteOutlineIcon from'@material-ui/icons/DeleteOutline';import GroupIcon from'@material-ui/icons/Group';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectHeader=function ProjectHeader(_ref){var currentProject=_ref.currentProject;var classes=useHeaderStyles();var dispatch=useDispatch();var history=useHistory();var _useSelector=useSelector(selectAuthState),user=_useSelector.user;var createdAt=currentProject.createdAt,createdBy=currentProject.createdBy,id=currentProject.id,members=currentProject.members,name=currentProject.name,updatedAt=currentProject.updatedAt;var isAdmin=(user===null||user===void 0?void 0:user.id)===createdBy.id;var adminButtons=function adminButtons(){if(!isAdmin)return null;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.buttonWrapper,children:/*#__PURE__*/_jsx(ConfirmDialog,{title:\"Confirm Delete Project\",bodyContent:\"Do you want to permanently delete your project?\",buttonText:\"Delete Project\",buttonType:{type:'normal',text:'Delete Project',icon:DeleteOutlineIcon},actionFunction:handleProjectDelete})}),/*#__PURE__*/_jsx(FormDialog,{title:\"Add Project Members\",buttonType:{type:'normal',text:'Add Members',icon:GroupIcon},children:/*#__PURE__*/_jsx(ProjectForm,{editMode:\"members\",projectId:id})})]});};var handleProjectDelete=function handleProjectDelete(){dispatch(deleteProject(id,history));};return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsxs(Paper,{className:classes.headerPaper,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.title,children:[/*#__PURE__*/_jsx(Typography,{style:{fontSize:'2rem',fontWeight:'bold'},children:name}),isAdmin?/*#__PURE__*/_jsx(FormDialog,{title:\"Edit Project Name\",buttonType:{type:'icon',icon:EditIcon,size:'small'},children:/*#__PURE__*/_jsx(ProjectForm,{editMode:\"name\",currentName:name,projectId:id})}):null]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Admin: \",createdBy.username]}),/*#__PURE__*/_jsxs(Typography,{children:[\"Created On: \",formatDateTime(createdAt)]}),/*#__PURE__*/_jsx(\"div\",{className:classes.adminButtons,children:adminButtons()})]})});};export default ProjectHeader;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/project-header/project-header.component.tsx"],"names":["React","useSelector","useDispatch","Paper","Typography","EditIcon","useHeaderStyles","useHistory","selectAuthState","deleteProject","ConfirmDialog","FormDialog","formatDateTime","ProjectForm","DeleteOutlineIcon","GroupIcon","ProjectHeader","currentProject","classes","dispatch","history","user","createdAt","createdBy","id","members","name","updatedAt","isAdmin","adminButtons","buttonWrapper","type","text","icon","handleProjectDelete","root","headerPaper","title","fontSize","fontWeight","size","username"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Icon, Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteProject } from '../../redux/slices/projectSlice';\r\nimport { ProjectState } from '../../redux/types';\r\nimport ConfirmDialog from '../confirm-dialog/confirm-dialog.component';\r\nimport FormDialog from '../form-dialog/form-dialog.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport ProjectForm from '../project-form/project-form.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst ProjectHeader: React.FC<{ currentProject: ProjectState }> = ({\r\n  currentProject,\r\n}) => {\r\n  const classes = useHeaderStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { user } = useSelector(selectAuthState);\r\n  const { createdAt, createdBy, id, members, name, updatedAt } = currentProject;\r\n\r\n  const isAdmin = user?.id === createdBy.id;\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Confirm Delete Project\"\r\n            bodyContent=\"Do you want to permanently delete your project?\"\r\n            buttonText=\"Delete Project\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Project',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleProjectDelete}\r\n          />\r\n        </div>\r\n        <FormDialog\r\n          title=\"Add Project Members\"\r\n          buttonType={{\r\n            type: 'normal',\r\n            text: 'Add Members',\r\n            icon: GroupIcon,\r\n          }}\r\n        >\r\n          <ProjectForm editMode=\"members\" projectId={id} />\r\n        </FormDialog>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleProjectDelete = () => {\r\n    dispatch(deleteProject(id, history));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.headerPaper}>\r\n        <div className={classes.title}>\r\n          <Typography style={{ fontSize: '2rem', fontWeight: 'bold' }}>\r\n            {name}\r\n          </Typography>\r\n          {isAdmin ? (\r\n            <FormDialog\r\n              title=\"Edit Project Name\"\r\n              buttonType={{ type: 'icon', icon: EditIcon, size: 'small' }}\r\n            >\r\n              <ProjectForm editMode=\"name\" currentName={name} projectId={id} />\r\n            </FormDialog>\r\n          ) : null}\r\n        </div>\r\n\r\n        <Typography>Admin: {createdBy.username}</Typography>\r\n        <Typography>Created On: {formatDateTime(createdAt)}</Typography>\r\n\r\n        <div className={classes.adminButtons}>{adminButtons()}</div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectHeader;\r\n"]},"metadata":{},"sourceType":"module"}