{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\Bug-Tracker-Pern\\\\client\\\\src\\\\pages\\\\create-project\\\\createprojectpage.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useDispatch } from 'react-redux';\nimport { createNewProject } from '../../redux/slices/projectSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: 500,\n    '& > * + *': {\n      marginTop: theme.spacing(3)\n    }\n  }\n}));\n\nconst CreateProjectPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(selectUsersState);\n  const classes = useStyles();\n  const [members, setMembers] = useState([]);\n  const [name, setName] = useState('');\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  const selectMembersOnChange = (e, selectedOption) => {\n    setMembers(selectedOption.map(option => option.id));\n  };\n\n  const handleCreateProject = e => {\n    e.preventDefault();\n    dispatch(createNewProject({\n      name,\n      members\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleCreateProject,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Project Name\",\n      variant: \"outlined\",\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), users && /*#__PURE__*/_jsxDEV(Autocomplete, {\n      multiple: true,\n      id: \"tags-outlined\",\n      onChange: selectMembersOnChange,\n      options: users,\n      getOptionLabel: user => user && user.username,\n      defaultValue: [],\n      filterSelectedOptions: true,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        variant: \"outlined\",\n        label: \"Select Members\",\n        placeholder: \"Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateProjectPage, \"UcU6lFg1Og8IeBiT7xwYcI8WBps=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n\n_c = CreateProjectPage;\nexport default CreateProjectPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProjectPage\");","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/pages/create-project/createprojectpage.component.tsx"],"names":["useEffect","useState","useSelector","getUsers","selectUsersState","Autocomplete","createStyles","makeStyles","TextField","useDispatch","createNewProject","useStyles","theme","root","width","marginTop","spacing","CreateProjectPage","dispatch","users","classes","members","setMembers","name","setName","selectMembersOnChange","e","selectedOption","map","option","id","handleCreateProject","preventDefault","target","value","user","username","params"],"mappings":";;;AAAA,SAAyBA,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,+BAA3C;AAGA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAgD,0BAAhD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,SAASC,WAAT,QAA4B,aAA5B;AAKA,SAASC,gBAAT,QAAiC,iCAAjC;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IAC3BN,YAAY,CAAC;AACXO,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADK,CAAD,CADc,CAA5B;;AAWA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAYjB,WAAW,CAACE,gBAAD,CAA7B;AACA,QAAMgB,OAAO,GAAGT,SAAS,EAAzB;AAEA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAW,EAAX,CAAtC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACf,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMsB,qBAAqB,GAAG,CAACC,CAAD,EAASC,cAAT,KAAoC;AAChEL,IAAAA,UAAU,CAACK,cAAc,CAACC,GAAf,CAAoBC,MAAD,IAAYA,MAAM,CAACC,EAAtC,CAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAIL,CAAD,IAAuB;AACjDA,IAAAA,CAAC,CAACM,cAAF;AACAd,IAAAA,QAAQ,CAACR,gBAAgB,CAAC;AAAEa,MAAAA,IAAF;AAAQF,MAAAA;AAAR,KAAD,CAAjB,CAAR;AACD,GAHD;;AAKA,sBACE;AAAM,IAAA,QAAQ,EAAEU,mBAAhB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,KAAK,EAAER,IANT;AAOE,MAAA,QAAQ,EAAGG,CAAD,IACRF,OAAO,CAACE,CAAC,CAACO,MAAF,CAASC,KAAV;AARX;AAAA;AAAA;AAAA;AAAA,YADF,EAaGf,KAAK,iBACJ,QAAC,YAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,eAFL;AAGE,MAAA,QAAQ,EAAEM,qBAHZ;AAIE,MAAA,OAAO,EAAEN,KAJX;AAKE,MAAA,cAAc,EAAGgB,IAAD,IAAUA,IAAI,IAAIA,IAAI,CAACC,QALzC;AAME,MAAA,YAAY,EAAE,EANhB;AAOE,MAAA,qBAAqB,MAPvB;AAQE,MAAA,WAAW,EAAGC,MAAD,iBACX,QAAC,SAAD,OACMA,MADN;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,gBAHR;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,YAdJ,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAzDD;;GAAMpB,iB;UACaR,W,EACCP,W,EACFS,S;;;KAHZM,iB;AA2DN,eAAeA,iBAAf","sourcesContent":["import { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport MemberDropdown from '../../components/member-dropdown/member-dropdown.component';\r\n\r\nimport { User } from '../../redux/types';\r\nimport { createNewProject } from '../../redux/slices/projectSlice';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 500,\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst CreateProjectPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector(selectUsersState);\r\n  const classes = useStyles();\r\n\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [name, setName] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\r\n    setMembers(selectedOption.map((option) => option.id));\r\n  };\r\n\r\n  const handleCreateProject = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(createNewProject({ name, members }));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleCreateProject}>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Project Name\"\r\n        variant=\"outlined\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          setName(e.target.value)\r\n        }\r\n      />\r\n      {/* <MemberDropdown /> */}\r\n      {users && (\r\n        <Autocomplete\r\n          multiple\r\n          id=\"tags-outlined\"\r\n          onChange={selectMembersOnChange}\r\n          options={users}\r\n          getOptionLabel={(user) => user && user.username}\r\n          defaultValue={[]}\r\n          filterSelectedOptions\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Select Members\"\r\n              placeholder=\"Favorites\"\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n      <button>Create Project</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateProjectPage;\r\n"]},"metadata":{},"sourceType":"module"}