{"ast":null,"code":"import{Fragment,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{useParams}from'react-router-dom';import BugsTable from'../../components/bugs-table/bugs-table.component';import ProjectHeader from'../../components/project-header/project-header.component';import AddIcon from'@material-ui/icons/Add';import{selectProjectById}from'../../redux/slices/projectSlice';import{fetchBugs,selectBugsStateForProject,selectBugsState}from'../../redux/slices/bugSlice';import BugForm from'../../components/bug-form/bug-form.component';import Spinner from'../../components/spinner/spinner.component';import FormDialog from'../../components/form-dialog/form-dialog.component';import BugsTableMobile from'../../components/bugs-table-mobile/bugs-table-mobile.component';import{useTheme,useMediaQuery}from'@material-ui/core';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectPage=function ProjectPage(){var _useParams=useParams(),projectId=_useParams.projectId;var dispatch=useDispatch();var theme=useTheme();var isMobile=useMediaQuery(theme.breakpoints.down('xs'));var currentProject=useSelector(function(state){return selectProjectById(state,projectId);});var _useSelector=useSelector(selectBugsState),fetchStatus=_useSelector.fetchStatus;var bugs=useSelector(function(state){return selectBugsStateForProject(state,projectId);});useEffect(function(){dispatch(fetchBugs(projectId));},[]);var bugDisplay=function bugDisplay(){if(fetchStatus===true){return/*#__PURE__*/_jsx(Spinner,{});}else{return!isMobile?/*#__PURE__*/_jsx(BugsTable,{projectId:projectId}):/*#__PURE__*/_jsx(BugsTableMobile,{bugs:bugs});}};return/*#__PURE__*/_jsxs(Fragment,{children:[currentProject&&currentProject?/*#__PURE__*/_jsx(ProjectHeader,{currentProject:currentProject}):null,/*#__PURE__*/_jsx(FormDialog,{title:\"Add a Bug\",buttonType:{type:'normal',text:'Add a Bug',icon:AddIcon},children:/*#__PURE__*/_jsx(BugForm,{editMode:\"add\",projectId:projectId})}),bugDisplay()]});};export default ProjectPage;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/pages/project-page/projectpage.component.tsx"],"names":["Fragment","useEffect","useDispatch","useSelector","useParams","BugsTable","ProjectHeader","AddIcon","selectProjectById","fetchBugs","selectBugsStateForProject","selectBugsState","BugForm","Spinner","FormDialog","BugsTableMobile","useTheme","useMediaQuery","ProjectPage","projectId","dispatch","theme","isMobile","breakpoints","down","currentProject","state","fetchStatus","bugs","bugDisplay","type","text","icon"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,0DAA1B,CAEA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CAEA,OAASC,iBAAT,KAAkC,iCAAlC,CACA,OACEC,SADF,CAEEC,yBAFF,CAGEC,eAHF,KAIO,6BAJP,CAMA,MAAOC,CAAAA,OAAP,KAAoB,8CAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,4CAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oDAAvB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gEAA5B,CAEA,OAASC,QAAT,CAAmBC,aAAnB,KAAwC,mBAAxC,C,wFAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,eAAsBd,SAAS,EAA/B,CAAQe,SAAR,YAAQA,SAAR,CACA,GAAMC,CAAAA,QAAQ,CAAGlB,WAAW,EAA5B,CACA,GAAMmB,CAAAA,KAAK,CAAGL,QAAQ,EAAtB,CACA,GAAMM,CAAAA,QAAQ,CAAGL,aAAa,CAACI,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B,CACA,GAAMC,CAAAA,cAAc,CAAGtB,WAAW,CAAC,SAACuB,KAAD,QACjClB,CAAAA,iBAAiB,CAACkB,KAAD,CAAQP,SAAR,CADgB,EAAD,CAAlC,CAIA,iBAAwBhB,WAAW,CAACQ,eAAD,CAAnC,CAAQgB,WAAR,cAAQA,WAAR,CAEA,GAAMC,CAAAA,IAAI,CAAGzB,WAAW,CAAC,SAACuB,KAAD,QACvBhB,CAAAA,yBAAyB,CAACgB,KAAD,CAAQP,SAAR,CADF,EAAD,CAAxB,CAIAlB,SAAS,CAAC,UAAM,CACdmB,QAAQ,CAACX,SAAS,CAACU,SAAD,CAAV,CAAR,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAIF,WAAW,GAAK,IAApB,CAA0B,CACxB,mBAAO,KAAC,OAAD,IAAP,CACD,CAFD,IAEO,CACL,MAAO,CAACL,QAAD,cACL,KAAC,SAAD,EAAW,SAAS,CAAEH,SAAtB,EADK,cAGL,KAAC,eAAD,EAAiB,IAAI,CAAES,IAAvB,EAHF,CAKD,CACF,CAVD,CAYA,mBACE,MAAC,QAAD,YACGH,cAAc,EAAIA,cAAlB,cACC,KAAC,aAAD,EAAe,cAAc,CAAEA,cAA/B,EADD,CAEG,IAHN,cAIE,KAAC,UAAD,EACE,KAAK,CAAC,WADR,CAEE,UAAU,CAAE,CAAEK,IAAI,CAAE,QAAR,CAAkBC,IAAI,CAAE,WAAxB,CAAqCC,IAAI,CAAEzB,OAA3C,CAFd,uBAIE,KAAC,OAAD,EAAS,QAAQ,CAAC,KAAlB,CAAwB,SAAS,CAAEY,SAAnC,EAJF,EAJF,CAUGU,UAAU,EAVb,GADF,CAcD,CA7CD,CA+CA,cAAeX,CAAAA,WAAf","sourcesContent":["import { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { RootState } from '../../redux/store';\r\nimport BugsTable from '../../components/bugs-table/bugs-table.component';\r\nimport BugsCreate from '../../components/bugs-create/bugs-create.component';\r\nimport ProjectHeader from '../../components/project-header/project-header.component';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { selectProjectById } from '../../redux/slices/projectSlice';\r\nimport {\r\n  fetchBugs,\r\n  selectBugsStateForProject,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugSlice';\r\n\r\nimport BugForm from '../../components/bug-form/bug-form.component';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\nimport FormDialog from '../../components/form-dialog/form-dialog.component';\r\nimport BugsTableMobile from '../../components/bugs-table-mobile/bugs-table-mobile.component';\r\n\r\nimport { useTheme, useMediaQuery } from '@material-ui/core';\r\ninterface ParamTypes {\r\n  projectId: string;\r\n}\r\n\r\nconst ProjectPage = () => {\r\n  const { projectId } = useParams<ParamTypes>();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const currentProject = useSelector((state: RootState) =>\r\n    selectProjectById(state, projectId)\r\n  );\r\n\r\n  const { fetchStatus } = useSelector(selectBugsState);\r\n\r\n  const bugs = useSelector((state: RootState) =>\r\n    selectBugsStateForProject(state, projectId)\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBugs(projectId));\r\n  }, []);\r\n\r\n  const bugDisplay = () => {\r\n    if (fetchStatus === true) {\r\n      return <Spinner />;\r\n    } else {\r\n      return !isMobile ? (\r\n        <BugsTable projectId={projectId} />\r\n      ) : (\r\n        <BugsTableMobile bugs={bugs} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {currentProject && currentProject ? (\r\n        <ProjectHeader currentProject={currentProject} />\r\n      ) : null}\r\n      <FormDialog\r\n        title=\"Add a Bug\"\r\n        buttonType={{ type: 'normal', text: 'Add a Bug', icon: AddIcon }}\r\n      >\r\n        <BugForm editMode=\"add\" projectId={projectId} />\r\n      </FormDialog>\r\n      {bugDisplay()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n"]},"metadata":{},"sourceType":"module"}