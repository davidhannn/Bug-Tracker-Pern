{"ast":null,"code":"var sortProjects=function sortProjects(projects,sortBy){switch(sortBy){case'newest':return projects.slice().sort(function(a,b){return+new Date(b.createdAt)-+new Date(a.createdAt);});case'oldest':return projects.slice().sort(function(a,b){return+new Date(a.createdAt)-+new Date(b.createdAt);});case'most-bugs':return projects.slice().sort(function(a,b){return b.bugs.length-a.bugs.length;});case'least-bugs':return projects.slice().sort(function(a,b){return a.bugs.length-b.bugs.length;});case'most-members':return projects.slice().sort(function(a,b){return b.members.length-a.members.length;});case'least-members':return projects.slice().sort(function(a,b){return a.members.length-b.members.length;});}};export default sortProjects;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/utils/sortProject.ts"],"names":["sortProjects","projects","sortBy","slice","sort","a","b","Date","createdAt","bugs","length","members"],"mappings":"AAEA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,QAAD,CAA2BC,MAA3B,CAAyD,CAC5E,OAAQA,MAAR,EACE,IAAK,QAAL,CACE,MAAOD,CAAAA,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,SAACC,CAAD,CAAIC,CAAJ,QAAU,CAAC,GAAIC,CAAAA,IAAJ,CAASD,CAAC,CAACE,SAAX,CAAD,CAAyB,CAAC,GAAID,CAAAA,IAAJ,CAASF,CAAC,CAACG,SAAX,CAApC,EAFD,CAAP,CAIF,IAAK,QAAL,CACE,MAAOP,CAAAA,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,SAACC,CAAD,CAAIC,CAAJ,QAAU,CAAC,GAAIC,CAAAA,IAAJ,CAASF,CAAC,CAACG,SAAX,CAAD,CAAyB,CAAC,GAAID,CAAAA,IAAJ,CAASD,CAAC,CAACE,SAAX,CAApC,EAFD,CAAP,CAIF,IAAK,WAAL,CACE,MAAOP,CAAAA,QAAQ,CAACE,KAAT,GAAiBC,IAAjB,CAAsB,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACG,IAAF,CAAOC,MAAP,CAAgBL,CAAC,CAACI,IAAF,CAAOC,MAAjC,EAAtB,CAAP,CAEF,IAAK,YAAL,CACE,MAAOT,CAAAA,QAAQ,CAACE,KAAT,GAAiBC,IAAjB,CAAsB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACI,IAAF,CAAOC,MAAP,CAAgBJ,CAAC,CAACG,IAAF,CAAOC,MAAjC,EAAtB,CAAP,CAEF,IAAK,cAAL,CACE,MAAOT,CAAAA,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACK,OAAF,CAAUD,MAAV,CAAmBL,CAAC,CAACM,OAAF,CAAUD,MAAvC,EAFD,CAAP,CAIF,IAAK,eAAL,CACE,MAAOT,CAAAA,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACM,OAAF,CAAUD,MAAV,CAAmBJ,CAAC,CAACK,OAAF,CAAUD,MAAvC,EAFD,CAAP,CAvBJ,CA2BD,CA5BD,CA8BA,cAAeV,CAAAA,YAAf","sourcesContent":["import { ProjectState, ProjectSortValues } from '../redux/types';\r\n\r\nconst sortProjects = (projects: ProjectState[], sortBy: ProjectSortValues) => {\r\n  switch (sortBy) {\r\n    case 'newest':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt));\r\n\r\n    case 'oldest':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => +new Date(a.createdAt) - +new Date(b.createdAt));\r\n\r\n    case 'most-bugs':\r\n      return projects.slice().sort((a, b) => b.bugs.length - a.bugs.length);\r\n\r\n    case 'least-bugs':\r\n      return projects.slice().sort((a, b) => a.bugs.length - b.bugs.length);\r\n\r\n    case 'most-members':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => b.members.length - a.members.length);\r\n\r\n    case 'least-members':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => a.members.length - b.members.length);\r\n  }\r\n};\r\n\r\nexport default sortProjects;\r\n"]},"metadata":{},"sourceType":"module"}