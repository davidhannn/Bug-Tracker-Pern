{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\Bug-Tracker-Pern\\\\client\\\\src\\\\components\\\\form-dialog\\\\form-dialog.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button, IconButton, MenuItem, Dialog, DialogContent, DialogTitle, useMediaQuery } from '@material-ui/core';\nimport { useDialogStyles } from '../../styles/dialogStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormDialog = ({\n  title,\n  buttonType,\n  children\n}) => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useDialogStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const displayedButton = () => {\n    if (buttonType.type === 'icon') {\n      return /*#__PURE__*/_jsxDEV(IconButton, {\n        color: buttonType.color,\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(buttonType.icon, {\n          fontSize: buttonType.iconSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    } else if (buttonType.type === 'menu') {\n      return /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClickOpen,\n        children: [/*#__PURE__*/_jsxDEV(buttonType.icon, {\n          style: buttonType.iconStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), buttonType.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    } else if (buttonType.type === 'normal') {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickOpen,\n        color: buttonType.color || 'primary',\n        variant: buttonType.variant || 'contained',\n        size: buttonType.size || 'medium',\n        startIcon: /*#__PURE__*/_jsxDEV(buttonType.icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this),\n        style: buttonType.style,\n        className: buttonType.className,\n        children: buttonType.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'inline'\n    },\n    children: [displayedButton(), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      classes: {\n        paper: classes.dialogWrapper\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormDialog, \"n+NW4Yb9lme81x5Txxsv1KYgPK4=\", false, function () {\n  return [useDialogStyles, useTheme, useMediaQuery];\n});\n\n_c = FormDialog;\nexport default FormDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/form-dialog/form-dialog.component.tsx"],"names":["React","useTheme","Button","IconButton","MenuItem","Dialog","DialogContent","DialogTitle","useMediaQuery","useDialogStyles","FormDialog","title","buttonType","children","open","setOpen","useState","classes","theme","isMobile","breakpoints","down","handleClickOpen","handleClose","displayedButton","type","color","iconSize","iconStyle","text","variant","size","style","className","display","paper","dialogWrapper"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n  Paper,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\nimport { ButtonTypes } from '../types';\r\n\r\nconst FormDialog: React.FC<{\r\n  title: string;\r\n  buttonType: ButtonTypes;\r\n  children: React.ReactNode;\r\n}> = ({ title, buttonType, children }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'icon') {\r\n      return (\r\n        <IconButton color={buttonType.color} onClick={handleClickOpen}>\r\n          <buttonType.icon fontSize={buttonType.iconSize} />\r\n        </IconButton>\r\n      );\r\n    } else if (buttonType.type === 'menu') {\r\n      return (\r\n        <MenuItem onClick={handleClickOpen}>\r\n          <buttonType.icon style={buttonType.iconStyle} />\r\n          {buttonType.text}\r\n        </MenuItem>\r\n      );\r\n    } else if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'inline' }}>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        classes={{ paper: classes.dialogWrapper }}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>{children}</DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDialog;\r\n"]},"metadata":{},"sourceType":"module"}