{"ast":null,"code":"import Axios from 'axios';\nimport backendUrl from '../backendUrl';\n\nconst getBugs = async projectId => {\n  const response = await Axios.get(`${backendUrl}/projects/${projectId}/bugs`, {\n    withCredentials: true\n  });\n  console.log(response);\n  return response.data;\n};\n\nconst createBug = async (projectId, bugData) => {\n  const response = await Axios.post(`${backendUrl}/projects/${projectId}/bugs`, bugData, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nconst deleteBug = async (projectId, bugId) => {\n  const response = await Axios.delete(`${backendUrl}/projects/${projectId}/bugs/${bugId}`, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nconst closeBug = async (projectId, bugId) => {\n  const response = await Axios.post(`${backendUrl}/projects/${projectId}/bugs/${bugId}/close`, null, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\nconst reopenBug = async (projectId, bugId) => {\n  const response = await Axios.post(`${backendUrl}/projects/${projectId}/bugs/${bugId}/reopen`, null, {\n    withCredentials: true\n  });\n};\n\nconst bugService = {\n  getBugs,\n  createBug,\n  deleteBug,\n  closeBug,\n  reopenBug\n};\nexport default bugService;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/services/bug.ts"],"names":["Axios","backendUrl","getBugs","projectId","response","get","withCredentials","console","log","data","createBug","bugData","post","deleteBug","bugId","delete","closeBug","reopenBug","bugService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAIA,MAAMC,OAAO,GAAG,MAAOC,SAAP,IAA6B;AAC3C,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,UAAW,aAAYE,SAAU,OAA9C,EAAsD;AAC3EG,IAAAA,eAAe,EAAE;AAD0D,GAAtD,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,SAAOA,QAAQ,CAACK,IAAhB;AACD,CAND;;AAQA,MAAMC,SAAS,GAAG,OAAOP,SAAP,EAA0BQ,OAA1B,KAAkD;AAClE,QAAMP,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAN,CACpB,GAAEX,UAAW,aAAYE,SAAU,OADf,EAErBQ,OAFqB,EAGrB;AACEL,IAAAA,eAAe,EAAE;AADnB,GAHqB,CAAvB;AAQA,SAAOF,QAAQ,CAACK,IAAhB;AACD,CAVD;;AAYA,MAAMI,SAAS,GAAG,OAAOV,SAAP,EAA0BW,KAA1B,KAA4C;AAC5D,QAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACe,MAAN,CACpB,GAAEd,UAAW,aAAYE,SAAU,SAAQW,KAAM,EAD7B,EAErB;AACER,IAAAA,eAAe,EAAE;AADnB,GAFqB,CAAvB;AAOA,SAAOF,QAAQ,CAACK,IAAhB;AACD,CATD;;AAWA,MAAMO,QAAQ,GAAG,OAAOb,SAAP,EAA0BW,KAA1B,KAA4C;AAC3D,QAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAN,CACpB,GAAEX,UAAW,aAAYE,SAAU,SAAQW,KAAM,QAD7B,EAErB,IAFqB,EAGrB;AACER,IAAAA,eAAe,EAAE;AADnB,GAHqB,CAAvB;AAQA,SAAOF,QAAQ,CAACK,IAAhB;AACD,CAVD;;AAYA,MAAMQ,SAAS,GAAG,OAAOd,SAAP,EAA0BW,KAA1B,KAA4C;AAC5D,QAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACY,IAAN,CACpB,GAAEX,UAAW,aAAYE,SAAU,SAAQW,KAAM,SAD7B,EAErB,IAFqB,EAGrB;AAAER,IAAAA,eAAe,EAAE;AAAnB,GAHqB,CAAvB;AAKD,CAND;;AAOA,MAAMY,UAAU,GAAG;AAAEhB,EAAAA,OAAF;AAAWQ,EAAAA,SAAX;AAAsBG,EAAAA,SAAtB;AAAiCG,EAAAA,QAAjC;AAA2CC,EAAAA;AAA3C,CAAnB;AAEA,eAAeC,UAAf","sourcesContent":["import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\nimport { BugPayload } from '../redux/types';\r\n\r\nconst getBugs = async (projectId: string) => {\r\n  const response = await Axios.get(`${backendUrl}/projects/${projectId}/bugs`, {\r\n    withCredentials: true,\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst createBug = async (projectId: string, bugData: BugPayload) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs`,\r\n    bugData,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.delete(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}`,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst closeBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/close`,\r\n    null,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst reopenBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/reopen`,\r\n    null,\r\n    { withCredentials: true }\r\n  );\r\n};\r\nconst bugService = { getBugs, createBug, deleteBug, closeBug, reopenBug };\r\n\r\nexport default bugService;\r\n"]},"metadata":{},"sourceType":"module"}