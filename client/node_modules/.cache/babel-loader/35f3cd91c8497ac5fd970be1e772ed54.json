{"ast":null,"code":"import _slicedToArray from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useTheme}from'@material-ui/core/styles';import{Button,IconButton,MenuItem,Dialog,DialogContent,DialogTitle,useMediaQuery}from'@material-ui/core';import{useDialogStyles}from'../../styles/dialogStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var FormDialog=function FormDialog(_ref){var title=_ref.title,buttonType=_ref.buttonType,children=_ref.children;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var classes=useDialogStyles();var theme=useTheme();var isMobile=useMediaQuery(theme.breakpoints.down('xs'));var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var displayedButton=function displayedButton(){if(buttonType.type==='icon'){return/*#__PURE__*/_jsx(IconButton,{color:buttonType.color,onClick:handleClickOpen,children:/*#__PURE__*/_jsx(buttonType.icon,{fontSize:buttonType.iconSize})});}else if(buttonType.type==='menu'){return/*#__PURE__*/_jsxs(MenuItem,{onClick:handleClickOpen,children:[/*#__PURE__*/_jsx(buttonType.icon,{style:buttonType.iconStyle}),buttonType.text]});}else if(buttonType.type==='normal'){return/*#__PURE__*/_jsx(Button,{onClick:handleClickOpen,color:buttonType.color||'primary',variant:buttonType.variant||'contained',size:buttonType.size||'medium',startIcon:/*#__PURE__*/_jsx(buttonType.icon,{}),style:buttonType.style,className:buttonType.className,children:buttonType.text});}};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'inline'},children:[displayedButton(),/*#__PURE__*/_jsxs(Dialog,{onClose:handleClose,\"aria-labelledby\":\"customized-dialog-title\",open:open,classes:{paper:classes.dialogWrapper},children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"customized-dialog-title\",children:title}),/*#__PURE__*/_jsx(DialogContent,{children:children})]})]});};export default FormDialog;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/form-dialog/form-dialog.component.tsx"],"names":["React","useTheme","Button","IconButton","MenuItem","Dialog","DialogContent","DialogTitle","useMediaQuery","useDialogStyles","FormDialog","title","buttonType","children","useState","open","setOpen","classes","theme","isMobile","breakpoints","down","handleClickOpen","handleClose","displayedButton","type","color","iconSize","iconStyle","text","variant","size","style","className","display","paper","dialogWrapper"],"mappings":"qKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAGEC,QAHF,KAMO,0BANP,CAOA,OACEC,MADF,CAEEC,UAFF,CAGEC,QAHF,CAIEC,MAJF,CAMEC,aANF,CAOEC,WAPF,CAWEC,aAXF,KAYO,mBAZP,CAcA,OAASC,eAAT,KAAgC,2BAAhC,C,wFAGA,GAAMC,CAAAA,UAIJ,CAAG,QAJCA,CAAAA,UAID,MAAqC,IAAlCC,CAAAA,KAAkC,MAAlCA,KAAkC,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAfC,QAAe,MAAfA,QAAe,CACxC,oBAAwBb,KAAK,CAACc,QAAN,CAAe,KAAf,CAAxB,oDAAOC,IAAP,qBAAaC,OAAb,qBACA,GAAMC,CAAAA,OAAO,CAAGR,eAAe,EAA/B,CACA,GAAMS,CAAAA,KAAK,CAAGjB,QAAQ,EAAtB,CACA,GAAMkB,CAAAA,QAAQ,CAAGX,aAAa,CAACU,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BN,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAGA,GAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBP,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA,GAAMQ,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,GAAIZ,UAAU,CAACa,IAAX,GAAoB,MAAxB,CAAgC,CAC9B,mBACE,KAAC,UAAD,EAAY,KAAK,CAAEb,UAAU,CAACc,KAA9B,CAAqC,OAAO,CAAEJ,eAA9C,uBACE,KAAC,UAAD,CAAY,IAAZ,EAAiB,QAAQ,CAAEV,UAAU,CAACe,QAAtC,EADF,EADF,CAKD,CAND,IAMO,IAAIf,UAAU,CAACa,IAAX,GAAoB,MAAxB,CAAgC,CACrC,mBACE,MAAC,QAAD,EAAU,OAAO,CAAEH,eAAnB,wBACE,KAAC,UAAD,CAAY,IAAZ,EAAiB,KAAK,CAAEV,UAAU,CAACgB,SAAnC,EADF,CAEGhB,UAAU,CAACiB,IAFd,GADF,CAMD,CAPM,IAOA,IAAIjB,UAAU,CAACa,IAAX,GAAoB,QAAxB,CAAkC,CACvC,mBACE,KAAC,MAAD,EACE,OAAO,CAAEH,eADX,CAEE,KAAK,CAAEV,UAAU,CAACc,KAAX,EAAoB,SAF7B,CAGE,OAAO,CAAEd,UAAU,CAACkB,OAAX,EAAsB,WAHjC,CAIE,IAAI,CAAElB,UAAU,CAACmB,IAAX,EAAmB,QAJ3B,CAKE,SAAS,cAAE,KAAC,UAAD,CAAY,IAAZ,IALb,CAME,KAAK,CAAEnB,UAAU,CAACoB,KANpB,CAOE,SAAS,CAAEpB,UAAU,CAACqB,SAPxB,UASGrB,UAAU,CAACiB,IATd,EADF,CAaD,CACF,CA7BD,CA+BA,mBACE,aAAK,KAAK,CAAE,CAAEK,OAAO,CAAE,QAAX,CAAZ,WACGV,eAAe,EADlB,cAEE,MAAC,MAAD,EACE,OAAO,CAAED,WADX,CAEE,kBAAgB,yBAFlB,CAGE,IAAI,CAAER,IAHR,CAIE,OAAO,CAAE,CAAEoB,KAAK,CAAElB,OAAO,CAACmB,aAAjB,CAJX,wBAME,KAAC,WAAD,EAAa,EAAE,CAAC,yBAAhB,UAA2CzB,KAA3C,EANF,cAOE,KAAC,aAAD,WAAgBE,QAAhB,EAPF,GAFF,GADF,CAcD,CA9DD,CAgEA,cAAeH,CAAAA,UAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n  Paper,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\nimport { ButtonTypes } from '../types';\r\n\r\nconst FormDialog: React.FC<{\r\n  title: string;\r\n  buttonType: ButtonTypes;\r\n  children: React.ReactNode;\r\n}> = ({ title, buttonType, children }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'icon') {\r\n      return (\r\n        <IconButton color={buttonType.color} onClick={handleClickOpen}>\r\n          <buttonType.icon fontSize={buttonType.iconSize} />\r\n        </IconButton>\r\n      );\r\n    } else if (buttonType.type === 'menu') {\r\n      return (\r\n        <MenuItem onClick={handleClickOpen}>\r\n          <buttonType.icon style={buttonType.iconStyle} />\r\n          {buttonType.text}\r\n        </MenuItem>\r\n      );\r\n    } else if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'inline' }}>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        classes={{ paper: classes.dialogWrapper }}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>{children}</DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDialog;\r\n"]},"metadata":{},"sourceType":"module"}