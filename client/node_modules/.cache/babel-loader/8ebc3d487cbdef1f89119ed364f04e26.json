{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\Bug-Tracker-Pern\\\\client\\\\src\\\\pages\\\\bug-page\\\\bugpage.component.tsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useMediaQuery, useTheme } from '@material-ui/core';\nimport { selectAuthState } from '../../redux/slices/authSlice';\nimport { selectBugById, deleteBug, resolveBug } from '../../redux/slices/bugSlice';\nimport BugDetailsMobile from '../../components/bug-details-mobile/bug-details-mobile.component';\nimport BugDetails from '../../components/bug-details/bug-details.component';\nimport { useBugPageStyles } from '../../styles/muiStyles';\nimport ConfirmDialog from '../../components/confirm-dialog/confirm-dialog.component';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport RedoIcon from '@material-ui/icons/Redo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BugPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    bugId,\n    projectId\n  } = useParams();\n  const {\n    user\n  } = useSelector(selectAuthState);\n  const bug = useSelector(state => selectBugById(state, bugId, projectId));\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\n  const classes = useBugPageStyles();\n\n  if (!bug) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No bugs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  const {\n    id,\n    name,\n    description,\n    priority,\n    isResolved,\n    createdBy,\n    updatedBy,\n    closedBy,\n    createdAt\n  } = bug;\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.id) === (bug === null || bug === void 0 ? void 0 : bug.createdBy.id);\n\n  const handleBugDelete = () => {\n    dispatch(deleteBug(projectId, bugId));\n    history.push(`/projects/${projectId}`);\n  };\n\n  const handleBugReopen = () => {\n    dispatch(resolveBug(projectId, bugId, 'reopen'));\n    history.push(`/projects/${projectId}`);\n  };\n\n  const handleBugClose = () => {\n    dispatch(resolveBug(projectId, bugId, 'close'));\n    history.push(`/projects/${projectId}`);\n  };\n\n  const adminButtons = () => {\n    if (!isAdmin) return null;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonWrapper,\n        children: /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n          title: \"Delete Bug\",\n          bodyContent: \"Do you want to permanently delete your bug?\",\n          buttonText: \"Delete Bug\",\n          buttonType: {\n            type: 'normal',\n            text: 'Delete Bug',\n            icon: DeleteOutlineIcon\n          },\n          actionFunction: handleBugDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), isResolved ? /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n        title: \"Re-open Bug\",\n        bodyContent: \"Do you want to re-open your bug?\",\n        buttonText: \"Re-open Bug\",\n        buttonType: {\n          type: 'normal',\n          text: 'Re-open Bug',\n          icon: RedoIcon\n        },\n        actionFunction: handleBugReopen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n        title: \"Close Bug\",\n        bodyContent: \"Do you want to close out your bug?\",\n        buttonText: \"Close Bug\",\n        buttonType: {\n          type: 'normal',\n          text: 'Close Bug',\n          icon: DoneOutlineIcon\n        },\n        actionFunction: handleBugClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [!isMobile ? /*#__PURE__*/_jsxDEV(BugDetails, {\n      bug: bug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(BugDetailsMobile, {\n      bug: bug\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 47\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttons,\n      children: adminButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BugPage, \"QTk8tW7JDCXKosSHz9cO9b6aav4=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector, useSelector, useTheme, useMediaQuery, useBugPageStyles];\n});\n\n_c = BugPage;\nexport default BugPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BugPage\");","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/pages/bug-page/bugpage.component.tsx"],"names":["Fragment","useSelector","useDispatch","useParams","useHistory","useMediaQuery","useTheme","selectAuthState","selectBugById","deleteBug","resolveBug","BugDetailsMobile","BugDetails","useBugPageStyles","ConfirmDialog","DeleteOutlineIcon","DoneOutlineIcon","RedoIcon","BugPage","dispatch","history","bugId","projectId","user","bug","state","theme","isMobile","breakpoints","down","classes","id","name","description","priority","isResolved","createdBy","updatedBy","closedBy","createdAt","isAdmin","handleBugDelete","push","handleBugReopen","handleBugClose","adminButtons","buttonWrapper","type","text","icon","buttons"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAEA,SAA4BC,aAA5B,EAA2CC,QAA3C,QAA2D,mBAA3D;AACA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SACEC,aADF,EAEEC,SAFF,EAGEC,UAHF,QAIO,6BAJP;AAMA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AAGA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,aAAP,MAA0B,0DAA1B;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AASA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,OAAO,GAAGhB,UAAU,EAA1B;AACA,QAAM;AAAEiB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBnB,SAAS,EAAtC;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAAWtB,WAAW,CAACM,eAAD,CAA5B;AACA,QAAMiB,GAAG,GAAGvB,WAAW,CAAEwB,KAAD,IACtBjB,aAAa,CAACiB,KAAD,EAAQJ,KAAR,EAAeC,SAAf,CADQ,CAAvB;AAGA,QAAMI,KAAK,GAAGpB,QAAQ,EAAtB;AACA,QAAMqB,QAAQ,GAAGtB,aAAa,CAACqB,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAA9B;AACA,QAAMC,OAAO,GAAGjB,gBAAgB,EAAhC;;AAEA,MAAI,CAACW,GAAL,EAAU;AACR,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAM;AACJO,IAAAA,EADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,UALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA;AATI,MAUFf,GAVJ;AAYA,QAAMgB,OAAO,GAAG,CAAAjB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,EAAN,OAAaP,GAAb,aAAaA,GAAb,uBAAaA,GAAG,CAAEY,SAAL,CAAeL,EAA5B,CAAhB;;AAEA,QAAMU,eAAe,GAAG,MAAM;AAC5BtB,IAAAA,QAAQ,CAACV,SAAS,CAACa,SAAD,EAAYD,KAAZ,CAAV,CAAR;AACAD,IAAAA,OAAO,CAACsB,IAAR,CAAc,aAAYpB,SAAU,EAApC;AACD,GAHD;;AAKA,QAAMqB,eAAe,GAAG,MAAM;AAC5BxB,IAAAA,QAAQ,CAACT,UAAU,CAACY,SAAD,EAAYD,KAAZ,EAAmB,QAAnB,CAAX,CAAR;AACAD,IAAAA,OAAO,CAACsB,IAAR,CAAc,aAAYpB,SAAU,EAApC;AACD,GAHD;;AAKA,QAAMsB,cAAc,GAAG,MAAM;AAC3BzB,IAAAA,QAAQ,CAACT,UAAU,CAACY,SAAD,EAAYD,KAAZ,EAAmB,OAAnB,CAAX,CAAR;AACAD,IAAAA,OAAO,CAACsB,IAAR,CAAc,aAAYpB,SAAU,EAApC;AACD,GAHD;;AAKA,QAAMuB,YAAY,GAAG,MAAM;AACzB,QAAI,CAACL,OAAL,EAAc,OAAO,IAAP;AAEd,wBACE,QAAC,QAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEV,OAAO,CAACgB,aAAxB;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,KAAK,EAAC,YADR;AAEE,UAAA,WAAW,EAAC,6CAFd;AAGE,UAAA,UAAU,EAAC,YAHb;AAIE,UAAA,UAAU,EAAE;AACVC,YAAAA,IAAI,EAAE,QADI;AAEVC,YAAAA,IAAI,EAAE,YAFI;AAGVC,YAAAA,IAAI,EAAElC;AAHI,WAJd;AASE,UAAA,cAAc,EAAE0B;AATlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAcGN,UAAU,gBACT,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,WAAW,EAAC,kCAFd;AAGE,QAAA,UAAU,EAAC,aAHb;AAIE,QAAA,UAAU,EAAE;AACVY,UAAAA,IAAI,EAAE,QADI;AAEVC,UAAAA,IAAI,EAAE,aAFI;AAGVC,UAAAA,IAAI,EAAEhC;AAHI,SAJd;AASE,QAAA,cAAc,EAAE0B;AATlB;AAAA;AAAA;AAAA;AAAA,cADS,gBAaT,QAAC,aAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,WAAW,EAAC,oCAFd;AAGE,QAAA,UAAU,EAAC,WAHb;AAIE,QAAA,UAAU,EAAE;AACVI,UAAAA,IAAI,EAAE,QADI;AAEVC,UAAAA,IAAI,EAAE,WAFI;AAGVC,UAAAA,IAAI,EAAEjC;AAHI,SAJd;AASE,QAAA,cAAc,EAAE4B;AATlB;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0CD,GA7CD;;AA+CA,sBACE,QAAC,QAAD;AAAA,eACG,CAACjB,QAAD,gBAAY,QAAC,UAAD;AAAY,MAAA,GAAG,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YAAZ,gBAAuC,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAD1C,eAEE;AAAK,MAAA,SAAS,EAAEM,OAAO,CAACoB,OAAxB;AAAA,gBAAkCL,YAAY;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtGD;;GAAM3B,O;UACahB,W,EACDE,U,EACaD,S,EACZF,W,EACLA,W,EAGEK,Q,EACGD,a,EACDQ,gB;;;KAVZK,O;AAwGN,eAAeA,OAAf","sourcesContent":["import { Fragment } from 'react';\r\nimport { RootState } from '../../redux/store';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport {\r\n  selectBugById,\r\n  deleteBug,\r\n  resolveBug,\r\n} from '../../redux/slices/bugSlice';\r\n\r\nimport BugDetailsMobile from '../../components/bug-details-mobile/bug-details-mobile.component';\r\nimport BugDetails from '../../components/bug-details/bug-details.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport { useBugPageStyles } from '../../styles/muiStyles';\r\n\r\nimport ConfirmDialog from '../../components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\n\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\ninterface ParamTypes {\r\n  projectId: string;\r\n  bugId: string;\r\n}\r\n\r\nconst BugPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { bugId, projectId } = useParams<ParamTypes>();\r\n  const { user } = useSelector(selectAuthState);\r\n  const bug = useSelector((state: RootState) =>\r\n    selectBugById(state, bugId, projectId)\r\n  );\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const classes = useBugPageStyles();\r\n\r\n  if (!bug) {\r\n    return (\r\n      <div>\r\n        <p>No bugs</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  const isAdmin = user?.id === bug?.createdBy.id;\r\n\r\n  const handleBugDelete = () => {\r\n    dispatch(deleteBug(projectId, bugId));\r\n    history.push(`/projects/${projectId}`);\r\n  };\r\n\r\n  const handleBugReopen = () => {\r\n    dispatch(resolveBug(projectId, bugId, 'reopen'));\r\n    history.push(`/projects/${projectId}`);\r\n  };\r\n\r\n  const handleBugClose = () => {\r\n    dispatch(resolveBug(projectId, bugId, 'close'));\r\n    history.push(`/projects/${projectId}`);\r\n  };\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Delete Bug\"\r\n            bodyContent=\"Do you want to permanently delete your bug?\"\r\n            buttonText=\"Delete Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Bug',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleBugDelete}\r\n          />\r\n        </div>\r\n        {isResolved ? (\r\n          <ConfirmDialog\r\n            title=\"Re-open Bug\"\r\n            bodyContent=\"Do you want to re-open your bug?\"\r\n            buttonText=\"Re-open Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Re-open Bug',\r\n              icon: RedoIcon,\r\n            }}\r\n            actionFunction={handleBugReopen}\r\n          ></ConfirmDialog>\r\n        ) : (\r\n          <ConfirmDialog\r\n            title=\"Close Bug\"\r\n            bodyContent=\"Do you want to close out your bug?\"\r\n            buttonText=\"Close Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Close Bug',\r\n              icon: DoneOutlineIcon,\r\n            }}\r\n            actionFunction={handleBugClose}\r\n          ></ConfirmDialog>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isMobile ? <BugDetails bug={bug} /> : <BugDetailsMobile bug={bug} />}\r\n      <div className={classes.buttons}>{adminButtons()}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BugPage;\r\n"]},"metadata":{},"sourceType":"module"}