{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Desktop\\\\Bug-Tracker-Pern\\\\client\\\\src\\\\components\\\\confirm-dialog\\\\confirm-dialog.component.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core';\nimport { useDialogStyles } from '../../styles/dialogStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ConfirmDialog = ({\n  title,\n  bodyContent,\n  buttonText,\n  buttonType,\n  actionFunction\n}) => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const classes = useDialogStyles();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAction = () => {\n    actionFunction();\n    handleClose();\n  };\n\n  const displayedButton = () => {\n    if (buttonType.type === 'normal') {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickOpen,\n        color: buttonType.color || 'primary',\n        variant: buttonType.variant || 'contained',\n        size: buttonType.size || 'medium',\n        startIcon: /*#__PURE__*/_jsxDEV(buttonType.icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this),\n        style: buttonType.style,\n        className: buttonType.className,\n        children: buttonType.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [displayedButton(), /*#__PURE__*/_jsxDEV(Dialog, {\n      onClose: handleClose,\n      \"aria-labelledby\": \"customized-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"customized-dialog-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: bodyContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"secondary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAction,\n          color: \"primary\",\n          children: buttonType.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConfirmDialog, \"s/d+dwRt9sXzEudtfaBYaDCzf1w=\", false, function () {\n  return [useDialogStyles];\n});\n\n_c = ConfirmDialog;\nexport default ConfirmDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmDialog\");","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/components/confirm-dialog/confirm-dialog.component.tsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","Typography","useDialogStyles","ConfirmDialog","title","bodyContent","buttonText","buttonType","actionFunction","open","setOpen","useState","classes","handleClickOpen","handleClose","handleAction","displayedButton","type","color","variant","size","style","className","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,SACEC,MADF,EAIEC,MAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,WAPF,EAQEC,UARF,QAUO,mBAVP;AAaA,SAASC,eAAT,QAAgC,2BAAhC;;;AAEA,MAAMC,aAMJ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA,UAAtB;AAAkCC,EAAAA,UAAlC;AAA8CC,EAAAA;AAA9C,CAAD,KAAoE;AAAA;;AACvE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMC,OAAO,GAAGV,eAAe,EAA/B;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC5BH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAGA,QAAMI,WAAW,GAAG,MAAM;AACxBJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMK,YAAY,GAAG,MAAM;AACzBP,IAAAA,cAAc;AACdM,IAAAA,WAAW;AACZ,GAHD;;AAKA,QAAME,eAAe,GAAG,MAAM;AAC5B,QAAIT,UAAU,CAACU,IAAX,KAAoB,QAAxB,EAAkC;AAChC,0BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEJ,eADX;AAEE,QAAA,KAAK,EAAEN,UAAU,CAACW,KAAX,IAAoB,SAF7B;AAGE,QAAA,OAAO,EAAEX,UAAU,CAACY,OAAX,IAAsB,WAHjC;AAIE,QAAA,IAAI,EAAEZ,UAAU,CAACa,IAAX,IAAmB,QAJ3B;AAKE,QAAA,SAAS,eAAE,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA,gBALb;AAME,QAAA,KAAK,EAAEb,UAAU,CAACc,KANpB;AAOE,QAAA,SAAS,EAAEd,UAAU,CAACe,SAPxB;AAAA,kBASGf,UAAU,CAACgB;AATd;AAAA;AAAA;AAAA;AAAA,cADF;AAaD;AACF,GAhBD;;AAkBA,sBACE;AAAA,eACGP,eAAe,EADlB,eAEE,QAAC,MAAD;AACE,MAAA,OAAO,EAAEF,WADX;AAEE,yBAAgB,yBAFlB;AAGE,MAAA,IAAI,EAAEL,IAHR;AAAA,8BAKE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,yBAAhB;AAAA,kBAA2CL;AAA3C;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,aAAD;AAAe,QAAA,QAAQ,MAAvB;AAAA,+BACE,QAAC,UAAD;AAAA,oBAAaC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eASE,QAAC,aAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAES,WAAjB;AAA8B,UAAA,KAAK,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,YAAjB;AAA+B,UAAA,KAAK,EAAC,SAArC;AAAA,oBACGR,UAAU,CAACgB;AADd;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA/DD;;GAAMpB,a;UAQYD,e;;;KARZC,a;AAiEN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n} from '@material-ui/core';\r\n\r\nimport { ButtonTypes } from '../types';\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\n\r\nconst ConfirmDialog: React.FC<{\r\n  title: string;\r\n  bodyContent: string;\r\n  buttonText: string;\r\n  buttonType: ButtonTypes;\r\n  actionFunction: () => void;\r\n}> = ({ title, bodyContent, buttonText, buttonType, actionFunction }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAction = () => {\r\n    actionFunction();\r\n    handleClose();\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography>{bodyContent}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {buttonType.text}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n"]},"metadata":{},"sourceType":"module"}