{"ast":null,"code":"import _slicedToArray from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch}from'react-redux';import{registerUser}from'../../redux/slices/authSlice';import{useHistory}from'react-router-dom';import{TextField,Paper,Typography,Button}from'@material-ui/core';import{authPageStyles}from'../../styles/muiStyles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RegisterPage=function RegisterPage(){var classes=authPageStyles();var dispatch=useDispatch();var history=useHistory();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),confirmPassword=_useState6[0],setConfirmPassword=_useState6[1];var handleSubmit=function handleSubmit(e){e.preventDefault();if(password!==confirmPassword){console.log('error, passwords not matching');}dispatch(registerUser({username:username,password:password}));history.push('/');};return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsxs(Paper,{className:classes.body,elevation:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",style:{marginBottom:'2rem'},children:\"Register Page\"}),/*#__PURE__*/_jsxs(\"form\",{noValidate:true,autoComplete:\"off\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Username\",variant:\"outlined\",type:\"text\",name:\"username\",fullWidth:true,className:classes.inputField,value:username,onChange:function onChange(e){return setUsername(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Password\",variant:\"outlined\",type:\"password\",name:\"password\",fullWidth:true,className:classes.inputField,value:password,onChange:function onChange(e){return setPassword(e.target.value);}}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Confirm Password\",variant:\"outlined\",type:\"password\",name:\"password2\",fullWidth:true,className:classes.inputField,value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}}),/*#__PURE__*/_jsx(Button,{type:\"submit\",size:\"large\",color:\"primary\",variant:\"contained\",fullWidth:true,children:\"Register!\"}),/*#__PURE__*/_jsxs(Typography,{style:{marginTop:'1rem',display:'flex',justifyContent:'center'},children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Log in\"})]})]})]})});};export default RegisterPage;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/pages/register/registerpage.component.tsx"],"names":["React","useState","useDispatch","registerUser","useHistory","TextField","Paper","Typography","Button","authPageStyles","RegisterPage","classes","dispatch","history","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","console","log","push","root","body","marginBottom","inputField","target","value","marginTop","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { registerUser } from '../../redux/slices/authSlice';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextField, Paper, Typography, Button } from '@material-ui/core';\r\n\r\nimport { authPageStyles } from '../../styles/muiStyles';\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst RegisterPage = () => {\r\n  const classes = authPageStyles();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const [username, setUsername] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      console.log('error, passwords not matching');\r\n    }\r\n    dispatch(registerUser({ username, password }));\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.body} elevation={2}>\r\n        <Typography variant=\"h4\" style={{ marginBottom: '2rem' }}>\r\n          Register Page\r\n        </Typography>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={username}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUsername(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={password}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setPassword(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Confirm Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={confirmPassword}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setConfirmPassword(e.target.value)\r\n            }\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n          >\r\n            Register!\r\n          </Button>\r\n          <Typography\r\n            style={{\r\n              marginTop: '1rem',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            Already have an account? <a href=\"/login\">Log in</a>\r\n          </Typography>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"]},"metadata":{},"sourceType":"module"}