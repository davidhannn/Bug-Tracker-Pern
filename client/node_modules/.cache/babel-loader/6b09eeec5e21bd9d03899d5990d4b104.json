{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/david/Desktop/Bug-Tracker-Pern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{createSlice}from'@reduxjs/toolkit';import bugService from'../../services/bug';var initialState={bugs:{},fetchStatus:false,fetchError:null,submitStatus:false,submitError:null};var bugSlice=createSlice({name:'bugs',initialState:initialState,reducers:{setBugs:function setBugs(state,action){state.bugs[action.payload.projectId]=action.payload.bugs;state.fetchStatus=false;state.fetchError=null;},addBug:function addBug(state,action){if(action.payload.projectId in state.bugs){state.bugs[action.payload.projectId]=[].concat(_toConsumableArray(state.bugs[action.payload.projectId]),[action.payload.bug]);state.submitStatus=false;state.submitError=null;}else{state.bugs[action.payload.projectId]=[action.payload.bug];}},removeBug:function removeBug(state,action){state.bugs[action.payload.projectId]=state.bugs[action.payload.projectId].filter(function(bug){return bug.id!==action.payload.bugId;});},updateBugStatus:function updateBugStatus(state,action){state.bugs[action.payload.projectId]=state.bugs[action.payload.projectId].map(function(bug){return bug.id===action.payload.bugId?_objectSpread(_objectSpread({},bug),action.payload.isResolved):bug;});},setFetchBug:function setFetchBug(state){state.fetchStatus=true;state.fetchError=null;},setSubmitBug:function setSubmitBug(state){state.submitStatus=true;state.submitError=null;}}});var _bugSlice$actions=bugSlice.actions,setBugs=_bugSlice$actions.setBugs,addBug=_bugSlice$actions.addBug,setSubmitBug=_bugSlice$actions.setSubmitBug,setFetchBug=_bugSlice$actions.setFetchBug,removeBug=_bugSlice$actions.removeBug,updateBugStatus=_bugSlice$actions.updateBugStatus;export{setBugs,addBug,setSubmitBug,setFetchBug,removeBug,updateBugStatus};export var fetchBugs=function fetchBugs(projectId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var bugData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(setFetchBug());_context.next=4;return bugService.getBugs(projectId);case 4:bugData=_context.sent;dispatch(setBugs({bugs:bugData,projectId:projectId}));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var createBug=function createBug(projectId,bugData){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var createdBug;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch(setSubmitBug());_context2.next=4;return bugService.createBug(projectId,bugData);case 4:createdBug=_context2.sent;dispatch(addBug({bug:createdBug,projectId:projectId}));_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var deleteBug=function deleteBug(projectId,bugId){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return bugService.deleteBug(projectId,bugId);case 2:dispatch(removeBug({projectId:projectId,bugId:bugId}));case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var resolveBug=function resolveBug(projectId,bugId,action){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var updatedBug,_updatedBug,isResolved;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;if(!(action==='close')){_context4.next=7;break;}_context4.next=4;return bugService.closeBug(projectId,bugId);case 4:updatedBug=_context4.sent;_context4.next=8;break;case 7:updatedBug=bugService.reopenBug(projectId,bugId);case 8:_updatedBug=updatedBug,isResolved=_updatedBug.isResolved;dispatch(updateBugStatus({isResolved:isResolved,bugId:bugId,projectId:projectId}));_context4.next=15;break;case 12:_context4.prev=12;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 15:case\"end\":return _context4.stop();}}},_callee4,null,[[0,12]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var selectBugsState=function selectBugsState(state){return state.bugs;};export var selectBugsStateForProject=function selectBugsStateForProject(state,projectId){var _state$bugs$bugs;return(_state$bugs$bugs=state.bugs.bugs)===null||_state$bugs$bugs===void 0?void 0:_state$bugs$bugs[projectId];};export var selectBugById=function selectBugById(state,bugId,projectId){var _state$bugs$bugs2;return(_state$bugs$bugs2=state.bugs.bugs)===null||_state$bugs$bugs2===void 0?void 0:_state$bugs$bugs2[projectId].find(function(b){return b.id===bugId;});};export default bugSlice.reducer;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/redux/slices/bugSlice.ts"],"names":["createSlice","bugService","initialState","bugs","fetchStatus","fetchError","submitStatus","submitError","bugSlice","name","reducers","setBugs","state","action","payload","projectId","addBug","bug","removeBug","filter","id","bugId","updateBugStatus","map","isResolved","setFetchBug","setSubmitBug","actions","fetchBugs","dispatch","getBugs","bugData","console","log","createBug","createdBug","deleteBug","resolveBug","closeBug","updatedBug","reopenBug","selectBugsState","selectBugsStateForProject","selectBugById","find","b","reducer"],"mappings":"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","sourcesContent":["import { AppThunk } from './../store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { BugState, BugPayload } from '../types';\r\nimport bugService from '../../services/bug';\r\ninterface InitialBugState {\r\n  bugs: { [projectId: string]: BugState[] };\r\n  fetchStatus: boolean;\r\n  fetchError: string | null;\r\n  submitStatus: boolean;\r\n  submitError: string | null;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  bugs: {},\r\n  fetchStatus: false,\r\n  fetchError: null,\r\n  submitStatus: false,\r\n  submitError: null,\r\n};\r\n\r\nconst bugSlice = createSlice({\r\n  name: 'bugs',\r\n  initialState,\r\n  reducers: {\r\n    setBugs: (\r\n      state,\r\n      action: PayloadAction<{ bugs: BugState[]; projectId: string }>\r\n    ) => {\r\n      state.bugs[action.payload.projectId] = action.payload.bugs;\r\n      state.fetchStatus = false;\r\n      state.fetchError = null;\r\n    },\r\n    addBug: (\r\n      state,\r\n      action: PayloadAction<{ bug: BugState; projectId: string }>\r\n    ) => {\r\n      if (action.payload.projectId in state.bugs) {\r\n        state.bugs[action.payload.projectId] = [\r\n          ...state.bugs[action.payload.projectId],\r\n          action.payload.bug,\r\n        ];\r\n        state.submitStatus = false;\r\n        state.submitError = null;\r\n      } else {\r\n        state.bugs[action.payload.projectId] = [action.payload.bug];\r\n      }\r\n    },\r\n    removeBug: (\r\n      state,\r\n      action: PayloadAction<{ projectId: string; bugId: string }>\r\n    ) => {\r\n      state.bugs[action.payload.projectId] = state.bugs[\r\n        action.payload.projectId\r\n      ].filter((bug) => bug.id !== action.payload.bugId);\r\n    },\r\n    updateBugStatus: (\r\n      state,\r\n      action: PayloadAction<{\r\n        isResolved: Boolean;\r\n        projectId: string;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs[action.payload.projectId] = state.bugs[\r\n        action.payload.projectId\r\n      ].map((bug) =>\r\n        bug.id === action.payload.bugId\r\n          ? { ...bug, ...action.payload.isResolved }\r\n          : bug\r\n      );\r\n    },\r\n    setFetchBug: (state) => {\r\n      state.fetchStatus = true;\r\n      state.fetchError = null;\r\n    },\r\n    setSubmitBug: (state) => {\r\n      state.submitStatus = true;\r\n      state.submitError = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setBugs,\r\n  addBug,\r\n  setSubmitBug,\r\n  setFetchBug,\r\n  removeBug,\r\n  updateBugStatus,\r\n} = bugSlice.actions;\r\n\r\nexport const fetchBugs = (projectId: string): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setFetchBug());\r\n      const bugData = await bugService.getBugs(projectId);\r\n      dispatch(setBugs({ bugs: bugData, projectId }));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createBug = (projectId: string, bugData: BugPayload): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBug());\r\n      const createdBug = await bugService.createBug(projectId, bugData);\r\n      dispatch(addBug({ bug: createdBug, projectId }));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBug = (projectId: string, bugId: string): AppThunk => {\r\n  return async (dispatch) => {\r\n    await bugService.deleteBug(projectId, bugId);\r\n    dispatch(removeBug({ projectId, bugId }));\r\n  };\r\n};\r\n\r\nexport const resolveBug = (\r\n  projectId: string,\r\n  bugId: string,\r\n  action: 'close' | 'reopen'\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let updatedBug;\r\n      if (action === 'close') {\r\n        updatedBug = await bugService.closeBug(projectId, bugId);\r\n      } else {\r\n        updatedBug = bugService.reopenBug(projectId, bugId);\r\n      }\r\n\r\n      const { isResolved } = updatedBug;\r\n\r\n      dispatch(updateBugStatus({ isResolved, bugId, projectId }));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectBugsState = (state: RootState) => state.bugs;\r\n\r\nexport const selectBugsStateForProject = (\r\n  state: RootState,\r\n  projectId: string\r\n) => {\r\n  return state.bugs.bugs?.[projectId];\r\n};\r\n\r\nexport const selectBugById = (\r\n  state: RootState,\r\n  bugId: string,\r\n  projectId: string\r\n) => {\r\n  return state.bugs.bugs?.[projectId].find((b) => b.id === bugId);\r\n};\r\nexport default bugSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}