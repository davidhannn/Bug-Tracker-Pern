{"ast":null,"code":"const sortProjects = (projects, sortBy) => {\n  switch (sortBy) {\n    case 'newest':\n      return projects.slice().sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt));\n\n    case 'oldest':\n      return projects.slice().sort((a, b) => +new Date(a.createdAt) - +new Date(b.createdAt));\n\n    case 'most-bugs':\n      return projects.slice().sort((a, b) => b.bugs.length - a.bugs.length);\n\n    case 'least-bugs':\n      return projects.slice().sort((a, b) => a.bugs.length - b.bugs.length);\n\n    case 'most-members':\n      return projects.slice().sort((a, b) => b.members.length - a.members.length);\n\n    case 'least-members':\n      return projects.slice().sort((a, b) => a.members.length - b.members.length);\n  }\n};\n\nexport default sortProjects;","map":{"version":3,"sources":["C:/Users/david/Desktop/Bug-Tracker-Pern/client/src/utils/sortProject.ts"],"names":["sortProjects","projects","sortBy","slice","sort","a","b","Date","createdAt","bugs","length","members"],"mappings":"AAEA,MAAMA,YAAY,GAAG,CAACC,QAAD,EAA2BC,MAA3B,KAAyD;AAC5E,UAAQA,MAAR;AACE,SAAK,QAAL;AACE,aAAOD,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAAC,IAAIC,IAAJ,CAASD,CAAC,CAACE,SAAX,CAAD,GAAyB,CAAC,IAAID,IAAJ,CAASF,CAAC,CAACG,SAAX,CAFrC,CAAP;;AAIF,SAAK,QAAL;AACE,aAAOP,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAAC,IAAIC,IAAJ,CAASF,CAAC,CAACG,SAAX,CAAD,GAAyB,CAAC,IAAID,IAAJ,CAASD,CAAC,CAACE,SAAX,CAFrC,CAAP;;AAIF,SAAK,WAAL;AACE,aAAOP,QAAQ,CAACE,KAAT,GAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACG,IAAF,CAAOC,MAAP,GAAgBL,CAAC,CAACI,IAAF,CAAOC,MAAvD,CAAP;;AAEF,SAAK,YAAL;AACE,aAAOT,QAAQ,CAACE,KAAT,GAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,IAAF,CAAOC,MAAP,GAAgBJ,CAAC,CAACG,IAAF,CAAOC,MAAvD,CAAP;;AAEF,SAAK,cAAL;AACE,aAAOT,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACK,OAAF,CAAUD,MAAV,GAAmBL,CAAC,CAACM,OAAF,CAAUD,MAFxC,CAAP;;AAIF,SAAK,eAAL;AACE,aAAOT,QAAQ,CACZE,KADI,GAEJC,IAFI,CAEC,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACM,OAAF,CAAUD,MAAV,GAAmBJ,CAAC,CAACK,OAAF,CAAUD,MAFxC,CAAP;AAvBJ;AA2BD,CA5BD;;AA8BA,eAAeV,YAAf","sourcesContent":["import { ProjectState, ProjectSortValues } from '../redux/types';\r\n\r\nconst sortProjects = (projects: ProjectState[], sortBy: ProjectSortValues) => {\r\n  switch (sortBy) {\r\n    case 'newest':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt));\r\n\r\n    case 'oldest':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => +new Date(a.createdAt) - +new Date(b.createdAt));\r\n\r\n    case 'most-bugs':\r\n      return projects.slice().sort((a, b) => b.bugs.length - a.bugs.length);\r\n\r\n    case 'least-bugs':\r\n      return projects.slice().sort((a, b) => a.bugs.length - b.bugs.length);\r\n\r\n    case 'most-members':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => b.members.length - a.members.length);\r\n\r\n    case 'least-members':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => a.members.length - b.members.length);\r\n  }\r\n};\r\n\r\nexport default sortProjects;\r\n"]},"metadata":{},"sourceType":"module"}