{"version":3,"sources":["backendUrl.ts","services/auth.ts","services/projects.ts","redux/slices/projectSlice.ts","redux/slices/authSlice.ts","services/users.ts","redux/slices/usersSlice.ts","pages/create-project/createprojectpage.component.tsx","styles/muiStyles.ts","pages/register/registerpage.component.tsx","pages/login-page/loginpage.component.tsx","utils/helper.ts","components/projects-table/projects-table.component.tsx","components/spinner/spinner.component.tsx","styles/dialogStyles.ts","components/form-dialog/form-dialog.component.tsx","components/project-form/project-form.component.tsx","components/search-bar/search-bar.component.tsx","components/sort-bar/sort-bar.component.tsx","components/projects-search-sort/projects-search-sort.component.tsx","utils/sortProject.ts","components/projects-table-mobile/projects-table-mobile.component.tsx","pages/home-page/homepage.component.tsx","services/bug.ts","redux/slices/bugSlice.ts","styles/buttonStyles.ts","components/bugs-table/bugs-table.component.tsx","components/confirm-dialog/confirm-dialog.component.tsx","components/project-header/project-header.component.tsx","components/bug-form/bug-form.component.tsx","components/bugs-table-mobile/bugs-table-mobile.component.tsx","pages/project-page/projectpage.component.tsx","components/bug-details-mobile/bug-details-mobile.component.tsx","components/bug-details/bug-details.component.tsx","pages/bug-page/bugpage.component.tsx","components/navbar/navbar.component.tsx","Routes.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["backendUrl","login","credentials","a","Axios","post","response","data","register","withCredentials","verify","get","authService","logout","getProjects","console","log","getProject","id","projectService","createProject","projectData","deleteProject","projectId","delete","editProjectName","newProjectName","put","name","projectsSlice","createSlice","initialState","projects","fetchStatus","fetchError","submitLoading","submitError","sortBy","reducers","setProjects","state","action","payload","addProject","setProjectsFetchLoading","removeProject","filter","project","updateProjectName","map","setSubmitProjectLoading","sortProjectsBy","actions","fetchProjects","dispatch","allProjects","createNewProject","closeDialog","newProject","selectProjectsState","authSlice","user","setUser","logOutUser","userData","selectAuthState","auth","usersService","getUsers","usersSlice","users","setUsers","allUsers","selectUsersState","useStyles","makeStyles","theme","createStyles","root","width","marginTop","spacing","CreateProjectPage","useDispatch","useSelector","useState","members","setMembers","setName","useEffect","onSubmit","e","preventDefault","TextField","label","variant","type","value","onChange","target","Autocomplete","multiple","selectedOption","option","options","getOptionLabel","username","defaultValue","filterSelectedOptions","renderInput","params","placeholder","navStyles","flexGrow","menuButton","marginRight","title","authPageStyles","display","justifyContent","alignItems","body","padding","height","margin","flexDirection","breakpoints","down","inputField","marginBottom","submitButton","useHeaderStyles","headerPaper","adminButtons","buttonWrapper","mobileWrapper","mobileDescription","useSearchSortStyles","inputWrapper","minWidth","searchBar","sortBar","flexWrapper","marginLeft","index","useTableStyles","table","fontWeight","color","backgroundColor","clickableCell","palette","primary","main","cursor","scrollableTable","secondary","light","overflowY","maxHeight","StyledTableCell","head","common","black","white","fontSize","StyledTableRow","hover","useFormStyles","formControl","radioGroupForm","radioGroup","radioGroupLabel","formControlLabels","useHomePageStyles","projectsListTable","itemWrapper","flexedWrapper","iconWrapper","iconText","verticalAlign","useBodyStyles","maxWidth","useBugPageStyles","buttons","details","RegisterPage","classes","history","useHistory","setUsername","password","setPassword","confirmPassword","setConfirmPassword","className","Paper","elevation","Typography","style","noValidate","autoComplete","newUser","loggedUser","push","fullWidth","Button","size","href","LoginPage","handleSubmit","err","formatDateTime","date","format","Date","ProjectsTable","TableContainer","component","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","i","scope","onClick","bugs","length","createdBy","createdAt","Spinner","CircularProgress","useDialogStyles","dialogWrapper","overflow","fab","position","bottom","right","zIndex","roundIconButton","borderRadius","FormDialog","buttonType","children","React","open","setOpen","useTheme","handleClickOpen","useMediaQuery","IconButton","icon","iconSize","MenuItem","iconStyle","text","startIcon","Dialog","onClose","aria-labelledby","paper","DialogTitle","DialogContent","ProjectForm","editMode","currentName","currentMembers","projectName","setProjectName","selectMembersOnChange","updatedProjectName","projectUser","SearchBar","searchText","setSearchText","SortBar","handleSortChange","sortItems","FormControl","InputLabel","Select","item","ProjectsSearchSort","isMobile","selectedValue","sortProjects","slice","sort","b","ProjectsTableMobile","Divider","Link","RouterLink","to","HomePage","filteredSortedProjects","toLowerCase","includes","AddIcon","bugService","getBugs","createBug","bugData","deleteBug","bugId","closeBug","reopenBug","bugSlice","submitStatus","setBugs","addBug","bug","removeBug","updateBugStatus","isResolved","setFetchBug","setSubmitBug","resolveBug","updatedBug","selectBugsState","colors","Low","Medium","High","closed","closedBg","openBg","priorityStyles","priority","statusStyles","BugsTable","singleBugs","textTransform","ConfirmDialog","bodyContent","buttonText","actionFunction","handleClose","displayedButton","dividers","DialogActions","ProjectHeader","currentProject","isAdmin","updatedAt","handleProjectDelete","EditIcon","DeleteOutlineIcon","GroupIcon","BugForm","currentId","bugDescription","resolvedStatus","priorityStatus","description","setDescription","setPriority","createdBug","RadioGroup","row","event","FormLabel","FormControlLabel","control","Radio","BugsTableMobile","ProjectPage","useParams","find","p","selectProjectById","selectBugsStateForProject","fetchBugs","BugDetailsMobile","updatedBy","closedBy","BugDetails","BugPage","selectBugById","handleBugDelete","handleBugReopen","handleBugClose","RedoIcon","DoneOutlineIcon","Navbar","AppBar","Toolbar","window","location","reload","Routes","Container","disableGutters","exact","path","defaults","App","store","configureStore","reducer","authReducer","projectReducer","userReducer","bugReducer","ReactDOM","render","document","getElementById"],"mappings":"6OAEeA,EAFI,wCCQbC,EAAK,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACWC,IAAMC,KAAN,UAAcL,EAAd,UAAkCE,GAD7C,cACNI,EADM,yBAELA,EAASC,MAFJ,2CAAH,sDAKLC,EAAQ,uCAAG,WAAON,GAAP,eAAAC,EAAA,sEACQC,IAAMC,KAAN,UAAcL,EAAd,aAAqCE,EAAa,CACvEO,iBAAiB,IAFJ,cACTH,EADS,yBAIRA,EAASC,MAJD,2CAAH,sDAORG,EAAM,uCAAG,4BAAAP,EAAA,sEACUC,IAAMO,IAAN,UAAaX,EAAb,WAAkC,CACvDS,iBAAiB,IAFN,cACPH,EADO,yBAINA,EAASC,MAJH,2CAAH,qDAYGK,EAFK,CAAEX,QAAOY,OAHjB,uCAAG,sBAAAV,EAAA,sEACUC,IAAMO,IAAN,UAAaX,EAAb,YADV,yDAAH,qDAGyBU,SAAQF,Y,gBC1BvCM,EAAW,uCAAG,4BAAAX,EAAA,sEACKC,IAAMO,IAAN,UAAaX,EAAb,aAAoC,CACzDS,iBAAiB,IAFD,cACZH,EADY,OAIlBS,QAAQC,IAAIV,GAJM,kBAKXA,EAASC,MALE,2CAAH,qDAQXU,EAAU,uCAAG,WAAOC,GAAP,eAAAf,EAAA,sEACMC,IAAMO,IAAN,UAAaX,EAAb,qBAAoCkB,GAAM,CAC/DT,iBAAiB,IAFF,cACXH,EADW,OAIjBS,QAAQC,IAAIV,GAJK,kBAKVA,EAASC,MALC,2CAAH,sDA6CDY,EARQ,CACrBL,cACAM,cA/BiB,uCAAG,WAAOC,GAAP,eAAAlB,EAAA,sEACGC,IAAMC,KAAN,UAAcL,EAAd,aAAqCqB,EAAa,CACvEZ,iBAAiB,IAFC,cACdH,EADc,OAKpBS,QAAQC,IAAIV,GALQ,kBAMbA,EAASC,MANI,2CAAH,sDAgCjBU,aACAK,cAxBiB,uCAAG,WAAOC,GAAP,eAAApB,EAAA,sEACGC,IAAMoB,OAAN,UAAgBxB,EAAhB,qBAAuCuB,GAAa,CACzEd,iBAAiB,IAFC,cACdH,EADc,yBAKbA,GALa,2CAAH,sDAyBjBmB,gBAjBmB,uCAAG,WAAOF,EAAmBG,GAA1B,eAAAvB,EAAA,sEACCC,IAAMuB,IAAN,UAClB3B,EADkB,qBACKuB,GAC1B,CAAEK,KAAMF,GACR,CACEjB,iBAAiB,IALC,cAChBH,EADgB,yBASfA,EAASC,MATM,2CAAH,yDCXfsB,EAAgBC,YAAY,CAChCF,KAAM,WACNG,aAXyC,CACzCC,SAAU,GACVC,YAAa,OACbC,WAAY,KACZC,eAAe,EACfC,YAAa,KACbC,OAAQ,UAMRC,SAAU,CACRC,YAAa,SAACC,EAAOC,GACnBD,EAAMR,SAAWS,EAAOC,QACxBF,EAAMP,YAAc,UACpBO,EAAMN,WAAa,MAErBS,WAAY,SAACH,EAAOC,GAClBD,EAAMR,SAAN,sBAAqBQ,EAAMR,UAA3B,CAAqCS,EAAOC,UAC5CF,EAAML,eAAgB,EACtBK,EAAMJ,YAAc,MAEtBQ,wBAAyB,SAACJ,GACxBA,EAAMP,YAAc,UACpBO,EAAMN,WAAa,MAErBW,cAAe,SAACL,EAAOC,GACrBD,EAAMR,SAAWQ,EAAMR,SAASc,QAC9B,SAACC,GAAD,OAAaA,EAAQ7B,KAAOuB,EAAOC,YAGvCM,kBAAmB,SACjBR,EACAC,GAEAD,EAAMR,SAAWQ,EAAMR,SAASiB,KAAI,SAACF,GAAD,OAClCA,EAAQ7B,KAAOuB,EAAOC,QAAQnB,UAA9B,2BACSwB,GAAYN,EAAOC,QAAQnC,MAChCwC,MAGRG,wBAAyB,SAACV,GACxBA,EAAML,eAAgB,EACtBK,EAAMJ,YAAc,MAEtBe,eAAgB,SAACX,EAAOC,GACtBD,EAAMH,OAASI,EAAOC,YAKrB,EAQHb,EAAcuB,QAPhBb,EADK,EACLA,YACAI,EAFK,EAELA,WACAC,EAHK,EAGLA,wBACAC,EAJK,EAILA,cACAG,EALK,EAKLA,kBACAE,EANK,EAMLA,wBACAC,EAPK,EAOLA,eAGWE,EAAgB,WAC3B,8CAAO,WAAOC,GAAP,eAAAnD,EAAA,sEAEHmD,EAASV,KAFN,SAGuBzB,EAAeL,cAHtC,OAGGyC,EAHH,OAIHD,EAASf,EAAYgB,IAJlB,gDAMHxC,QAAQC,IAAR,MANG,yDAAP,uDAWWwC,EAAmB,SAC9BnC,EACAoC,GAEA,8CAAO,WAAOH,GAAP,eAAAnD,EAAA,sEAEHmD,EAASJ,KAFN,SAGsB/B,EAAeC,cAAcC,GAHnD,OAGGqC,EAHH,OAIHJ,EAASX,EAAWe,IACpBD,GAAeA,IALZ,gDAOH1C,QAAQC,IAAR,MAPG,yDAAP,uDA8CW2C,EAAsB,SAACnB,GAAD,OAAsBA,EAAMR,UAMhDH,IAAf,QClIM+B,EAAY9B,YAAY,CAC5BF,KAAM,OACNG,aANqC,CACrC8B,KAAM,MAMNvB,SAAU,CACRwB,QAAS,SAACtB,EAAOC,GACfD,EAAMqB,KAAOpB,EAAOC,SAEtBqB,WAAY,SAACvB,EAAOC,GAClBD,EAAMqB,KAAO,SAKZ,EAAgCD,EAAUR,QAAlCU,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAEX9D,EAAQ,SAACC,GACpB,8CAAO,WAAOoD,GAAP,eAAAnD,EAAA,+EAEoBS,EAAYX,MAAMC,GAFtC,OAEG8D,EAFH,OAGHV,EAASQ,EAAQE,IAEjBV,EAASD,KALN,gDAOHtC,QAAQC,IAAR,MAPG,yDAAP,uDAmDWiD,EAAkB,SAACzB,GAAD,OAAsBA,EAAM0B,MAE5CN,IAAf,Q,QCzEeO,EAFM,CAAEC,SART,uCAAG,4BAAAjE,EAAA,sEACQC,IAAMO,IAAN,UAAaX,EAAb,UAAiC,CACtDS,iBAAiB,IAFJ,cACTH,EADS,OAIfS,QAAQC,IAAIV,GAJG,kBAKRA,EAASC,MALD,2CAAH,sDCYR8D,EAAavC,YAAY,CAC7BF,KAAM,QACNG,aANsC,CACtCuC,MAAO,IAMPhC,SAAU,CACRiC,SAAU,SAAC/B,EAAOC,GAChBD,EAAM8B,MAAQ7B,EAAOC,YAKZ6B,EAAaF,EAAWjB,QAAxBmB,SAEFH,EAAW,WACtB,8CAAO,WAAOd,GAAP,eAAAnD,EAAA,+EAEoBgE,EAAaC,WAFjC,OAEGI,EAFH,OAGHlB,EAASiB,EAASC,IAHf,gDAKHzD,QAAQC,IAAR,MALG,yDAAP,uDAUWyD,EAAmB,SAACjC,GAAD,OAAsBA,EAAM8B,OAE7CD,IAAf,Q,+CCvBMK,GAAYC,cAAW,SAACC,GAAD,OAC3BC,aAAa,CACXC,KAAM,CACJC,MAAO,IACP,YAAa,CACXC,UAAWJ,EAAMK,QAAQ,UAiElBC,GA3DW,WACxB,IAAM5B,EAAW6B,cACTb,EAAUc,YAAYX,GAAtBH,MAGR,GAFgBI,KAEcW,mBAAmB,KAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOzD,EAAP,KAAa4D,EAAb,KAEAC,qBAAU,WACRnC,EAASc,OACR,IAWH,OACE,wBAAMsB,SANoB,SAACC,GAC3BA,EAAEC,iBACFtC,EAASE,EAAiB,CAAE5B,OAAM0D,cAIlC,UACE,eAACO,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,eACNC,QAAQ,WACRC,KAAK,OACLpE,KAAK,OACLqE,MAAOrE,EACPsE,SAAU,SAACP,GAAD,OACRH,EAAQG,EAAEQ,OAAOF,UAIpB3B,GACC,eAAC8B,EAAA,EAAD,CACEC,UAAQ,EACRnF,GAAG,gBACHgF,SA3BsB,SAACP,EAAQW,GACrCf,EAAWe,EAAerD,KAAI,SAACsD,GAAD,OAAYA,EAAOrF,QA2B3CsF,QAASlC,EACTmC,eAAgB,SAAC5C,GAAD,OAAUA,GAAQA,EAAK6C,UACvCC,aAAc,GACdC,uBAAqB,EACrBC,YAAa,SAACC,GAAD,OACX,eAACjB,GAAA,EAAD,2BACMiB,GADN,IAEEf,QAAQ,WACRD,MAAM,iBACNiB,YAAY,kBAKpB,yD,sCChFOC,GAAYrC,cAAW,SAACC,GAAD,MAAY,CAC9CE,KAAM,CACJmC,SAAU,GAEZC,WAAY,CACVC,YAAavC,EAAMK,QAAQ,IAE7BmC,MAAO,CACLH,SAAU,OAIDI,GAAiB1C,cAAW,SAACC,GAAD,MAAY,CACnDE,KAAM,CACJwC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,KAAK,cACHC,QAAS,YACT1C,UAAW,OACX2C,OAAQ,QACR5C,MAAO,QACP6C,OAAQ,OACRN,QAAS,OACTO,cAAe,SACfN,eAAgB,SAChBC,WAAY,UACX5C,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BhD,MAAO,OACP6C,OAAQ,cACRF,QAAS,QAGbM,WAAY,CACVC,aAAc,QAEhBC,aAAc,CACZR,QAAS,YAIAS,GAAkBxD,cAAW,SAACC,GAAD,MAAY,CACpDE,KAAK,cACH4C,QAAS,QACTJ,QAAS,OACTO,cAAe,UACdjD,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BL,QAAS,gBAGbU,YAAY,cACVV,QAAS,cACTO,aAAc,MACdX,QAAS,OACTO,cAAe,SACfL,WAAY,QACX5C,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BL,QAAS,cACTO,aAAc,UAGlBI,aAAc,CACZrD,UAAW,OACXsC,QAAS,OACTO,cAAe,MACfN,eAAgB,IAElBe,cAAe,CACbnB,YAAa,QAEfC,MAAO,CACLE,QAAS,OACTO,cAAe,OAEjBU,cAAe,CACbjB,QAAS,OACTO,cAAe,SACf7C,UAAW,QAEbwD,kBAAmB,CACjBP,aAAc,cAILQ,GAAsB9D,cACjC,SAACC,GAAD,MAAY,CACV8D,aAAa,cACXpB,QAAS,OACTqB,SAAU,OACVpB,eAAgB,gBAChBU,aAAc,QACdjD,UAAW,QACVJ,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BE,aAAc,UAGlBW,UAAU,cACR7D,MAAO,OACNH,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BhD,MAAO,QAGX8D,QAAQ,cACN9D,MAAO,OACNH,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BhD,MAAO,QAGX+D,YAAY,cACVxB,QAAS,OACTqB,SAAU,OACVpB,eAAgB,iBACf3C,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BR,eAAgB,aAChBwB,WAAY,aAIlB,CAAEC,MAAO,IAGEC,GAAiBtE,cAC5B,SAACC,GAAD,MAAY,CACVE,KAAM,CACJE,UAAW,QAEbkE,MAAO,CACL,aAAc,CACZC,WAAY,MACZC,MAAO,UACPC,gBAAiB,YAGrBC,cAAe,CACb,UAAW,CACTD,gBAAiBzE,EAAM2E,QAAQC,QAAQC,KAAO,KAC9CC,OAAQ,YAGZC,gBAAiB,CACf,aAAc,CACZR,WAAY,MACZC,MAAOxE,EAAM2E,QAAQK,UAAUH,KAC/BJ,gBAAiBzE,EAAM2E,QAAQC,QAAQK,OAEzCC,UAAW,OACXC,UAAW,SAEbC,gBAAiB,CACfC,KAAM,CACJZ,gBAAiBzE,EAAM2E,QAAQW,OAAOC,MACtCf,MAAOxE,EAAM2E,QAAQW,OAAOE,OAE9B3C,KAAM,CACJ4C,SAAU,KAGdC,eAAgB,CACdxF,KAAM,CACJ,qBAAsB,CACpBuE,gBAAiBzE,EAAM2E,QAAQ9G,OAAO8H,YAK9C,CAAEvB,MAAO,IAGEwB,GAAgB7F,cAAW,SAACC,GAAD,MAAY,CAClDoD,WAAY,CACVC,aAAc,QAEhBC,aAAc,CACZnD,MAAO,QAET0F,YAAa,CACX1F,MAAO,OACPC,UAAW,SACXsC,QAAS,OACTO,cAAe,OAEjB6C,eAAgB,CACd1F,UAAW,QACXD,MAAO,QAET4F,WAAY,CACVrD,QAAS,OACTE,WAAY,UAEdoD,gBAAiB,CACfzD,YAAa,OAEf0D,kBAAkB,cAChBvD,QAAS,OACTC,eAAgB,gBAChBxC,MAAO,OACNH,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BF,cAAe,SACf9C,MAAO,aAKA+F,GAAoBnG,cAAW,SAACC,GAAD,MAAmB,CAC7DE,KAAK,cACH4C,QAAS,UACR9C,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BL,QAAS,gBAGbD,KAAM,CACJzC,UAAW,OACX0C,QAAS,UAEXqD,kBAAmB,GACnBC,YAAa,CACXtD,QAAS,cACT1C,UAAW,SAEbiG,cAAe,CACblG,MAAO,OACPuC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZxC,UAAW,SAEbkG,YAAa,CACX5D,QAAS,OACTvC,MAAO,QACPwC,eAAgB,iBAElB4D,SAAU,CACRC,cAAe,SACf9D,QAAS,mBAIA+D,GAAgB1G,cAAW,SAACC,GAAD,MAAY,CAClDE,KAAM,CACJuE,gBAAiB,UACjBS,UAAW,OACXnC,OAAQ,SAGVF,KAAM,CACJG,OAAQ,SACR0D,SAAU,cAIDC,GAAmB5G,cAAW,SAACC,GAAD,MAAY,CAMrDE,KAAM,GACN2C,KAAM,CACJH,QAAS,OACTO,cAAe,MACfN,eAAgB,gBAChBvC,UAAW,OACX0C,QAAS,QAEX8D,QAAS,CACPlE,QAAS,OACTO,cAAe,MACf7C,UAAW,QAEbsD,cAAe,CACbnB,YAAa,QAEfsE,QAAS,OC5KIC,GAxFM,WACnB,IAAMC,EAAUtE,KACV/D,EAAW6B,cACbyG,EAAUC,cAEd,EAAgCxG,mBAAiB,IAAjD,mBAAOqB,EAAP,KAAiBoF,EAAjB,KACA,EAAgCzG,mBAAiB,IAAjD,mBAAO0G,EAAP,KAAiBC,EAAjB,KACA,EAA8C3G,mBAAiB,IAA/D,mBAAO4G,EAAP,KAAwBC,EAAxB,KAWA,OACE,sBAAKC,UAAWR,EAAQ7G,KAAxB,SACE,gBAACsH,GAAA,EAAD,CAAOD,UAAWR,EAAQlE,KAAM4E,UAAW,EAA3C,UACE,eAACC,GAAA,EAAD,CAAYvG,QAAQ,KAAKwG,MAAO,CAAEtE,aAAc,QAAhD,2BAGA,wBAAMuE,YAAU,EAACC,aAAa,MAAM/G,SAfrB,SAACC,GLqBI,IAACzF,EKpBzByF,EAAEC,iBACEmG,IAAaE,GACflL,QAAQC,IAAI,iCAEdsC,GLgByBpD,EKhBH,CAAEwG,WAAUqF,YLiBpC,uCAAO,WAAOzI,GAAP,iBAAAnD,EAAA,+EAEmBS,EAAYJ,SAASN,GAFxC,cAEGwM,EAFH,OAGHpJ,EAASQ,EAAQ4I,IAHd,SAKsB9L,EAAYF,SALlC,QAKGiM,EALH,SAODrJ,EAASQ,EAAQ6I,IAEnBrJ,EAASD,KATN,kDAWHtC,QAAQC,IAAR,MAXG,0DAAP,wDKhBE4K,EAAQgB,KAAK,MAST,UACE,eAAC/G,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,WACNC,QAAQ,WACRC,KAAK,OACLpE,KAAK,WACLiL,WAAS,EACTV,UAAWR,EAAQ3D,WACnB/B,MAAOS,EACPR,SAAU,SAACP,GAAD,OACRmG,EAAYnG,EAAEQ,OAAOF,UAGzB,eAACJ,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLpE,KAAK,WACLiL,WAAS,EACTV,UAAWR,EAAQ3D,WACnB/B,MAAO8F,EACP7F,SAAU,SAACP,GAAD,OACRqG,EAAYrG,EAAEQ,OAAOF,UAGzB,eAACJ,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,mBACNC,QAAQ,WACRC,KAAK,WACLpE,KAAK,YACLiL,WAAS,EACTV,UAAWR,EAAQ3D,WACnB/B,MAAOgG,EACP/F,SAAU,SAACP,GAAD,OACRuG,EAAmBvG,EAAEQ,OAAOF,UAGhC,eAAC6G,GAAA,EAAD,CACE9G,KAAK,SACL+G,KAAK,QACL3D,MAAM,UACNrD,QAAQ,YACR8G,WAAS,EALX,uBASA,gBAACP,GAAA,EAAD,CACEC,MAAO,CACLvH,UAAW,OACXsC,QAAS,OACTC,eAAgB,UAJpB,sCAO2B,oBAAGyF,KAAK,SAAR,gCCTtBC,GArEG,WAChB,IAAMtB,EAAUtE,KACZuE,EAAUC,cACRvI,EAAW6B,cACjB,EAAgCE,mBAAiB,IAAjD,mBAAOqB,EAAP,KAAiBoF,EAAjB,KACA,EAAgCzG,mBAAiB,IAAjD,mBAAO0G,EAAP,KAAiBC,EAAjB,KAEMkB,EAAY,uCAAG,WAAOvH,GAAP,SAAAxF,EAAA,sDACnBwF,EAAEC,iBAEF,IACEtC,EAASrD,EAAM,CAAEyG,WAAUqF,cAC3BH,EAAQgB,KAAK,KACb,MAAOO,GACPpM,QAAQC,IAAImM,GAPK,2CAAH,sDAWlB,OACE,sBAAKhB,UAAWR,EAAQ7G,KAAxB,SACE,gBAACsH,GAAA,EAAD,CAAOD,UAAWR,EAAQlE,KAAM4E,UAAW,EAA3C,UACE,eAACC,GAAA,EAAD,CAAYvG,QAAQ,KAAKwG,MAAO,CAAEtE,aAAc,QAAhD,wBAGA,wBAAMuE,YAAU,EAACC,aAAa,MAAM/G,SAAUwH,EAA9C,UACE,eAACrH,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,WACNC,QAAQ,WACRC,KAAK,OACLpE,KAAK,WACLiL,WAAS,EACTV,UAAWR,EAAQ3D,WACnB/B,MAAOS,EACPR,SAAU,SAACP,GAAD,OACRmG,EAAYnG,EAAEQ,OAAOF,UAGzB,eAACJ,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLpE,KAAK,WACLiL,WAAS,EACTV,UAAWR,EAAQ3D,WACnB/B,MAAO8F,EACP7F,SAAU,SAACP,GAAD,OACRqG,EAAYrG,EAAEQ,OAAOF,UAGzB,eAAC6G,GAAA,EAAD,CACE9G,KAAK,SACL+G,KAAK,QACL3D,MAAM,UACNrD,QAAQ,YACR8G,WAAS,EALX,oBASA,gBAACP,GAAA,EAAD,CAAYC,MAAO,CAAEvH,UAAW,QAAhC,oCACyB,oBAAGgI,KAAK,YAAR,uC,oBC5EtBI,GAAiB,SAACC,GAC7B,OAAOC,aAAO,IAAIC,KAAKF,GAAO,yB,qGCiFjBG,GA1D+C,SAAC,GAExD,IADLxL,EACI,EADJA,SAEM2J,EAAU1C,KACV2C,EAAUC,cAGhB,OACE,sBAAKM,UAAWR,EAAQ7G,KAAxB,SACE,eAAC2I,GAAA,EAAD,CAAgBC,UAAWtB,KAA3B,SACE,gBAACuB,GAAA,EAAD,CAAOxB,UAAWR,EAAQzC,MAAO0E,aAAW,mBAA5C,UACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,2BACA,eAACA,GAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,qBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,wBAGJ,eAACC,GAAA,EAAD,UACGjM,GACCA,EAASiB,KAAI,SAACF,EAASmL,GAAV,OACX,gBAACJ,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACEL,UAAU,KACVS,MAAM,MACNC,QAAS,kBAAMxC,EAAQgB,KAAR,oBAA0B7J,EAAQ7B,MACjDiL,UAAWR,EAAQrC,cAJrB,SAMGvG,EAAQnB,OAEX,gBAACmM,GAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,eAAC,KAAD,IACCjL,GAAWA,EAAQsL,KAAKC,UAE3B,gBAACP,GAAA,EAAD,CAAWC,MAAM,QAAjB,UACE,eAAC,KAAD,IAECjL,GAAWA,EAAQuC,QAAQgJ,UAE9B,eAACP,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACGjL,GAAWA,EAAQwL,UAAU7H,WAEhC,eAACqH,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAEGZ,GAAerK,EAAQyL,eAvBbzL,EAAQ7B,iB,8BC7CjCwD,GAAYC,cAAW,SAACC,GAAD,OAC3BC,aAAa,CACXC,KAAM,CACJwC,QAAS,OACT,YAAa,CACXyB,WAAYnE,EAAMK,QAAQ,UAMnB,SAASwJ,KACtB,IAAM9C,EAAUjH,KAEhB,OACE,sBAAKyH,UAAWR,EAAQ7G,KAAxB,SACE,eAAC4J,GAAA,EAAD,M,+DClBOC,GAAkBhK,cAC7B,SAACC,GAAD,MAAY,CACVgK,cAAc,cACZlH,QAAS,SACTO,aAAc,OACd4G,SAAU,SACV9J,MAAO,OACNH,EAAMkD,YAAYC,KAAK,MAAQ,CAC9BL,QAAS,IAGboH,IAAK,CACHC,SAAU,QACVC,OAAQpK,EAAMK,QAAQ,GACtBgK,MAAOrK,EAAMK,QAAQ,GACrBiK,OAAQ,KAEVC,gBAAiB,CACfxG,SAAU,EACVjB,QAAS,SACT0H,aAAc,UAGlB,CAAEpG,MAAO,ICgEIqG,GA5DV,SAAC,GAAqC,IAAnCjI,EAAkC,EAAlCA,MAAOkI,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACzB,EAAwBC,IAAMnK,UAAS,GAAvC,mBAAOoK,EAAP,KAAaC,EAAb,KACM/D,EAAUgD,KACV/J,EAAQ+K,eAGRC,GAFWC,aAAcjL,EAAMkD,YAAYC,KAAK,OAE9B,WACtB2H,GAAQ,KAqCV,OACE,uBAAKnD,MAAO,CAAEjF,QAAS,UAAvB,UA/BwB,SAApBgI,EAAWtJ,KAEX,eAAC8J,GAAA,EAAD,CAAY1G,MAAOkG,EAAWlG,MAAOgF,QAASwB,EAA9C,SACE,eAACN,EAAWS,KAAZ,CAAiB1F,SAAUiF,EAAWU,aAGb,SAApBV,EAAWtJ,KAElB,gBAACiK,GAAA,EAAD,CAAU7B,QAASwB,EAAnB,UACE,eAACN,EAAWS,KAAZ,CAAiBxD,MAAO+C,EAAWY,YAClCZ,EAAWa,QAGa,WAApBb,EAAWtJ,KAElB,eAAC8G,GAAA,EAAD,CACEsB,QAASwB,EACTxG,MAAOkG,EAAWlG,OAAS,UAC3BrD,QAASuJ,EAAWvJ,SAAW,YAC/BgH,KAAMuC,EAAWvC,MAAQ,SACzBqD,UAAW,eAACd,EAAWS,KAAZ,IACXxD,MAAO+C,EAAW/C,MAClBJ,UAAWmD,EAAWnD,UAPxB,SASGmD,EAAWa,YAXX,EAoBL,gBAACE,GAAA,EAAD,CACEC,QAvCc,WAClBZ,GAAQ,IAuCJa,kBAAgB,0BAChBd,KAAMA,EACN9D,QAAS,CAAE6E,MAAO7E,EAAQiD,eAJ5B,UAME,eAAC6B,GAAA,EAAD,CAAavP,GAAG,0BAAhB,SAA2CkG,IAC3C,eAACsJ,GAAA,EAAD,UAAgBnB,WC+GToB,GA9IgC,SAAC,GAMzC,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,YAEAtP,GAEI,EAHJuP,eAGI,EAFJvP,WACAkC,EACI,EADJA,YAEMkI,EAAUnB,KACVlH,EAAW6B,cACTb,EAAUc,YAAYX,GAAtBH,MACAT,EAASuB,YAAYnB,GAArBJ,KAER,EAA8BwB,mBAAmB,IAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAiB,IAAzC,mBAAOzD,EAAP,KAAa4D,EAAb,KACA,EAAsCH,mBAAiB,IAAvD,mBAAO0L,EAAP,KAAoBC,EAApB,KAEAvL,qBAAU,WACRnC,EAASc,OACR,IAEH,IAAM6M,EAAwB,SAACtL,EAAQW,GACrCf,EAAWe,EAAerD,KAAI,SAACsD,GAAD,OAAYA,EAAOrF,QAcnD,OACE,wBACEwE,SACe,YAAbkL,EAdsB,SAACjL,GAC3BA,EAAEC,iBACFtC,EAASE,EAAiB,CAAE5B,OAAM0D,WAAW7B,KAcxB,SAAbmN,EAXoB,WAC5BtN,EbwC2B,SAAC/B,EAAmBK,GACjD,8CAAO,WAAO0B,GAAP,eAAAnD,EAAA,+EAE8BgB,EAAeM,gBAC9CF,EACAK,GAJC,OAEGsP,EAFH,OAMH5N,EACEN,EAAkB,CAChBzC,KAAM,CAAEqB,KAAMsP,EAAmBtP,MACjCL,eATD,gDAaHR,QAAQC,IAAR,MAbG,yDAAP,sDazCWS,CAAgBF,EAAqBwP,KAGvB,aAGvB,UASgB,YAAbH,EACC,gBAAC,WAAD,WACE,eAAC/K,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,eACNC,QAAQ,WACR8G,WAAS,EACT7G,KAAK,OACLpE,KAAK,OACLqE,MAAOrE,EACPuK,UAAWR,EAAQ3D,WACnB9B,SAAU,SAACP,GAAD,OACRH,EAAQG,EAAEQ,OAAOF,UAGrB,eAACG,EAAA,EAAD,CACEC,UAAQ,EACRnF,GAAG,gBACHiL,UAAWR,EAAQ3D,WACnB9B,SAAU+K,EACVzK,QAASlC,EAAMxB,QAAO,SAACqO,GAAD,OACZ,MAARtN,EAAesN,EAAYjQ,KAAO2C,EAAK3C,GAAK,QAE9CuF,eAAgB,SAAC5C,GAAD,OAAUA,GAAQA,EAAK6C,UACvCC,aAAc,GACdC,uBAAqB,EACrBC,YAAa,SAACC,GAAD,OACX,eAACjB,GAAA,EAAD,2BACMiB,GADN,IAEEf,QAAQ,WACRD,MAAM,iBACNiB,YAAY,qBAKlB,KACU,SAAb6J,EACC,eAAC,WAAD,UACE,eAAC/K,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,oBACNC,QAAQ,WACRC,KAAK,OACL6G,WAAS,EACTV,UAAWR,EAAQ3D,WACnBrB,aAAckK,EACd5K,MAAO8K,EACP7K,SAAU,SAACP,GAAD,OAAOqL,EAAerL,EAAEQ,OAAOF,YAG3C,KAEU,YAAb2K,EACC,eAAC,WAAD,UACE,eAACxK,EAAA,EAAD,CACEC,UAAQ,EACRnF,GAAG,gBACHiL,UAAWR,EAAQ3D,WACnB9B,SAAU+K,EACVzK,QAASlC,EAAMxB,QAAO,SAACqO,GAAD,OACZ,MAARtN,EAAesN,EAAYjQ,KAAO2C,EAAK3C,GAAK,QAE9CuF,eAAgB,SAAC5C,GAAD,OAAUA,GAAQA,EAAK6C,UACvCC,aAAc,GACdC,uBAAqB,EACrBC,YAAa,SAACC,GAAD,OACX,eAACjB,GAAA,EAAD,2BACMiB,GADN,IAEEf,QAAQ,WACRD,MAAM,iBACNiB,YAAY,oBAKlB,KAEJ,eAAC+F,GAAA,EAAD,CACEC,KAAK,QACL3D,MAAM,UACNrD,QAAQ,YACRC,KAAK,SACLmG,UAAWR,EAAQzD,aALrB,SAOgB,SAAb0I,EACG,oBACa,YAAbA,EACA,cACa,YAAbA,EACA,cACA,WCnKGQ,GAdV,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,cAAexL,EAAkB,EAAlBA,MAAOiH,EAAW,EAAXA,KACxC,OACE,eAAClH,GAAA,EAAD,CACEI,MAAOoL,EACPnL,SAAU,SAACP,GAAD,OAAO2L,EAAc3L,EAAEQ,OAAOF,QACxC4G,WAAS,EACT7G,KAAK,OACLD,QAAQ,WACRgH,KAAMA,GAAQ,SACdjH,MAAK,iBAAYA,M,8BCgBRyL,GAnBV,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,iBAAkBC,EAAqC,EAArCA,UAAWpP,EAA0B,EAA1BA,OAAQyD,EAAkB,EAAlBA,MAAOiH,EAAW,EAAXA,KAClD,OACE,gBAAC2E,GAAA,EAAD,CAAa3L,QAAQ,WAAW8G,WAAS,EAACE,KAAMA,GAAQ,SAAxD,UACE,gBAAC4E,GAAA,EAAD,mBAAkB7L,EAAlB,SACA,eAAC8L,GAAA,EAAD,CACE3L,MAAO5D,EACP6D,SAAUsL,EACV1L,MAAK,eAAUA,EAAV,OAHP,SAKG2L,EAAUxO,KAAI,SAAC4O,GAAD,OACb,eAAC5B,GAAA,EAAD,CAA2BhK,MAAO4L,EAAK5L,MAAvC,SACG4L,EAAK/L,OADO+L,EAAK5L,gBCbxBwL,GAAY,CAChB,CAAExL,MAAO,SAAUH,MAAO,UAC1B,CAAEG,MAAO,SAAUH,MAAO,UAC1B,CAAEG,MAAO,YAAaH,MAAO,aAC7B,CAAEG,MAAO,aAAcH,MAAO,cAC9B,CAAEG,MAAO,eAAgBH,MAAO,gBAChC,CAAEG,MAAO,gBAAiBH,MAAO,kBAyCpBgM,GAlCV,SAAC,GAA6C,IAA3CT,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,cAAeS,EAAe,EAAfA,SAC3BpG,EAAUlD,KACVnF,EAAW6B,cACT9C,EAAW+C,YAAYzB,GAAvBtB,OAMR,OACE,+BACE,uBAAK8J,UAAWR,EAAQjD,aAAxB,UACE,sBAAKyD,UAAWR,EAAQ/C,UAAxB,SACE,eAAC,GAAD,CACEyI,WAAYA,EACZC,cAAeA,EACfxL,MAAM,WACNiH,KAAMgF,EAAW,QAAU,aAG/B,sBAAK5F,UAAWR,EAAQ9C,QAAxB,SACE,eAAC,GAAD,CACE2I,iBAlBe,SAAC7L,GACxB,IAAMqM,EAAgBrM,EAAEQ,OAAOF,MAC/B3C,EAASH,EAAe6O,KAiBhBP,UAAWA,GACXpP,OAAQA,EACRyD,MAAM,WACNiH,KAAMgF,EAAW,QAAU,mBCrBxBE,GA9BM,SAACjQ,EAA0BK,GAC9C,OAAQA,GACN,IAAK,SACH,OAAOL,EACJkQ,QACAC,MAAK,SAAChS,EAAGiS,GAAJ,OAAW,IAAI7E,KAAK6E,EAAE5D,YAAc,IAAIjB,KAAKpN,EAAEqO,cAEzD,IAAK,SACH,OAAOxM,EACJkQ,QACAC,MAAK,SAAChS,EAAGiS,GAAJ,OAAW,IAAI7E,KAAKpN,EAAEqO,YAAc,IAAIjB,KAAK6E,EAAE5D,cAEzD,IAAK,YACH,OAAOxM,EAASkQ,QAAQC,MAAK,SAAChS,EAAGiS,GAAJ,OAAUA,EAAE/D,KAAKC,OAASnO,EAAEkO,KAAKC,UAEhE,IAAK,aACH,OAAOtM,EAASkQ,QAAQC,MAAK,SAAChS,EAAGiS,GAAJ,OAAUjS,EAAEkO,KAAKC,OAAS8D,EAAE/D,KAAKC,UAEhE,IAAK,eACH,OAAOtM,EACJkQ,QACAC,MAAK,SAAChS,EAAGiS,GAAJ,OAAUA,EAAE9M,QAAQgJ,OAASnO,EAAEmF,QAAQgJ,UAEjD,IAAK,gBACH,OAAOtM,EACJkQ,QACAC,MAAK,SAAChS,EAAGiS,GAAJ,OAAUjS,EAAEmF,QAAQgJ,OAAS8D,EAAE9M,QAAQgJ,Y,yCC2BtC+D,GA5CqD,SAAC,GAE9D,IADLrQ,EACI,EADJA,SAEM2J,EAAUb,KAEhB,OACE,iCACE,eAACwH,GAAA,EAAD,IACCtQ,EAASiB,KAAI,SAACF,EAASmL,GAAV,OACZ,iCACE,uBAAK/B,UAAWR,EAAQX,YAAxB,UACE,eAACuH,GAAA,EAAD,CACE7E,UAAW8E,IACXC,GAAE,oBAAe1P,EAAQ7B,IACzB6E,QAAQ,KAHV,SAKGhD,EAAQnB,OAEX,gBAAC0K,GAAA,EAAD,CAAYvG,QAAQ,QAApB,oBACS,kCAAShD,EAAQwL,UAAU7H,cAEpC,gBAAC4F,GAAA,EAAD,uBACW,kCAASc,GAAerK,EAAQyL,gBAE3C,sBAAKrC,UAAWR,EAAQV,cAAxB,SACE,uBAAKkB,UAAWR,EAAQT,YAAxB,UACE,uBAAKiB,UAAWR,EAAQR,SAAxB,UACE,eAAC,KAAD,IACA,gBAACmB,GAAA,EAAD,gBAAevJ,EAAQsL,KAAKC,aAE9B,uBAAKnC,UAAWR,EAAQR,SAAxB,UACE,eAAC,KAAD,IACA,gBAACmB,GAAA,EAAD,gBAAevJ,EAAQuC,QAAQgJ,qBAKvC,eAACgE,GAAA,EAAD,MA5BQvP,EAAQ7B,WC+DXwR,GAxDE,WACf,MACEtN,YAAYzB,GADN3B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,YAAyBI,GAA3C,EAA+BH,WAA/B,EAA2CG,QAErCsJ,EAAUb,KAEVlG,GADWO,cACHwK,gBACRoC,EAAWlC,aAAcjL,EAAMkD,YAAYC,KAAK,OACtD,EAAoC1C,mBAAS,IAA7C,mBAAOgM,EAAP,KAAmBC,EAAnB,KAEMqB,EAAyBV,GAC7BjQ,EAASc,QAAO,SAACC,GAAD,OACdA,EAAQnB,KAAKgR,cAAcC,SAASxB,EAAWuB,kBAEjDvQ,GAGFoD,qBAAU,cAEP,CAACzD,IAkBJ,OACE,sBAAKmK,UAAWR,EAAQ7G,KAAxB,SACE,gBAACsH,GAAA,EAAD,CAAOD,UAAWR,EAAQlE,KAAM4E,UAAW,EAA3C,UACE,eAAC,GAAD,CACEjF,MAAM,iBACNkI,WAAY,CAAEtJ,KAAM,SAAUmK,KAAM,iBAAkBJ,KAAM+C,MAF9D,SAIE,eAAC,GAAD,CAAalC,SAAS,cAExB,eAAC,GAAD,CACES,WAAYA,EACZC,cAAeA,EACfS,SAAUA,IA3BI,YAAhB9P,EACK,eAACwM,GAAD,IAGL,sBAAKtC,UAAWR,EAAQZ,kBAAxB,SACIgH,EAGA,eAAC,GAAD,CAAqB/P,SAAU2Q,IAF/B,eAAC,GAAD,CAAe3Q,SAAU2Q,YCGtBI,GAFI,CAAEC,QAlDR,uCAAG,WAAOzR,GAAP,eAAApB,EAAA,sEACSC,IAAMO,IAAN,UAAaX,EAAb,qBAAoCuB,EAApC,SAAsD,CAC3Ed,iBAAiB,IAFL,cACRH,EADQ,OAIdS,QAAQC,IAAIV,GAJE,kBAKPA,EAASC,MALF,2CAAH,sDAkDiB0S,UA1Cf,uCAAG,WAAO1R,EAAmB2R,GAA1B,eAAA/S,EAAA,sEACOC,IAAMC,KAAN,UAClBL,EADkB,qBACKuB,EADL,SAErB2R,EACA,CACEzS,iBAAiB,IALL,cACVH,EADU,yBASTA,EAASC,MATA,2CAAH,wDA0C0B4S,UA9B1B,uCAAG,WAAO5R,EAAmB6R,GAA1B,eAAAjT,EAAA,sEACOC,IAAMoB,OAAN,UAClBxB,EADkB,qBACKuB,EADL,iBACuB6R,GAC5C,CACE3S,iBAAiB,IAJL,cACVH,EADU,yBAQTA,EAASC,MARA,2CAAH,wDA8BqC8S,SAnBtC,uCAAG,WAAO9R,EAAmB6R,GAA1B,eAAAjT,EAAA,sEACQC,IAAMC,KAAN,UAClBL,EADkB,qBACKuB,EADL,iBACuB6R,EADvB,UAErB,KACA,CACE3S,iBAAiB,IALN,cACTH,EADS,yBASRA,EAASC,MATD,2CAAH,wDAmBgD+S,UAP/C,uCAAG,WAAO/R,EAAmB6R,GAA1B,SAAAjT,EAAA,sEACOC,IAAMC,KAAN,UAClBL,EADkB,qBACKuB,EADL,iBACuB6R,EADvB,WAErB,KACA,CAAE3S,iBAAiB,IAJL,yDAAH,yDC3BT8S,GAAWzR,YAAY,CAC3BF,KAAM,OACNG,aAVoC,CACpCsM,KAAM,GACNpM,aAAa,EACbC,WAAY,KACZsR,cAAc,EACdpR,YAAa,MAMbE,SAAU,CACRmR,QAAS,SACPjR,EACAC,GAEAD,EAAM6L,KAAK5L,EAAOC,QAAQnB,WAAakB,EAAOC,QAAQ2L,KACtD7L,EAAMP,aAAc,EACpBO,EAAMN,WAAa,MAErBwR,OAAQ,SACNlR,EACAC,GAEIA,EAAOC,QAAQnB,aAAaiB,EAAM6L,MACpC7L,EAAM6L,KAAK5L,EAAOC,QAAQnB,WAA1B,sBACKiB,EAAM6L,KAAK5L,EAAOC,QAAQnB,YAD/B,CAEEkB,EAAOC,QAAQiR,MAEjBnR,EAAMgR,cAAe,EACrBhR,EAAMJ,YAAc,MAEpBI,EAAM6L,KAAK5L,EAAOC,QAAQnB,WAAa,CAACkB,EAAOC,QAAQiR,MAG3DC,UAAW,SACTpR,EACAC,GAEAD,EAAM6L,KAAK5L,EAAOC,QAAQnB,WAAaiB,EAAM6L,KAC3C5L,EAAOC,QAAQnB,WACfuB,QAAO,SAAC6Q,GAAD,OAASA,EAAIzS,KAAOuB,EAAOC,QAAQ0Q,UAE9CS,gBAAiB,SACfrR,EACAC,GAMAD,EAAM6L,KAAK5L,EAAOC,QAAQnB,WAAaiB,EAAM6L,KAC3C5L,EAAOC,QAAQnB,WACf0B,KAAI,SAAC0Q,GAAD,OACJA,EAAIzS,KAAOuB,EAAOC,QAAQ0Q,MAA1B,2BACSO,GAAQlR,EAAOC,QAAQoR,YAC5BH,MAGRI,YAAa,SAACvR,GACZA,EAAMP,aAAc,EACpBO,EAAMN,WAAa,MAErB8R,aAAc,SAACxR,GACbA,EAAMgR,cAAe,EACrBhR,EAAMJ,YAAc,SAKnB,GAOHmR,GAASnQ,QANXqQ,GADK,GACLA,QACAC,GAFK,GAELA,OACAM,GAHK,GAGLA,aACAD,GAJK,GAILA,YACAH,GALK,GAKLA,UACAC,GANK,GAMLA,gBAkCWI,GAAa,SACxB1S,EACA6R,EACA3Q,GAEA,8CAAO,WAAOa,GAAP,iBAAAnD,EAAA,kEAGY,UAAXsC,EAHD,gCAIkBsQ,GAAWM,SAAS9R,EAAW6R,GAJjD,OAIDc,EAJC,6BAMDA,EAAanB,GAAWO,UAAU/R,EAAW6R,GAN5C,OASKU,EAAeI,EAAfJ,WAERxQ,EAASuQ,GAAgB,CAAEC,aAAYV,QAAO7R,eAX3C,kDAaHR,QAAQC,IAAR,MAbG,0DAAP,uDAkBWmT,GAAkB,SAAC3R,GAAD,OAAsBA,EAAM6L,MAgB5CkF,MAAf,QChKMa,GAAS,CACbC,IAAK,UACLC,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACR/E,KAAM,UACNgF,SAAU,UACVC,OAAQ,WAGGC,GAAiB,SAC5BC,GAEA,MAAO,CACLxL,MAAoB,QAAbwL,EAAqB,OAAS,OACrCvL,gBAAiB+K,GAAOQ,GACxBxF,aAAc,MACdjG,WAAY,IACZzB,QAAS,SACT4D,SAAU,QAIDuJ,GAAe,SAACf,GAI3B,MAAO,CACL1K,MAJY0K,EAAaM,GAAOI,OAASJ,GAAO3E,KAKhDpG,gBAJsByK,EAAaM,GAAOK,SAAWL,GAAOM,OAK5DtF,aAAc,MACdjG,WAAY,IACZzB,QAAS,SACT4D,SAAU,QC0DCwJ,GAtEG,SAAC,GAA0C,IAAxCvT,EAAuC,EAAvCA,UACboK,EAAU1C,KACV2C,EAAUC,cAGVkJ,EAFW3P,YAAY+O,IAArB9F,KAEgB9M,GAExB,OADAR,QAAQC,IAAI+T,GAEV,sBAAK5I,UAAWR,EAAQ7G,KAAxB,SACE,eAAC2I,GAAA,EAAD,CAAgBC,UAAWtB,KAA3B,SACE,gBAACuB,GAAA,EAAD,CAAOxB,UAAWR,EAAQzC,MAAO0E,aAAW,mBAA5C,UACE,eAACC,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,oBACA,eAACA,GAAA,EAAD,CAAWC,MAAM,SAAjB,sBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,oBACA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,mBAEA,eAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,6BAGJ,eAACC,GAAA,EAAD,UACG8G,GACCA,EAAW9R,KAAI,SAAC0Q,GAAD,OACb,gBAAC7F,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACEL,UAAU,KACVS,MAAM,MACNhC,UAAWR,EAAQrC,cACnB8E,QAAS,kBACPxC,EAAQgB,KAAR,oBAA0BrL,EAA1B,iBAA4CoS,EAAIzS,MALpD,SAQGyS,EAAI/R,OAEP,eAACmM,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,sBACEzB,MAAK,2BACAoI,GAAehB,EAAIiB,WADnB,IAEHI,cAAe,aACfpN,OAAQ,WAJZ,SAOG+L,EAAIiB,aAGT,eAAC7G,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,sBACEzB,MAAK,2BACAsI,GAAalB,EAAIG,aADjB,IAEHlM,OAAQ,WAHZ,SAMG+L,EAAIG,WAAa,SAAW,WAGjC,eAAC/F,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACGZ,GAAeuG,EAAInF,aAEtB,eAACT,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0B2F,EAAIpF,UAAU7H,aAnC3BiN,EAAIzS,iB,+BCyCpB+T,GA3DV,SAAC,GAAoE,IAAlE7N,EAAiE,EAAjEA,MAAO8N,EAA0D,EAA1DA,YAAyB5F,GAAiC,EAA7C6F,WAA6C,EAAjC7F,YAAY8F,EAAqB,EAArBA,eAClD,EAAwB5F,IAAMnK,UAAS,GAAvC,mBAAOoK,EAAP,KAAaC,EAAb,KAGME,GAFUjB,KAEQ,WACtBe,GAAQ,KAEJ2F,EAAc,WAClB3F,GAAQ,IA0BV,OACE,iCAnBsB,WACtB,GAAwB,WAApBJ,EAAWtJ,KACb,OACE,eAAC8G,GAAA,EAAD,CACEsB,QAASwB,EACTxG,MAAOkG,EAAWlG,OAAS,UAC3BrD,QAASuJ,EAAWvJ,SAAW,YAC/BgH,KAAMuC,EAAWvC,MAAQ,SACzBqD,UAAW,eAACd,EAAWS,KAAZ,IACXxD,MAAO+C,EAAW/C,MAClBJ,UAAWmD,EAAWnD,UAPxB,SASGmD,EAAWa,OAQfmF,GACD,gBAACjF,GAAA,EAAD,CACEC,QAAS+E,EACT9E,kBAAgB,0BAChBd,KAAMA,EAHR,UAKE,eAACgB,GAAA,EAAD,CAAavP,GAAG,0BAAhB,SAA2CkG,IAC3C,eAACsJ,GAAA,EAAD,CAAe6E,UAAQ,EAAvB,SACE,eAACjJ,GAAA,EAAD,UAAa4I,MAEf,gBAACM,GAAA,EAAD,WACE,eAAC1I,GAAA,EAAD,CAAQsB,QAASiH,EAAajM,MAAM,YAApC,oBAGA,eAAC0D,GAAA,EAAD,CAAQsB,QAvCK,WACnBgH,IACAC,KAqCqCjM,MAAM,UAArC,SACGkG,EAAWa,iB,yCCYTsF,GAzEmD,SAAC,GAE5D,IADLC,EACI,EADJA,eAEM/J,EAAUxD,KACV7E,EAAW6B,cACXyG,EAAUC,cACRhI,EAASuB,YAAYnB,GAArBJ,KACA2K,EAAuDkH,EAAvDlH,UAAWD,EAA4CmH,EAA5CnH,UAAWrN,EAAiCwU,EAAjCxU,GAAaU,GAAoB8T,EAA7BpQ,QAA6BoQ,EAApB9T,MAErC+T,GAFyDD,EAAdE,WAE7B,OAAJ/R,QAAI,IAAJA,OAAA,EAAAA,EAAM3C,MAAOqN,EAAUrN,IAkCjC2U,EAAsB,WAC1BvS,EzB4CyB,SAC3B/B,EACAqK,GAEA,8CAAO,WAAOtI,GAAP,SAAAnD,EAAA,+EAEGgB,EAAeG,cAAcC,GAFhC,OAGHqK,EAAQgB,KAAK,KACbtJ,EAAST,EAActB,IAJpB,gDAMHR,QAAQC,IAAR,MANG,yDAAP,sDyBhDWM,CAAcJ,EAAI0K,KAG7B,OACE,sBAAKO,UAAWR,EAAQ7G,KAAxB,SACE,gBAACsH,GAAA,EAAD,CAAOD,UAAWR,EAAQvD,YAA1B,UACE,uBAAK+D,UAAWR,EAAQvE,MAAxB,UACE,eAACkF,GAAA,EAAD,CAAYC,MAAO,CAAElC,SAAU,OAAQlB,WAAY,QAAnD,SACGvH,IAEF+T,EACC,eAAC,GAAD,CACEvO,MAAM,oBACNkI,WAAY,CAAEtJ,KAAM,OAAQ+J,KAAM+F,KAAU/I,KAAM,SAFpD,SAIE,eAAC,GAAD,CAAa6D,SAAS,OAAOC,YAAajP,EAAML,UAAWL,MAE3D,QAGN,gBAACoL,GAAA,EAAD,qBAAoBiC,EAAU7H,YAC9B,gBAAC4F,GAAA,EAAD,0BAAyBc,GAAeoB,MAExC,sBAAKrC,UAAWR,EAAQtD,aAAxB,SAvDCsN,EAGH,uCACE,sBAAKxJ,UAAWR,EAAQrD,cAAxB,SACE,eAAC,GAAD,CACElB,MAAM,yBACN8N,YAAY,kDACZC,WAAW,iBACX7F,WAAY,CACVtJ,KAAM,SACNmK,KAAM,iBACNJ,KAAMgG,MAERX,eAAgBS,MAGpB,eAAC,GAAD,CACEzO,MAAM,sBACNkI,WAAY,CACVtJ,KAAM,SACNmK,KAAM,cACNJ,KAAMiG,MALV,SAQE,eAAC,GAAD,CAAapF,SAAS,UAAUrP,UAAWL,SAzB5B,a,wCCoHV+U,GApGyB,SAAC,GAQlC,IAPLrF,EAOI,EAPJA,SAGArP,GAII,EANJsP,YAMI,EALJqF,UAKI,EAJJ3U,WAKMoK,GADF,EAHJwK,eAGI,EAFJC,eAEI,EADJC,eAEgB7L,MACVlH,EAAW6B,cACjB,EAAwBE,mBAAiB,IAAzC,mBAAOzD,EAAP,KAAa4D,EAAb,KACA,EAAsCH,mBAAiB,IAAvD,mBAAOiR,EAAP,KAAoBC,EAApB,KACA,EAAgClR,mBAAsB,OAAtD,mBAAOuP,EAAP,KAAiB4B,EAAjB,KAeA,OACE,wBAAM9Q,SAAuB,QAAbkL,EAVG,WACnB7P,QAAQC,IAAI,WACZsC,ELoCqB,SAAC/B,EAAmB2R,GAC3C,8CAAO,WAAO5P,GAAP,eAAAnD,EAAA,sEAEHmD,EAAS0Q,MAFN,SAGsBjB,GAAWE,UAAU1R,EAAW2R,GAHtD,OAGGuD,EAHH,OAIHnT,EAASoQ,GAAO,CAAEC,IAAK8C,EAAYlV,eAJhC,gDAMHR,QAAQC,IAAR,MANG,yDAAP,sDKrCWiS,CAAU1R,EAAqB,CAAEK,OAAM0U,cAAa1B,eAGzC,WACpB7T,QAAQC,IAAI,YAIZ,UACgB,QAAb4P,EACC,gBAAC,WAAD,WACE,eAAC/K,GAAA,EAAD,CACE3E,GAAG,iBACH4E,MAAM,YACNC,QAAQ,WACRnE,KAAK,QACLiL,WAAS,EACT5G,MAAOrE,EACPuK,UAAWR,EAAQ3D,WACnB9B,SAAU,SAACP,GAAD,OACRH,EAAQG,EAAEQ,OAAOF,UAGrB,eAACJ,GAAA,EAAD,CACE3E,GAAG,iBAGH2L,WAAS,EACTV,UAAWR,EAAQ3D,WACnBlC,MAAM,cACNC,QAAQ,WACRnE,KAAK,cACLqE,MAAOqQ,EACPpQ,SAAU,SAACP,GAAD,OACR4Q,EAAe5Q,EAAEQ,OAAOF,UAG5B,eAACyL,GAAA,EAAD,CAAahE,UAAU,WAAWvB,UAAWR,EAAQjB,eAArD,SACE,gBAACgM,GAAA,EAAD,CACEC,KAAG,EACHhQ,aAAa,MACbV,MAAO2O,EACP1O,SAhDS,SAAC0Q,GACpBJ,EAAYI,EAAMzQ,OAAOF,QAgDfkG,UAAWR,EAAQhB,WALrB,UAOE,eAACkM,GAAA,EAAD,CAAWnJ,UAAU,SAASvB,UAAWR,EAAQf,gBAAjD,uBAIA,uBAAKuB,UAAWR,EAAQd,kBAAxB,UACE,eAACiM,GAAA,EAAD,CAAkB7Q,MAAM,MAAM8Q,QAAS,eAACC,GAAA,EAAD,IAAWlR,MAAM,QACxD,eAACgR,GAAA,EAAD,CACE7Q,MAAM,SACN8Q,QAAS,eAACC,GAAA,EAAD,IACTlR,MAAM,WAER,eAACgR,GAAA,EAAD,CACE7Q,MAAM,OACN8Q,QAAS,eAACC,GAAA,EAAD,IACTlR,MAAM,oBAMd,KACJ,eAACgH,GAAA,EAAD,CACEC,KAAK,QACL3D,MAAM,UACNrD,QAAQ,YACRC,KAAK,SACLmG,UAAWR,EAAQzD,aALrB,SAOgB,QAAb0I,EAAqB,YAAc,kBChE7BqG,GAnEyC,SAAC,GAAc,IAAZ5I,EAAW,EAAXA,KACnD1C,EAAUb,KAChB,OACE,iCACE,eAACwH,GAAA,EAAD,IACCjE,EAAKpL,KAAI,SAAC0Q,EAAKzF,GAAN,OACR,iCACE,uBAAK/B,UAAWR,EAAQX,YAAxB,UACE,eAACuH,GAAA,EAAD,CACE7E,UAAW8E,IACXC,GAAE,oBAAekB,EAAIpS,UAAnB,iBAAqCoS,EAAIzS,IAC3C6E,QAAQ,KAHV,SAKG4N,EAAI/R,OAEP,gBAAC0K,GAAA,EAAD,uBACY,IACV,sBACEC,MAAK,2BACAoI,GAAehB,EAAIiB,WADnB,IAEHI,cAAe,aACf1N,QAAS,SACTI,QAAS,iBALb,SAQGiM,EAAIiB,cAGT,gBAACtI,GAAA,EAAD,qBACU,IACR,sBACEC,MAAK,2BACAsI,GAAalB,EAAIG,aADjB,IAEHkB,cAAe,aACf1N,QAAS,SACTI,QAAS,iBALb,SAQGiM,EAAIG,WAAa,SAAW,YAGjC,gBAACxH,GAAA,EAAD,CAAYvG,QAAQ,QAApB,oBACS,kCAAS4N,EAAIpF,UAAU7H,cAEhC,gBAAC4F,GAAA,EAAD,uBACW,kCAASc,GAAeuG,EAAInF,gBAEvC,sBAAKrC,UAAWR,EAAQV,cAAxB,SACE,sBAAKkB,UAAWR,EAAQT,YAAxB,SACE,sBAAKiB,UAAWR,EAAQR,kBAW9B,eAACmH,GAAA,EAAD,MAtDQqB,EAAIzS,WC0DPgW,GA/CK,WAClB,IAAQ3V,EAAc4V,cAAd5V,UACF+B,EAAW6B,cACXP,EAAQ+K,eACRoC,EAAWlC,aAAcjL,EAAMkD,YAAYC,KAAK,OAChD2N,EAAiBtQ,aAAY,SAAC5C,GAAD,O5B+GJ,SAACA,EAAkBjB,GAClD,OAAOiB,EAAMR,SAASA,SAASoV,MAAK,SAACC,GAAD,OAAOA,EAAEnW,KAAOK,K4B/GlD+V,CAAkB9U,EAAOjB,MAGnBU,EAAgBmD,YAAY+O,IAA5BlS,YAEFoM,EAAOjJ,aAAY,SAAC5C,GAAD,OP8Gc,SACvCA,EACAjB,GACI,IAAD,EACH,iBAAOiB,EAAM6L,KAAKA,YAAlB,aAAO,EAAkB9M,GOjHvBgW,CAA0B/U,EAAOjB,MAGnCkE,qBAAU,WACRnC,EPiDqB,SAAC/B,GACxB,8CAAO,WAAO+B,GAAP,eAAAnD,EAAA,sEAEHmD,EAASyQ,MAFN,SAGmBhB,GAAWC,QAAQzR,GAHtC,OAGG2R,EAHH,OAIH5P,EAASmQ,GAAQ,CAAEpF,KAAM6E,EAAS3R,eAJ/B,gDAMHR,QAAQC,IAAR,MANG,yDAAP,sDOlDWwW,CAAUjW,MAClB,IAcH,OACE,gBAAC,WAAD,WACGmU,GAAkBA,EACjB,eAAC,GAAD,CAAeA,eAAgBA,IAC7B,KACJ,eAAC,GAAD,CACEtO,MAAM,YACNkI,WAAY,CAAEtJ,KAAM,SAAUmK,KAAM,YAAaJ,KAAM+C,MAFzD,SAIE,eAAC,GAAD,CAASlC,SAAS,MAAMrP,UAAWA,OApBnB,IAAhBU,EACK,eAACwM,GAAD,IAECsD,EAGN,eAAC,GAAD,CAAiB1D,KAAMA,IAFvB,eAAC,GAAD,CAAW9M,UAAWA,QCuBfkW,GAlEuC,SAAC,GAAa,IAAX9D,EAAU,EAAVA,IACjDhI,EAAUxD,KAKdmO,GAOE3C,EATFzS,GASEyS,EARF/R,KAQE+R,EAPF2C,aACA1B,EAMEjB,EANFiB,SAEArG,GAIEoF,EALFG,WAKEH,EAJFpF,WAGAC,GACEmF,EAHF+D,UAGE/D,EAFFgE,SAEEhE,EADFnF,WAGF,OACE,+BACE,eAACpC,GAAA,EAAD,CAAOD,UAAWR,EAAQ7G,KAA1B,SACE,uBAAKqH,UAAWR,EAAQpD,cAAxB,UACE,uBAAK4D,UAAWR,EAAQnD,kBAAxB,UACE,eAAC8D,GAAA,EAAD,CAAYC,MAAO,CAAElC,SAAU,OAAQlB,WAAY,QAAnD,yBAGA,eAACmD,GAAA,EAAD,UAAagK,OAEf,uBAAKnK,UAAWR,EAAQnD,kBAAxB,UACE,eAAC8D,GAAA,EAAD,CAAYC,MAAO,CAAElC,SAAU,OAAQlB,WAAY,QAAnD,yBAGA,gBAACmD,GAAA,EAAD,0BAAyBiC,EAAU7H,YACnC,gBAAC4F,GAAA,EAAD,yBACcqH,GAAOvG,GAAeoB,MAEpC,gBAAClC,GAAA,EAAD,uBAEE,sBACEC,MAAK,2BACAoI,GAAehB,EAAIiB,WADnB,IAEHI,cAAe,aACf1N,QAAS,SACTI,QAAS,iBALb,SAQGkN,OAIL,gBAACtI,GAAA,EAAD,qBAEE,sBACEC,MAAK,2BACAsI,GAAalB,EAAIG,aADjB,IAEHxM,QAAS,SACTI,QAAS,iBAJb,SAOGiM,EAAIG,WAAa,SAAW,uBCO9B8D,GA/DiC,SAAC,GAAa,IAAXjE,EAAU,EAAVA,IAC3ChI,EAAUJ,KAKd+K,GAOE3C,EATFzS,GASEyS,EARF/R,KAQE+R,EAPF2C,aACA1B,EAMEjB,EANFiB,SAEArG,GAIEoF,EALFG,WAKEH,EAJFpF,WAGAC,GACEmF,EAHF+D,UAGE/D,EAFFgE,SAEEhE,EADFnF,WAGF,OACE,+BACE,gBAACpC,GAAA,EAAD,CAAOD,UAAWR,EAAQlE,KAA1B,UACE,iCACE,eAAC6E,GAAA,EAAD,CAAYC,MAAO,CAAElC,SAAU,OAAQlB,WAAY,QAAnD,yBAGA,eAACmD,GAAA,EAAD,UAAagK,OAEf,uBAAKnK,UAAWR,EAAQF,QAAxB,UACE,eAACa,GAAA,EAAD,CAAYC,MAAO,CAAElC,SAAU,OAAQlB,WAAY,QAAnD,yBAGA,gBAACmD,GAAA,EAAD,0BAAyBiC,EAAU7H,YACnC,gBAAC4F,GAAA,EAAD,yBAAwBqH,GAAOvG,GAAeoB,MAC9C,gBAAClC,GAAA,EAAD,uBAEE,sBACEC,MAAK,2BACAoI,GAAehB,EAAIiB,WADnB,IAEHI,cAAe,aACf1N,QAAS,SACTI,QAAS,iBALb,SAQGkN,OAIL,gBAACtI,GAAA,EAAD,qBAEE,sBACEC,MAAK,2BACAsI,GAAalB,EAAIG,aADjB,IAEHxM,QAAS,SACTI,QAAS,iBAJb,SAOGiM,EAAIG,WAAa,SAAW,qB,0CC0E5B+D,GAvGC,WACd,IAAMvU,EAAW6B,cACXyG,EAAUC,cAChB,EAA6BsL,cAArB/D,EAAR,EAAQA,MAAO7R,EAAf,EAAeA,UACPsC,EAASuB,YAAYnB,GAArBJ,KACF8P,EAAMvO,aAAY,SAAC5C,GAAD,OVsHG,SAC3BA,EACA4Q,EACA7R,GACI,IAAD,EACH,iBAAOiB,EAAM6L,KAAKA,YAAlB,aAAO,EAAkB9M,GAAW6V,MAAK,SAAChF,GAAD,OAAOA,EAAElR,KAAOkS,KU1HvD0E,CAActV,EAAO4Q,EAAO7R,MAExBqD,EAAQ+K,eACRoC,EAAWlC,aAAcjL,EAAMkD,YAAYC,KAAK,OAChD4D,EAAUJ,KAEhB,IAAKoI,EACH,OACE,+BACE,2CAKN5S,QAAQC,IAAI2S,GAWRA,EATFzS,GASEyS,EARF/R,KAQE+R,EAPF2C,YAOE3C,EANFiB,SAJF,IAKEd,EAKEH,EALFG,WAOI6B,GAFFhC,EAJFpF,UAIEoF,EAHF+D,UAGE/D,EAFFgE,SAEEhE,EADFnF,WAGkB,OAAJ3K,QAAI,IAAJA,OAAA,EAAAA,EAAM3C,OAAN,OAAayS,QAAb,IAAaA,OAAb,EAAaA,EAAKpF,UAAUrN,KAEtC6W,EAAkB,WACtBzU,EVgDqB,SAAC/B,EAAmB6R,GAC3C,8CAAO,WAAO9P,GAAP,SAAAnD,EAAA,sEACC4S,GAAWI,UAAU5R,EAAW6R,GADjC,OAEL9P,EAASsQ,GAAU,CAAErS,YAAW6R,WAF3B,2CAAP,sDUjDWD,CAAU5R,EAAW6R,IAC9BxH,EAAQgB,KAAR,oBAA0BrL,KAGtByW,EAAkB,WACtB1U,EAAS2Q,GAAW1S,EAAW6R,EAAO,YAGlC6E,EAAiB,WACrB3U,EAAS2Q,GAAW1S,EAAW6R,EAAO,WAkDxC,OACE,gBAAC,WAAD,WACIrB,EAAsC,eAAC,GAAD,CAAkB4B,IAAKA,IAAlD,eAAC,GAAD,CAAYA,IAAKA,IAC9B,sBAAKxH,UAAWR,EAAQH,QAAxB,SAjDGmK,EAGH,gBAAC,WAAD,WACE,sBAAKxJ,UAAWR,EAAQrD,cAAxB,SACE,eAAC,GAAD,CACElB,MAAM,aACN8N,YAAY,8CACZC,WAAW,aACX7F,WAAY,CACVtJ,KAAM,SACNmK,KAAM,aACNJ,KAAMgG,MAERX,eAAgB2C,MAGnBjE,EACC,eAAC,GAAD,CACE1M,MAAM,cACN8N,YAAY,mCACZC,WAAW,cACX7F,WAAY,CACVtJ,KAAM,SACNmK,KAAM,cACNJ,KAAMmI,MAER9C,eAAgB4C,IAGlB,eAAC,GAAD,CACE5Q,MAAM,YACN8N,YAAY,qCACZC,WAAW,YACX7F,WAAY,CACVtJ,KAAM,SACNmK,KAAM,YACNJ,KAAMoI,MAER/C,eAAgB6C,OAvCH,W,oBC7BVG,GAtCA,WACb,IAAMzM,EAAU3E,KACV1D,EAAW6B,cACXyG,EAAUC,cAOhB,OACE,sBAAKM,UAAWR,EAAQ7G,KAAxB,SACE,eAACuT,GAAA,EAAD,CAAQtJ,SAAS,SAAjB,SACE,gBAACuJ,GAAA,EAAD,WASE,eAAChM,GAAA,EAAD,CACEvG,QAAQ,KACRoG,UAAWR,EAAQvE,MACnBgH,QAAS,kBAAMxC,EAAQgB,KAAK,MAH9B,yBAOA,eAACE,GAAA,EAAD,CAAQ1D,MAAM,UAAUgF,QAxBX,WACnB9K,E/B0DF,uCAAO,WAAOA,GAAP,SAAAnD,EAAA,sEACCS,EAAYC,SADb,OAELyC,EAASS,GAFJ,2CAAP,uD+BzDEwU,OAAOC,SAASC,UAsBV,4B,UCUKC,GAlCA,WACb,IAAQ7U,EAASuB,YAAYnB,GAArBJ,KACFe,EAAQ+K,eACRoC,EAAWlC,aAAcjL,EAAMkD,YAAYC,KAAK,OAItD,OAFAtC,qBAAU,cAAU,IAGlB,eAACkT,GAAA,EAAD,CAAWC,eAAgB7G,EAA3B,SACE,gBAAC,IAAD,WACGlO,EAAO,eAAC,GAAD,IAAa,KACrB,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOgV,OAAK,EAACC,KAAK,IAAlB,SACGjV,EAAO,eAAC,GAAD,IAAe,eAAC,IAAD,CAAU4O,GAAG,aAEtC,eAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,YAAYpL,UAAWhC,KACzC,eAAC,IAAD,CAAOmN,OAAK,EAACC,KAAK,SAAlB,SACIjV,EAAuB,eAAC,IAAD,CAAU4O,GAAG,MAA7B,eAAC,GAAD,MAEX,eAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,iBAAlB,SACGjV,EAAO,eAAC,GAAD,IAAwB,eAAC,IAAD,CAAU4O,GAAG,QAE/C,eAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,uBAAlB,SACGjV,EAAO,eAAC,GAAD,IAAkB,eAAC,IAAD,CAAU4O,GAAG,QAEzC,eAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,mCAAlB,SACGjV,EAAO,eAAC,GAAD,IAAc,eAAC,IAAD,CAAU4O,GAAG,iBClC/CrS,IAAM2Y,SAAStY,iBAAkB,EAEjC,IAiBeuY,GAjBH,WACV,IAAM1V,EAAW6B,cACXwG,EAAUN,KAMhB,OAJA5F,qBAAU,WACRnC,EjC6CF,uCAAO,WAAOA,GAAP,eAAAnD,EAAA,+EAEsBS,EAAYF,SAFlC,QAEGiM,EAFH,SAIDrJ,EAASQ,EAAQ6I,IAGnBrJ,EAASD,KAPN,gDASHtC,QAAQC,IAAR,MATG,yDAAP,yDiC5CG,IAGD,sBAAKmL,UAAWR,EAAQ7G,KAAxB,SACE,sBAAKqH,UAAWR,EAAQlE,KAAxB,SACE,eAAC,GAAD,SCFOwR,I,OAfDC,YAAe,CAC3BC,QAAS,CACPjV,KAAMkV,EACNpX,SAAUqX,EACV/U,MAAOgV,EACPjL,KAAMkL,OCJVC,IAASC,OACP,eAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,eAAC,IAAD,UACE,eAAC,GAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.a385b1eb.chunk.js","sourcesContent":["const backendUrl = 'https://bugtrackerfinal.herokuapp.com';\r\n\r\nexport default backendUrl;\r\n","import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\ninterface Credentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst login = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/login`, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst register = async (credentials: Credentials) => {\r\n  const response = await Axios.post(`${backendUrl}/register`, credentials, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst verify = async () => {\r\n  const response = await Axios.get(`${backendUrl}/verify`, {\r\n    withCredentials: true,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nconst logout = async () => {\r\n  const response = await Axios.get(`${backendUrl}/logout`);\r\n};\r\nconst authService = { login, logout, verify, register };\r\n\r\nexport default authService;\r\n","import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\nimport { ProjectPayload } from '../redux/types';\r\n\r\nconst getProjects = async () => {\r\n  const response = await Axios.get(`${backendUrl}/projects`, {\r\n    withCredentials: true,\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst getProject = async (id: any) => {\r\n  const response = await Axios.get(`${backendUrl}/projects/${id}`, {\r\n    withCredentials: true,\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst createProject = async (projectData: ProjectPayload) => {\r\n  const response = await Axios.post(`${backendUrl}/projects`, projectData, {\r\n    withCredentials: true,\r\n  });\r\n\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst deleteProject = async (projectId: string) => {\r\n  const response = await Axios.delete(`${backendUrl}/projects/${projectId}`, {\r\n    withCredentials: true,\r\n  });\r\n\r\n  return response;\r\n};\r\n\r\nconst editProjectName = async (projectId: string, newProjectName: string) => {\r\n  const response = await Axios.put(\r\n    `${backendUrl}/projects/${projectId}`,\r\n    { name: newProjectName },\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst projectService = {\r\n  getProjects,\r\n  createProject,\r\n  getProject,\r\n  deleteProject,\r\n  editProjectName,\r\n};\r\n\r\nexport default projectService;\r\n","import { ProjectSortValues } from './../types';\r\nimport { AppThunk } from './../store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { ProjectState, ProjectPayload } from '../types';\r\nimport projectService from '../../services/projects';\r\nimport { History } from 'history';\r\n\r\ninterface InitialProjectsState {\r\n  projects: ProjectState[];\r\n  fetchStatus: 'idle' | 'loading' | 'success' | 'fail';\r\n  fetchError: string | null;\r\n  submitLoading: boolean;\r\n  submitError: string | null;\r\n  sortBy: ProjectSortValues;\r\n}\r\n\r\nconst initialState: InitialProjectsState = {\r\n  projects: [],\r\n  fetchStatus: 'idle',\r\n  fetchError: null,\r\n  submitLoading: false,\r\n  submitError: null,\r\n  sortBy: 'newest',\r\n};\r\n\r\nconst projectsSlice = createSlice({\r\n  name: 'projects',\r\n  initialState,\r\n  reducers: {\r\n    setProjects: (state, action: PayloadAction<ProjectState[]>) => {\r\n      state.projects = action.payload;\r\n      state.fetchStatus = 'success';\r\n      state.fetchError = null;\r\n    },\r\n    addProject: (state, action: PayloadAction<ProjectState>) => {\r\n      state.projects = [...state.projects, action.payload];\r\n      state.submitLoading = false;\r\n      state.submitError = null;\r\n    },\r\n    setProjectsFetchLoading: (state) => {\r\n      state.fetchStatus = 'loading';\r\n      state.fetchError = null;\r\n    },\r\n    removeProject: (state, action: PayloadAction<string>) => {\r\n      state.projects = state.projects.filter(\r\n        (project) => project.id !== action.payload\r\n      );\r\n    },\r\n    updateProjectName: (\r\n      state,\r\n      action: PayloadAction<{ data: { name: string }; projectId: string }>\r\n    ) => {\r\n      state.projects = state.projects.map((project) =>\r\n        project.id === action.payload.projectId\r\n          ? { ...project, ...action.payload.data }\r\n          : project\r\n      );\r\n    },\r\n    setSubmitProjectLoading: (state) => {\r\n      state.submitLoading = true;\r\n      state.submitError = null;\r\n    },\r\n    sortProjectsBy: (state, action: PayloadAction<ProjectSortValues>) => {\r\n      state.sortBy = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setProjects,\r\n  addProject,\r\n  setProjectsFetchLoading,\r\n  removeProject,\r\n  updateProjectName,\r\n  setSubmitProjectLoading,\r\n  sortProjectsBy,\r\n} = projectsSlice.actions;\r\n\r\nexport const fetchProjects = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setProjectsFetchLoading());\r\n      const allProjects = await projectService.getProjects();\r\n      dispatch(setProjects(allProjects));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewProject = (\r\n  projectData: ProjectPayload,\r\n  closeDialog?: () => void\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitProjectLoading());\r\n      const newProject = await projectService.createProject(projectData);\r\n      dispatch(addProject(newProject));\r\n      closeDialog && closeDialog();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteProject = (\r\n  projectId: string,\r\n  history: History\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      await projectService.deleteProject(projectId);\r\n      history.push('/');\r\n      dispatch(removeProject(projectId));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const editProjectName = (projectId: string, name: string): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const updatedProjectName = await projectService.editProjectName(\r\n        projectId,\r\n        name\r\n      );\r\n      dispatch(\r\n        updateProjectName({\r\n          data: { name: updatedProjectName.name },\r\n          projectId,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectProjectsState = (state: RootState) => state.projects;\r\n\r\nexport const selectProjectById = (state: RootState, projectId: string) => {\r\n  return state.projects.projects.find((p) => p.id === projectId);\r\n};\r\n\r\nexport default projectsSlice.reducer;\r\n","import { AppThunk } from './../store';\r\nimport { CredentialsPayload } from './../types';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { UserState } from '../types';\r\nimport authService from '../../services/auth';\r\n\r\nimport { fetchProjects } from './projectSlice';\r\n\r\ninterface InitialAuthState {\r\n  user: UserState | null;\r\n}\r\n\r\nconst initialState: InitialAuthState = {\r\n  user: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<UserState>) => {\r\n      state.user = action.payload;\r\n    },\r\n    logOutUser: (state, action) => {\r\n      state.user = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, logOutUser } = authSlice.actions;\r\n\r\nexport const login = (credentials: CredentialsPayload): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const userData = await authService.login(credentials);\r\n      dispatch(setUser(userData));\r\n\r\n      dispatch(fetchProjects());\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const registerUser = (credentials: CredentialsPayload): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const newUser = await authService.register(credentials);\r\n      dispatch(setUser(newUser));\r\n\r\n      const loggedUser = await authService.verify();\r\n      if (loggedUser) {\r\n        dispatch(setUser(loggedUser));\r\n      }\r\n      dispatch(fetchProjects());\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const autoLogin = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const loggedUser = await authService.verify();\r\n      if (loggedUser) {\r\n        dispatch(setUser(loggedUser));\r\n      }\r\n\r\n      dispatch(fetchProjects());\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    await authService.logout();\r\n    dispatch(logOutUser);\r\n  };\r\n};\r\n\r\nexport const selectAuthState = (state: RootState) => state.auth;\r\n\r\nexport default authSlice.reducer;\r\n","import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\nconst getUsers = async () => {\r\n  const response = await Axios.get(`${backendUrl}/users`, {\r\n    withCredentials: true,\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst usersService = { getUsers };\r\n\r\nexport default usersService;\r\n","import { AppThunk } from './../store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { User } from '../types';\r\nimport authService from '../../services/auth';\r\nimport usersService from '../../services/users';\r\n\r\ninterface InitialUsersState {\r\n  users: User[];\r\n}\r\n\r\nconst initialState: InitialUsersState = {\r\n  users: [],\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setUsers: (state, action: PayloadAction<User[]>) => {\r\n      state.users = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUsers } = usersSlice.actions;\r\n\r\nexport const getUsers = (): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const allUsers = await usersService.getUsers();\r\n      dispatch(setUsers(allUsers));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectUsersState = (state: RootState) => state.users;\r\n\r\nexport default usersSlice.reducer;\r\n","import { SyntheticEvent, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\r\n\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport MemberDropdown from '../../components/member-dropdown/member-dropdown.component';\r\n\r\nimport { User } from '../../redux/types';\r\nimport { createNewProject } from '../../redux/slices/projectSlice';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 500,\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst CreateProjectPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector(selectUsersState);\r\n  const classes = useStyles();\r\n\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [name, setName] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\r\n    setMembers(selectedOption.map((option) => option.id));\r\n  };\r\n\r\n  const handleCreateProject = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(createNewProject({ name, members }));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleCreateProject}>\r\n      <TextField\r\n        id=\"outlined-basic\"\r\n        label=\"Project Name\"\r\n        variant=\"outlined\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n          setName(e.target.value)\r\n        }\r\n      />\r\n      {/* <MemberDropdown /> */}\r\n      {users && (\r\n        <Autocomplete\r\n          multiple\r\n          id=\"tags-outlined\"\r\n          onChange={selectMembersOnChange}\r\n          options={users}\r\n          getOptionLabel={(user) => user && user.username}\r\n          defaultValue={[]}\r\n          filterSelectedOptions\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Select Members\"\r\n              placeholder=\"Favorites\"\r\n            />\r\n          )}\r\n        />\r\n      )}\r\n      <button>Create Project</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateProjectPage;\r\n","import { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nexport const navStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport const authPageStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  body: {\r\n    padding: '1.5em 3em',\r\n    marginTop: '5rem',\r\n    height: '500px',\r\n    width: '500px',\r\n    margin: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: 'auto',\r\n      margin: '0.5em 0.5em',\r\n      padding: '1em',\r\n    },\r\n  },\r\n  inputField: {\r\n    marginBottom: '2rem',\r\n  },\r\n  submitButton: {\r\n    padding: '1rem',\r\n  },\r\n}));\r\n\r\nexport const useHeaderStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '1em 0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '0.5em 0.5em',\r\n    },\r\n  },\r\n  headerPaper: {\r\n    padding: '0.8em 1.5em',\r\n    marginBottom: '1em',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'left',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '0.3em 0.5em',\r\n      marginBottom: '0.5em',\r\n    },\r\n  },\r\n  adminButtons: {\r\n    marginTop: '1rem',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: '',\r\n  },\r\n  buttonWrapper: {\r\n    marginRight: '1rem',\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  mobileWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginTop: '1rem',\r\n  },\r\n  mobileDescription: {\r\n    marginBottom: '0.5rem',\r\n  },\r\n}));\r\n\r\nexport const useSearchSortStyles = makeStyles(\r\n  (theme) => ({\r\n    inputWrapper: {\r\n      display: 'flex',\r\n      minWidth: '100%',\r\n      justifyContent: 'space-between',\r\n      marginBottom: '1.5em',\r\n      marginTop: '1rem',\r\n      [theme.breakpoints.down('xs')]: {\r\n        marginBottom: '0.7em',\r\n      },\r\n    },\r\n    searchBar: {\r\n      width: '70%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '55%',\r\n      },\r\n    },\r\n    sortBar: {\r\n      width: '25%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '42%',\r\n      },\r\n    },\r\n    flexWrapper: {\r\n      display: 'flex',\r\n      minWidth: '100%',\r\n      justifyContent: 'space-between',\r\n      [theme.breakpoints.down('xs')]: {\r\n        justifyContent: 'flex-start',\r\n        marginLeft: '0.2em',\r\n      },\r\n    },\r\n  }),\r\n  { index: 1 }\r\n);\r\n\r\nexport const useTableStyles = makeStyles(\r\n  (theme) => ({\r\n    root: {\r\n      marginTop: '1rem',\r\n    },\r\n    table: {\r\n      '& thead th': {\r\n        fontWeight: '600',\r\n        color: '#003d6a',\r\n        backgroundColor: '#cce4f6',\r\n      },\r\n    },\r\n    clickableCell: {\r\n      '&:hover': {\r\n        backgroundColor: theme.palette.primary.main + '15',\r\n        cursor: 'pointer',\r\n      },\r\n    },\r\n    scrollableTable: {\r\n      '& thead th': {\r\n        fontWeight: '600',\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n      overflowY: 'auto',\r\n      maxHeight: '350px',\r\n    },\r\n    StyledTableCell: {\r\n      head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n      },\r\n    },\r\n    StyledTableRow: {\r\n      root: {\r\n        '&:nth-of-type(odd)': {\r\n          backgroundColor: theme.palette.action.hover,\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  { index: 1 }\r\n);\r\n\r\nexport const useFormStyles = makeStyles((theme) => ({\r\n  inputField: {\r\n    marginBottom: '1rem',\r\n  },\r\n  submitButton: {\r\n    width: '100%',\r\n  },\r\n  formControl: {\r\n    width: '100%',\r\n    marginTop: '0.5rem',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  radioGroupForm: {\r\n    marginTop: '0.8em',\r\n    width: '100%',\r\n  },\r\n  radioGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  radioGroupLabel: {\r\n    marginRight: '2em',\r\n  },\r\n  formControlLabels: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '80%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      flexDirection: 'column',\r\n      width: 'auto',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const useHomePageStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: '1rem 0',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: '0.2em 0.2em',\r\n    },\r\n  },\r\n  body: {\r\n    marginTop: '2rem',\r\n    padding: '1.5rem',\r\n  },\r\n  projectsListTable: {},\r\n  itemWrapper: {\r\n    padding: '0.4em 0.3em',\r\n    marginTop: '0.5em',\r\n  },\r\n  flexedWrapper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginTop: '0.3em',\r\n  },\r\n  iconWrapper: {\r\n    display: 'flex',\r\n    width: '100px',\r\n    justifyContent: 'space-between',\r\n  },\r\n  iconText: {\r\n    verticalAlign: 'middle',\r\n    display: 'inline-flex',\r\n  },\r\n}));\r\n\r\nexport const useBodyStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#e6f2fb',\r\n    overflowY: 'auto',\r\n    height: '100vh',\r\n    // width: '100vw',\r\n  },\r\n  body: {\r\n    margin: '0 auto',\r\n    maxWidth: '1200px',\r\n  },\r\n}));\r\n\r\nexport const useBugPageStyles = makeStyles((theme) => ({\r\n  // root: {\r\n  //   margin: '0 auto',\r\n  //   width: '80%',\r\n  //   height: '100vh',\r\n  // },\r\n  root: {},\r\n  body: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: '2rem',\r\n    padding: '2rem',\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: '2rem',\r\n  },\r\n  buttonWrapper: {\r\n    marginRight: '1rem',\r\n  },\r\n  details: {},\r\n}));\r\n","import React, { useState, Fragment } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { registerUser } from '../../redux/slices/authSlice';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextField, Paper, Typography, Button } from '@material-ui/core';\r\n\r\nimport { authPageStyles } from '../../styles/muiStyles';\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst RegisterPage = () => {\r\n  const classes = authPageStyles();\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n\r\n  const [username, setUsername] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\r\n\r\n  const handleSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      console.log('error, passwords not matching');\r\n    }\r\n    dispatch(registerUser({ username, password }));\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.body} elevation={2}>\r\n        <Typography variant=\"h4\" style={{ marginBottom: '2rem' }}>\r\n          Register Page\r\n        </Typography>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={username}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUsername(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={password}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setPassword(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Confirm Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={confirmPassword}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setConfirmPassword(e.target.value)\r\n            }\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n          >\r\n            Register!\r\n          </Button>\r\n          <Typography\r\n            style={{\r\n              marginTop: '1rem',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            Already have an account? <a href=\"/login\">Log in</a>\r\n          </Typography>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { TextField, Paper, Typography, Button } from '@material-ui/core';\r\nimport Axios from 'axios';\r\nimport backendUrl from '../../backendUrl';\r\n\r\nimport { login } from '../../redux/slices/authSlice';\r\n\r\nimport { authPageStyles } from '../../styles/muiStyles';\r\n\r\ninterface InputValues {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nconst LoginPage = () => {\r\n  const classes = authPageStyles();\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [username, setUsername] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  const handleSubmit = async (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      dispatch(login({ username, password }));\r\n      history.push('/');\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.body} elevation={2}>\r\n        <Typography variant=\"h4\" style={{ marginBottom: '2rem' }}>\r\n          Login Page\r\n        </Typography>\r\n        <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={username}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setUsername(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            value={password}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setPassword(e.target.value)\r\n            }\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            fullWidth\r\n          >\r\n            Login!\r\n          </Button>\r\n          <Typography style={{ marginTop: '1rem' }}>\r\n            Don't have an account? <a href=\"/register\">Register Here</a>\r\n          </Typography>\r\n        </form>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { format, formatDistanceToNowStrict } from 'date-fns';\r\n\r\nexport const formatDateTime = (date: Date) => {\r\n  return format(new Date(date), \"dd/MM/yy',' h':'mm a\");\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nimport { selectProjectsState } from '../../redux/slices/projectSlice';\r\nimport { ProjectState } from '../../redux/types';\r\nimport { useTableStyles } from '../../styles/muiStyles';\r\n\r\nconst ProjectsTable: React.FC<{ projects: ProjectState[] }> = ({\r\n  projects,\r\n}) => {\r\n  const classes = useTableStyles();\r\n  const history = useHistory();\r\n  // const { projects } = useSelector(selectProjectsState);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Project Name</TableCell>\r\n              <TableCell align=\"right\">Bugs</TableCell>\r\n              <TableCell align=\"right\">Members</TableCell>\r\n              <TableCell align=\"right\">Admin</TableCell>\r\n              <TableCell align=\"right\">Added</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {projects &&\r\n              projects.map((project, i) => (\r\n                <TableRow key={project.id}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    onClick={() => history.push(`/projects/${project.id}`)}\r\n                    className={classes.clickableCell}\r\n                  >\r\n                    {project.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <BugReportIcon />\r\n                    {project && project.bugs.length}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <PersonIcon />\r\n\r\n                    {project && project.members.length}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {project && project.createdBy.username}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {/* {project.createdBy[0]} */}\r\n                    {formatDateTime(project.createdAt)}\r\n                  </TableCell>\r\n                  {/* <StyledTableCell align=\"right\">{project.carbs}</StyledTableCell> */}\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsTable;\r\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      '& > * + *': {\r\n        marginLeft: theme.spacing(2),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport default function Spinner() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useDialogStyles = makeStyles(\r\n  (theme) => ({\r\n    dialogWrapper: {\r\n      padding: '1.5rem',\r\n      marginBottom: '1rem',\r\n      overflow: 'hidden',\r\n      width: '70%',\r\n      [theme.breakpoints.down('xs')]: {\r\n        padding: 0,\r\n      },\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n      zIndex: 1000,\r\n    },\r\n    roundIconButton: {\r\n      minWidth: 0,\r\n      padding: '0.65em',\r\n      borderRadius: '2em',\r\n    },\r\n  }),\r\n  { index: 1 }\r\n);\r\n","import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  useTheme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n  Paper,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\n\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\nimport { ButtonTypes } from '../types';\r\n\r\nconst FormDialog: React.FC<{\r\n  title: string;\r\n  buttonType: ButtonTypes;\r\n  children: React.ReactNode;\r\n}> = ({ title, buttonType, children }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'icon') {\r\n      return (\r\n        <IconButton color={buttonType.color} onClick={handleClickOpen}>\r\n          <buttonType.icon fontSize={buttonType.iconSize} />\r\n        </IconButton>\r\n      );\r\n    } else if (buttonType.type === 'menu') {\r\n      return (\r\n        <MenuItem onClick={handleClickOpen}>\r\n          <buttonType.icon style={buttonType.iconStyle} />\r\n          {buttonType.text}\r\n        </MenuItem>\r\n      );\r\n    } else if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'inline' }}>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        classes={{ paper: classes.dialogWrapper }}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>{children}</DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormDialog;\r\n","import { useState, useEffect, Fragment } from 'react';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsers, selectUsersState } from '../../redux/slices/usersSlice';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { editProjectName } from '../../redux/slices/projectSlice';\r\n\r\nimport { User } from '../../redux/types';\r\nimport { createNewProject } from '../../redux/slices/projectSlice';\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\ninterface CreateProject {\r\n  editMode: 'project';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId?: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface AddMembers {\r\n  editMode: 'members';\r\n  currentName?: string;\r\n  currentMembers?: string[];\r\n  projectId: string;\r\n  closeDialog?: () => void;\r\n}\r\n\r\ninterface EditProjectName {\r\n  editMode: 'name';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentMembers?: string[];\r\n  closeDialog?: () => void;\r\n}\r\n\r\ntype ProjectFormType = CreateProject | EditProjectName | AddMembers;\r\n\r\nconst ProjectForm: React.FC<ProjectFormType> = ({\r\n  editMode,\r\n  currentName,\r\n  currentMembers,\r\n  projectId,\r\n  closeDialog,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector(selectUsersState);\r\n  const { user } = useSelector(selectAuthState);\r\n\r\n  const [members, setMembers] = useState<string[]>([]);\r\n  const [name, setName] = useState<string>('');\r\n  const [projectName, setProjectName] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, []);\r\n\r\n  const selectMembersOnChange = (e: any, selectedOption: User[]) => {\r\n    setMembers(selectedOption.map((option) => option.id));\r\n  };\r\n\r\n  const handleCreateProject = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    dispatch(createNewProject({ name, members }, closeDialog));\r\n  };\r\n\r\n  const handleEditProjectName = () => {\r\n    dispatch(editProjectName(projectId as string, projectName));\r\n  };\r\n\r\n  const handleAddMembers = () => {};\r\n\r\n  return (\r\n    <form\r\n      onSubmit={\r\n        editMode === 'project'\r\n          ? handleCreateProject\r\n          : editMode === 'name'\r\n          ? handleEditProjectName\r\n          : handleAddMembers\r\n      }\r\n    >\r\n      {editMode === 'project' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Project Name\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n      {editMode === 'name' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Edit Project Name\"\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            fullWidth\r\n            className={classes.inputField}\r\n            defaultValue={currentName}\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      {editMode === 'members' ? (\r\n        <Fragment>\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            className={classes.inputField}\r\n            onChange={selectMembersOnChange}\r\n            options={users.filter((projectUser) =>\r\n              user != null ? projectUser.id !== user.id : null\r\n            )}\r\n            getOptionLabel={(user) => user && user.username}\r\n            defaultValue={[]}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                variant=\"outlined\"\r\n                label=\"Select Members\"\r\n                placeholder=\"Favorites\"\r\n              />\r\n            )}\r\n          />\r\n        </Fragment>\r\n      ) : null}\r\n\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'name'\r\n          ? 'Edit Project Name'\r\n          : editMode === 'project'\r\n          ? 'Add Project'\r\n          : editMode === 'members'\r\n          ? 'Add Members'\r\n          : null}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React from 'react';\r\n\r\nimport { TextField, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst SearchBar: React.FC<{\r\n  searchText: string;\r\n  setSearchText: (searchText: string) => void;\r\n  label: string;\r\n  size?: 'small' | 'medium';\r\n}> = ({ searchText, setSearchText, label, size }) => {\r\n  return (\r\n    <TextField\r\n      value={searchText}\r\n      onChange={(e) => setSearchText(e.target.value)}\r\n      fullWidth\r\n      type=\"text\"\r\n      variant=\"outlined\"\r\n      size={size || 'medium'}\r\n      label={`Search ${label}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  InputAdornment,\r\n} from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort';\r\n\r\nconst SortBar: React.FC<{\r\n  handleSortChange: (e: React.ChangeEvent<{ value: unknown }>) => void;\r\n  sortItems: { value: string; label: string }[];\r\n  sortBy: string;\r\n  label: string;\r\n  size?: 'small' | 'medium';\r\n}> = ({ handleSortChange, sortItems, sortBy, label, size }) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" fullWidth size={size || 'medium'}>\r\n      <InputLabel>Sort {label} By</InputLabel>\r\n      <Select\r\n        value={sortBy}\r\n        onChange={handleSortChange}\r\n        label={`Sort ${label} By`}\r\n      >\r\n        {sortItems.map((item) => (\r\n          <MenuItem key={item.value} value={item.value}>\r\n            {item.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SortBar;\r\n","import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SearchBar from '../search-bar/search-bar.component';\r\nimport SortBar from '../sort-bar/sort-bar.component';\r\n\r\nimport { ProjectSortValues } from '../../redux/types';\r\nimport {\r\n  sortProjectsBy,\r\n  selectProjectsState,\r\n} from '../../redux/slices/projectSlice';\r\n\r\nimport { useSearchSortStyles } from '../../styles/muiStyles';\r\n\r\nconst sortItems = [\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'oldest', label: 'Oldest' },\r\n  { value: 'most-bugs', label: 'Most Bugs' },\r\n  { value: 'least-bugs', label: 'Least Bugs' },\r\n  { value: 'most-members', label: 'Most Members' },\r\n  { value: 'least-members', label: 'Least Members' },\r\n];\r\n\r\nconst ProjectsSearchSort: React.FC<{\r\n  searchText: string;\r\n  setSearchText: (searchText: string) => void;\r\n  isMobile: boolean;\r\n}> = ({ searchText, setSearchText, isMobile }) => {\r\n  const classes = useSearchSortStyles();\r\n  const dispatch = useDispatch();\r\n  const { sortBy } = useSelector(selectProjectsState);\r\n  const handleSortChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    const selectedValue = e.target.value as ProjectSortValues;\r\n    dispatch(sortProjectsBy(selectedValue));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.inputWrapper}>\r\n        <div className={classes.searchBar}>\r\n          <SearchBar\r\n            searchText={searchText}\r\n            setSearchText={setSearchText}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n        <div className={classes.sortBar}>\r\n          <SortBar\r\n            handleSortChange={handleSortChange}\r\n            sortItems={sortItems}\r\n            sortBy={sortBy}\r\n            label=\"Projects\"\r\n            size={isMobile ? 'small' : 'medium'}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsSearchSort;\r\n","import { ProjectState, ProjectSortValues } from '../redux/types';\r\n\r\nconst sortProjects = (projects: ProjectState[], sortBy: ProjectSortValues) => {\r\n  switch (sortBy) {\r\n    case 'newest':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt));\r\n\r\n    case 'oldest':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => +new Date(a.createdAt) - +new Date(b.createdAt));\r\n\r\n    case 'most-bugs':\r\n      return projects.slice().sort((a, b) => b.bugs.length - a.bugs.length);\r\n\r\n    case 'least-bugs':\r\n      return projects.slice().sort((a, b) => a.bugs.length - b.bugs.length);\r\n\r\n    case 'most-members':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => b.members.length - a.members.length);\r\n\r\n    case 'least-members':\r\n      return projects\r\n        .slice()\r\n        .sort((a, b) => a.members.length - b.members.length);\r\n  }\r\n};\r\n\r\nexport default sortProjects;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { Divider, Typography, Link } from '@material-ui/core';\r\nimport { ProjectState } from '../../redux/types';\r\nimport { useHomePageStyles } from '../../styles/muiStyles';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport BugReportIcon from '@material-ui/icons/BugReport';\r\nimport PeopleAltTwoToneIcon from '@material-ui/icons/PeopleAltTwoTone';\r\n\r\nconst ProjectsTableMobile: React.FC<{ projects: ProjectState[] }> = ({\r\n  projects,\r\n}) => {\r\n  const classes = useHomePageStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Divider />\r\n      {projects.map((project, i) => (\r\n        <div key={project.id}>\r\n          <div className={classes.itemWrapper}>\r\n            <Link\r\n              component={RouterLink}\r\n              to={`/projects/${project.id}`}\r\n              variant=\"h6\"\r\n            >\r\n              {project.name}\r\n            </Link>\r\n            <Typography variant=\"body1\">\r\n              Admin: <strong>{project.createdBy.username}</strong>\r\n            </Typography>\r\n            <Typography>\r\n              Created: <strong>{formatDateTime(project.createdAt)}</strong>\r\n            </Typography>\r\n            <div className={classes.flexedWrapper}>\r\n              <div className={classes.iconWrapper}>\r\n                <div className={classes.iconText}>\r\n                  <BugReportIcon />\r\n                  <Typography>: {project.bugs.length}</Typography>\r\n                </div>\r\n                <div className={classes.iconText}>\r\n                  <PeopleAltTwoToneIcon />\r\n                  <Typography>: {project.members.length}</Typography>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Divider />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectsTableMobile;\r\n","import { useEffect, useState, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Paper, useMediaQuery } from '@material-ui/core';\r\n\r\nimport ProjectsTable from '../../components/projects-table/projects-table.component';\r\n// import ProjectButton from '../../components/project-button/project-button.component';\r\n// import ProjectHeader from '../../components/project-header/project-header.component';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\n// import ProjectCreate from '../../components/project-create/project-create.component';\r\n\r\nimport FormDialog from '../../components/form-dialog/form-dialog.component';\r\nimport ProjectForm from '../../components/project-form/project-form.component';\r\nimport ProjectsSearchSort from '../../components/projects-search-sort/projects-search-sort.component';\r\n\r\nimport { fetchProjects } from '../../redux/slices/projectSlice';\r\n\r\nimport { selectProjectsState } from '../../redux/slices/projectSlice';\r\n\r\nimport { useHomePageStyles } from '../../styles/muiStyles';\r\nimport sortProjects from '../../utils/sortProject';\r\n\r\nimport Axios from 'axios';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport ProjectsTableMobile from '../../components/projects-table-mobile/projects-table-mobile.component';\r\n\r\nconst HomePage = () => {\r\n  const { projects, fetchStatus, fetchError, sortBy } =\r\n    useSelector(selectProjectsState);\r\n  const classes = useHomePageStyles();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const filteredSortedProjects = sortProjects(\r\n    projects.filter((project) =>\r\n      project.name.toLowerCase().includes(searchText.toLowerCase())\r\n    ),\r\n    sortBy\r\n  );\r\n\r\n  useEffect(() => {\r\n    // dispatch(fetchProjects());\r\n  }, [projects]);\r\n\r\n  const projectDisplay = () => {\r\n    if (fetchStatus === 'loading') {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <div className={classes.projectsListTable}>\r\n          {!isMobile ? (\r\n            <ProjectsTable projects={filteredSortedProjects} />\r\n          ) : (\r\n            <ProjectsTableMobile projects={filteredSortedProjects} />\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.body} elevation={3}>\r\n        <FormDialog\r\n          title=\"Create Project\"\r\n          buttonType={{ type: 'normal', text: 'Create Project', icon: AddIcon }}\r\n        >\r\n          <ProjectForm editMode=\"project\" />\r\n        </FormDialog>\r\n        <ProjectsSearchSort\r\n          searchText={searchText}\r\n          setSearchText={setSearchText}\r\n          isMobile={isMobile}\r\n        />\r\n        {projectDisplay()}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import Axios from 'axios';\r\nimport backendUrl from '../backendUrl';\r\n\r\nimport { BugPayload } from '../redux/types';\r\n\r\nconst getBugs = async (projectId: string) => {\r\n  const response = await Axios.get(`${backendUrl}/projects/${projectId}/bugs`, {\r\n    withCredentials: true,\r\n  });\r\n  console.log(response);\r\n  return response.data;\r\n};\r\n\r\nconst createBug = async (projectId: string, bugData: BugPayload) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs`,\r\n    bugData,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.delete(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}`,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst closeBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/close`,\r\n    null,\r\n    {\r\n      withCredentials: true,\r\n    }\r\n  );\r\n\r\n  return response.data;\r\n};\r\n\r\nconst reopenBug = async (projectId: string, bugId: string) => {\r\n  const response = await Axios.post(\r\n    `${backendUrl}/projects/${projectId}/bugs/${bugId}/reopen`,\r\n    null,\r\n    { withCredentials: true }\r\n  );\r\n};\r\nconst bugService = { getBugs, createBug, deleteBug, closeBug, reopenBug };\r\n\r\nexport default bugService;\r\n","import { AppThunk } from './../store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../store';\r\nimport { BugState, BugPayload } from '../types';\r\nimport bugService from '../../services/bug';\r\ninterface InitialBugState {\r\n  bugs: { [projectId: string]: BugState[] };\r\n  fetchStatus: boolean;\r\n  fetchError: string | null;\r\n  submitStatus: boolean;\r\n  submitError: string | null;\r\n}\r\n\r\nconst initialState: InitialBugState = {\r\n  bugs: {},\r\n  fetchStatus: false,\r\n  fetchError: null,\r\n  submitStatus: false,\r\n  submitError: null,\r\n};\r\n\r\nconst bugSlice = createSlice({\r\n  name: 'bugs',\r\n  initialState,\r\n  reducers: {\r\n    setBugs: (\r\n      state,\r\n      action: PayloadAction<{ bugs: BugState[]; projectId: string }>\r\n    ) => {\r\n      state.bugs[action.payload.projectId] = action.payload.bugs;\r\n      state.fetchStatus = false;\r\n      state.fetchError = null;\r\n    },\r\n    addBug: (\r\n      state,\r\n      action: PayloadAction<{ bug: BugState; projectId: string }>\r\n    ) => {\r\n      if (action.payload.projectId in state.bugs) {\r\n        state.bugs[action.payload.projectId] = [\r\n          ...state.bugs[action.payload.projectId],\r\n          action.payload.bug,\r\n        ];\r\n        state.submitStatus = false;\r\n        state.submitError = null;\r\n      } else {\r\n        state.bugs[action.payload.projectId] = [action.payload.bug];\r\n      }\r\n    },\r\n    removeBug: (\r\n      state,\r\n      action: PayloadAction<{ projectId: string; bugId: string }>\r\n    ) => {\r\n      state.bugs[action.payload.projectId] = state.bugs[\r\n        action.payload.projectId\r\n      ].filter((bug) => bug.id !== action.payload.bugId);\r\n    },\r\n    updateBugStatus: (\r\n      state,\r\n      action: PayloadAction<{\r\n        isResolved: Boolean;\r\n        projectId: string;\r\n        bugId: string;\r\n      }>\r\n    ) => {\r\n      state.bugs[action.payload.projectId] = state.bugs[\r\n        action.payload.projectId\r\n      ].map((bug) =>\r\n        bug.id === action.payload.bugId\r\n          ? { ...bug, ...action.payload.isResolved }\r\n          : bug\r\n      );\r\n    },\r\n    setFetchBug: (state) => {\r\n      state.fetchStatus = true;\r\n      state.fetchError = null;\r\n    },\r\n    setSubmitBug: (state) => {\r\n      state.submitStatus = true;\r\n      state.submitError = null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setBugs,\r\n  addBug,\r\n  setSubmitBug,\r\n  setFetchBug,\r\n  removeBug,\r\n  updateBugStatus,\r\n} = bugSlice.actions;\r\n\r\nexport const fetchBugs = (projectId: string): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setFetchBug());\r\n      const bugData = await bugService.getBugs(projectId);\r\n      dispatch(setBugs({ bugs: bugData, projectId }));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const createBug = (projectId: string, bugData: BugPayload): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(setSubmitBug());\r\n      const createdBug = await bugService.createBug(projectId, bugData);\r\n      dispatch(addBug({ bug: createdBug, projectId }));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteBug = (projectId: string, bugId: string): AppThunk => {\r\n  return async (dispatch) => {\r\n    await bugService.deleteBug(projectId, bugId);\r\n    dispatch(removeBug({ projectId, bugId }));\r\n  };\r\n};\r\n\r\nexport const resolveBug = (\r\n  projectId: string,\r\n  bugId: string,\r\n  action: 'close' | 'reopen'\r\n): AppThunk => {\r\n  return async (dispatch) => {\r\n    try {\r\n      let updatedBug;\r\n      if (action === 'close') {\r\n        updatedBug = await bugService.closeBug(projectId, bugId);\r\n      } else {\r\n        updatedBug = bugService.reopenBug(projectId, bugId);\r\n      }\r\n\r\n      const { isResolved } = updatedBug;\r\n\r\n      dispatch(updateBugStatus({ isResolved, bugId, projectId }));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const selectBugsState = (state: RootState) => state.bugs;\r\n\r\nexport const selectBugsStateForProject = (\r\n  state: RootState,\r\n  projectId: string\r\n) => {\r\n  return state.bugs.bugs?.[projectId];\r\n};\r\n\r\nexport const selectBugById = (\r\n  state: RootState,\r\n  bugId: string,\r\n  projectId: string\r\n) => {\r\n  return state.bugs.bugs?.[projectId].find((b) => b.id === bugId);\r\n};\r\nexport default bugSlice.reducer;\r\n","import CSS from 'csstype';\r\n\r\nconst colors = {\r\n  Low: '#FFD700',\r\n  Medium: '#FF8C00',\r\n  High: '#ff402c',\r\n  closed: '#008000',\r\n  open: '#000080',\r\n  closedBg: '#e2ffe2',\r\n  openBg: '#e2e2ff',\r\n};\r\n\r\nexport const priorityStyles = (\r\n  priority: 'Low' | 'Medium' | 'High'\r\n): CSS.Properties => {\r\n  return {\r\n    color: priority === 'Low' ? '#000' : '#fff',\r\n    backgroundColor: colors[priority],\r\n    borderRadius: '4px',\r\n    fontWeight: 500,\r\n    padding: '0.35em',\r\n    maxWidth: '4em',\r\n  };\r\n};\r\n\r\nexport const statusStyles = (isResolved: boolean): CSS.Properties => {\r\n  const color = isResolved ? colors.closed : colors.open;\r\n  const backgroundColor = isResolved ? colors.closedBg : colors.openBg;\r\n\r\n  return {\r\n    color,\r\n    backgroundColor,\r\n    borderRadius: '4px',\r\n    fontWeight: 500,\r\n    padding: '0.35em',\r\n    maxWidth: '4em',\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { selectBugsState } from '../../redux/slices/bugSlice';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\nimport { useTableStyles } from '../../styles/muiStyles';\r\n\r\nconst BugsTable = ({ projectId }: { projectId: string }) => {\r\n  const classes = useTableStyles();\r\n  const history = useHistory();\r\n  const { bugs } = useSelector(selectBugsState);\r\n\r\n  const singleBugs = bugs[projectId];\r\n  console.log(singleBugs);\r\n  return (\r\n    <div className={classes.root}>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell align=\"center\">Priority</TableCell>\r\n              <TableCell align=\"center\">Status</TableCell>\r\n              <TableCell align=\"right\">Added</TableCell>\r\n              {/* <TableCell align=\"right\">Updated</TableCell> */}\r\n              <TableCell align=\"right\">Created By</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {singleBugs &&\r\n              singleBugs.map((bug) => (\r\n                <TableRow key={bug.id}>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.clickableCell}\r\n                    onClick={() =>\r\n                      history.push(`/projects/${projectId}/bugs/${bug.id}`)\r\n                    }\r\n                  >\r\n                    {bug.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div\r\n                      style={{\r\n                        ...priorityStyles(bug.priority),\r\n                        textTransform: 'capitalize',\r\n                        margin: '0 auto',\r\n                      }}\r\n                    >\r\n                      {bug.priority}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div\r\n                      style={{\r\n                        ...statusStyles(bug.isResolved),\r\n                        margin: '0 auto',\r\n                      }}\r\n                    >\r\n                      {bug.isResolved ? 'Closed' : 'Open'}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {formatDateTime(bug.createdAt)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{bug.createdBy.username}</TableCell>\r\n                  {/* <TableCell align=\"right\">{bug.protein}</TableCell> */}\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsTable;\r\n","import React from 'react';\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n} from '@material-ui/core/styles';\r\n\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n  Fab,\r\n} from '@material-ui/core';\r\n\r\nimport { ButtonTypes } from '../types';\r\nimport { useDialogStyles } from '../../styles/dialogStyles';\r\n\r\nconst ConfirmDialog: React.FC<{\r\n  title: string;\r\n  bodyContent: string;\r\n  buttonText: string;\r\n  buttonType: ButtonTypes;\r\n  actionFunction: () => void;\r\n}> = ({ title, bodyContent, buttonText, buttonType, actionFunction }) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useDialogStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAction = () => {\r\n    actionFunction();\r\n    handleClose();\r\n  };\r\n\r\n  const displayedButton = () => {\r\n    if (buttonType.type === 'normal') {\r\n      return (\r\n        <Button\r\n          onClick={handleClickOpen}\r\n          color={buttonType.color || 'primary'}\r\n          variant={buttonType.variant || 'contained'}\r\n          size={buttonType.size || 'medium'}\r\n          startIcon={<buttonType.icon />}\r\n          style={buttonType.style}\r\n          className={buttonType.className}\r\n        >\r\n          {buttonType.text}\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {displayedButton()}\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography>{bodyContent}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAction} color=\"primary\">\r\n            {buttonType.text}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Icon, Paper, Typography, useMediaQuery } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport { deleteProject } from '../../redux/slices/projectSlice';\r\nimport { ProjectState } from '../../redux/types';\r\nimport ConfirmDialog from '../confirm-dialog/confirm-dialog.component';\r\nimport FormDialog from '../form-dialog/form-dialog.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport ProjectForm from '../project-form/project-form.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nconst ProjectHeader: React.FC<{ currentProject: ProjectState }> = ({\r\n  currentProject,\r\n}) => {\r\n  const classes = useHeaderStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { user } = useSelector(selectAuthState);\r\n  const { createdAt, createdBy, id, members, name, updatedAt } = currentProject;\r\n\r\n  const isAdmin = user?.id === createdBy.id;\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Confirm Delete Project\"\r\n            bodyContent=\"Do you want to permanently delete your project?\"\r\n            buttonText=\"Delete Project\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Project',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleProjectDelete}\r\n          />\r\n        </div>\r\n        <FormDialog\r\n          title=\"Add Project Members\"\r\n          buttonType={{\r\n            type: 'normal',\r\n            text: 'Add Members',\r\n            icon: GroupIcon,\r\n          }}\r\n        >\r\n          <ProjectForm editMode=\"members\" projectId={id} />\r\n        </FormDialog>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleProjectDelete = () => {\r\n    dispatch(deleteProject(id, history));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.headerPaper}>\r\n        <div className={classes.title}>\r\n          <Typography style={{ fontSize: '2rem', fontWeight: 'bold' }}>\r\n            {name}\r\n          </Typography>\r\n          {isAdmin ? (\r\n            <FormDialog\r\n              title=\"Edit Project Name\"\r\n              buttonType={{ type: 'icon', icon: EditIcon, size: 'small' }}\r\n            >\r\n              <ProjectForm editMode=\"name\" currentName={name} projectId={id} />\r\n            </FormDialog>\r\n          ) : null}\r\n        </div>\r\n\r\n        <Typography>Admin: {createdBy.username}</Typography>\r\n        <Typography>Created On: {formatDateTime(createdAt)}</Typography>\r\n\r\n        <div className={classes.adminButtons}>{adminButtons()}</div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectHeader;\r\n","import { useState, Fragment } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { createBug } from '../../redux/slices/bugSlice';\r\nimport { BugPayload, BugPriority } from '../../redux/types';\r\n\r\nimport { useFormStyles } from '../../styles/muiStyles';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Avatar,\r\n  Chip,\r\n  InputAdornment,\r\n  DialogContent,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@material-ui/core';\r\n\r\ninterface AddBug {\r\n  editMode: 'add';\r\n  currentName?: string;\r\n  projectId?: string;\r\n  currentId?: string;\r\n  bugDescription?: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\ninterface UpdateBug {\r\n  editMode: 'update';\r\n  currentName: string;\r\n  projectId: string;\r\n  currentId: string;\r\n  bugDescription: string;\r\n  resolvedStatus?: boolean;\r\n  priorityStatus?: BugPriority;\r\n}\r\n\r\ntype BugFormTypes = UpdateBug | AddBug;\r\n\r\nconst BugForm: React.FC<BugFormTypes> = ({\r\n  editMode,\r\n  currentName,\r\n  currentId,\r\n  projectId,\r\n  bugDescription,\r\n  resolvedStatus,\r\n  priorityStatus,\r\n}) => {\r\n  const classes = useFormStyles();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState<string>('');\r\n  const [description, setDescription] = useState<string>('');\r\n  const [priority, setPriority] = useState<BugPriority>('Low');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setPriority(event.target.value as BugPriority);\r\n  };\r\n\r\n  const handleAddBug = () => {\r\n    console.log('testing');\r\n    dispatch(createBug(projectId as string, { name, description, priority }));\r\n  };\r\n\r\n  const handleEditBug = () => {\r\n    console.log('testing');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={editMode === 'add' ? handleAddBug : handleEditBug}>\r\n      {editMode === 'add' ? (\r\n        <Fragment>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label=\"Bug Title\"\r\n            variant=\"outlined\"\r\n            name=\"title\"\r\n            fullWidth\r\n            value={name}\r\n            className={classes.inputField}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setName(e.target.value)\r\n            }\r\n          />\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            // multiline={true}\r\n            // rows={2}\r\n            fullWidth\r\n            className={classes.inputField}\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setDescription(e.target.value)\r\n            }\r\n          />\r\n          <FormControl component=\"fieldset\" className={classes.radioGroupForm}>\r\n            <RadioGroup\r\n              row\r\n              defaultValue=\"low\"\r\n              value={priority}\r\n              onChange={handleChange}\r\n              className={classes.radioGroup}\r\n            >\r\n              <FormLabel component=\"legend\" className={classes.radioGroupLabel}>\r\n                Priority:\r\n              </FormLabel>\r\n\r\n              <div className={classes.formControlLabels}>\r\n                <FormControlLabel value=\"Low\" control={<Radio />} label=\"Low\" />\r\n                <FormControlLabel\r\n                  value=\"Medium\"\r\n                  control={<Radio />}\r\n                  label=\"Medium\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"High\"\r\n                  control={<Radio />}\r\n                  label=\"High\"\r\n                />\r\n              </div>\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Fragment>\r\n      ) : null}\r\n      <Button\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        className={classes.submitButton}\r\n      >\r\n        {editMode === 'add' ? 'Add a Bug' : 'Edit Bug '}\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BugForm;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { Divider, Typography, Link } from '@material-ui/core';\r\nimport { BugState } from '../../redux/types';\r\nimport { useHomePageStyles } from '../../styles/muiStyles';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nconst BugsTableMobile: React.FC<{ bugs: BugState[] }> = ({ bugs }) => {\r\n  const classes = useHomePageStyles();\r\n  return (\r\n    <div>\r\n      <Divider />\r\n      {bugs.map((bug, i) => (\r\n        <div key={bug.id}>\r\n          <div className={classes.itemWrapper}>\r\n            <Link\r\n              component={RouterLink}\r\n              to={`/projects/${bug.projectId}/bugs/${bug.id}`}\r\n              variant=\"h6\"\r\n            >\r\n              {bug.name}\r\n            </Link>\r\n            <Typography>\r\n              Priority:{' '}\r\n              <div\r\n                style={{\r\n                  ...priorityStyles(bug.priority),\r\n                  textTransform: 'capitalize',\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {bug.priority}\r\n              </div>\r\n            </Typography>\r\n            <Typography>\r\n              Status:{' '}\r\n              <div\r\n                style={{\r\n                  ...statusStyles(bug.isResolved),\r\n                  textTransform: 'capitalize',\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {bug.isResolved ? 'Closed' : 'Open'}\r\n              </div>\r\n            </Typography>\r\n            <Typography variant=\"body1\">\r\n              Admin: <strong>{bug.createdBy.username}</strong>\r\n            </Typography>\r\n            <Typography>\r\n              Created: <strong>{formatDateTime(bug.createdAt)}</strong>\r\n            </Typography>\r\n            <div className={classes.flexedWrapper}>\r\n              <div className={classes.iconWrapper}>\r\n                <div className={classes.iconText}>\r\n                  {/* <BugReportIcon />\r\n                  <Typography>: {project.bugs.length}</Typography>\r\n                </div>\r\n                <div className={classes.iconText}>\r\n                  <PeopleAltTwoToneIcon />\r\n                  <Typography>: {project.members.length}</Typography> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Divider />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugsTableMobile;\r\n","import { Fragment, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { RootState } from '../../redux/store';\r\nimport BugsTable from '../../components/bugs-table/bugs-table.component';\r\nimport BugsCreate from '../../components/bugs-create/bugs-create.component';\r\nimport ProjectHeader from '../../components/project-header/project-header.component';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { selectProjectById } from '../../redux/slices/projectSlice';\r\nimport {\r\n  fetchBugs,\r\n  selectBugsStateForProject,\r\n  selectBugsState,\r\n} from '../../redux/slices/bugSlice';\r\n\r\nimport BugForm from '../../components/bug-form/bug-form.component';\r\nimport Spinner from '../../components/spinner/spinner.component';\r\nimport FormDialog from '../../components/form-dialog/form-dialog.component';\r\nimport BugsTableMobile from '../../components/bugs-table-mobile/bugs-table-mobile.component';\r\n\r\nimport { useTheme, useMediaQuery } from '@material-ui/core';\r\ninterface ParamTypes {\r\n  projectId: string;\r\n}\r\n\r\nconst ProjectPage = () => {\r\n  const { projectId } = useParams<ParamTypes>();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const currentProject = useSelector((state: RootState) =>\r\n    selectProjectById(state, projectId)\r\n  );\r\n\r\n  const { fetchStatus } = useSelector(selectBugsState);\r\n\r\n  const bugs = useSelector((state: RootState) =>\r\n    selectBugsStateForProject(state, projectId)\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBugs(projectId));\r\n  }, []);\r\n\r\n  const bugDisplay = () => {\r\n    if (fetchStatus === true) {\r\n      return <Spinner />;\r\n    } else {\r\n      return !isMobile ? (\r\n        <BugsTable projectId={projectId} />\r\n      ) : (\r\n        <BugsTableMobile bugs={bugs} />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {currentProject && currentProject ? (\r\n        <ProjectHeader currentProject={currentProject} />\r\n      ) : null}\r\n      <FormDialog\r\n        title=\"Add a Bug\"\r\n        buttonType={{ type: 'normal', text: 'Add a Bug', icon: AddIcon }}\r\n      >\r\n        <BugForm editMode=\"add\" projectId={projectId} />\r\n      </FormDialog>\r\n      {bugDisplay()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import React from 'react';\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport { BugState } from '../../redux/types';\r\nimport { useHeaderStyles } from '../../styles/muiStyles';\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\nconst BugDetailsMobile: React.FC<{ bug: BugState }> = ({ bug }) => {\r\n  const classes = useHeaderStyles();\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.mobileWrapper}>\r\n          <div className={classes.mobileDescription}>\r\n            <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n              Description\r\n            </Typography>\r\n            <Typography>{description}</Typography>\r\n          </div>\r\n          <div className={classes.mobileDescription}>\r\n            <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n              Bug Details\r\n            </Typography>\r\n            <Typography>Created By: {createdBy.username}</Typography>\r\n            <Typography>\r\n              Created On {bug && formatDateTime(createdAt)}\r\n            </Typography>\r\n            <Typography>\r\n              Priority:\r\n              <div\r\n                style={{\r\n                  ...priorityStyles(bug.priority),\r\n                  textTransform: 'capitalize',\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {priority}\r\n              </div>\r\n            </Typography>\r\n\r\n            <Typography>\r\n              Status:\r\n              <div\r\n                style={{\r\n                  ...statusStyles(bug.isResolved),\r\n                  display: 'inline',\r\n                  padding: '0.15em 0.4em',\r\n                }}\r\n              >\r\n                {bug.isResolved ? 'Closed' : 'Open'}\r\n              </div>\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugDetailsMobile;\r\n","import React from 'react';\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n\r\nimport { BugState } from '../../redux/types';\r\nimport { useBugPageStyles } from '../../styles/muiStyles';\r\nimport { formatDateTime } from '../../utils/helper';\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\nconst BugDetails: React.FC<{ bug: BugState }> = ({ bug }) => {\r\n  const classes = useBugPageStyles();\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.body}>\r\n        <div>\r\n          <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n            Description\r\n          </Typography>\r\n          <Typography>{description}</Typography>\r\n        </div>\r\n        <div className={classes.details}>\r\n          <Typography style={{ fontSize: '1rem', fontWeight: 'bold' }}>\r\n            Bug Details\r\n          </Typography>\r\n          <Typography>Created By: {createdBy.username}</Typography>\r\n          <Typography>Created On {bug && formatDateTime(createdAt)}</Typography>\r\n          <Typography>\r\n            Priority:\r\n            <div\r\n              style={{\r\n                ...priorityStyles(bug.priority),\r\n                textTransform: 'capitalize',\r\n                display: 'inline',\r\n                padding: '0.15em 0.4em',\r\n              }}\r\n            >\r\n              {priority}\r\n            </div>\r\n          </Typography>\r\n\r\n          <Typography>\r\n            Status:\r\n            <div\r\n              style={{\r\n                ...statusStyles(bug.isResolved),\r\n                display: 'inline',\r\n                padding: '0.15em 0.4em',\r\n              }}\r\n            >\r\n              {bug.isResolved ? 'Closed' : 'Open'}\r\n            </div>\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n      {/* <div className={classes.buttons}>{adminButtons()}</div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BugDetails;\r\n","import { Fragment } from 'react';\r\nimport { RootState } from '../../redux/store';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { Paper, Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport { selectAuthState } from '../../redux/slices/authSlice';\r\nimport {\r\n  selectBugById,\r\n  deleteBug,\r\n  resolveBug,\r\n} from '../../redux/slices/bugSlice';\r\n\r\nimport BugDetailsMobile from '../../components/bug-details-mobile/bug-details-mobile.component';\r\nimport BugDetails from '../../components/bug-details/bug-details.component';\r\nimport { formatDateTime } from '../../utils/helper';\r\n\r\nimport { useBugPageStyles } from '../../styles/muiStyles';\r\n\r\nimport ConfirmDialog from '../../components/confirm-dialog/confirm-dialog.component';\r\n\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\n\r\nimport { priorityStyles, statusStyles } from '../../styles/buttonStyles';\r\n\r\ninterface ParamTypes {\r\n  projectId: string;\r\n  bugId: string;\r\n}\r\n\r\nconst BugPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { bugId, projectId } = useParams<ParamTypes>();\r\n  const { user } = useSelector(selectAuthState);\r\n  const bug = useSelector((state: RootState) =>\r\n    selectBugById(state, bugId, projectId)\r\n  );\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n  const classes = useBugPageStyles();\r\n\r\n  if (!bug) {\r\n    return (\r\n      <div>\r\n        <p>No bugs</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log(bug);\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    priority,\r\n    isResolved,\r\n    createdBy,\r\n    updatedBy,\r\n    closedBy,\r\n    createdAt,\r\n  } = bug;\r\n\r\n  const isAdmin = user?.id === bug?.createdBy.id;\r\n\r\n  const handleBugDelete = () => {\r\n    dispatch(deleteBug(projectId, bugId));\r\n    history.push(`/projects/${projectId}`);\r\n  };\r\n\r\n  const handleBugReopen = () => {\r\n    dispatch(resolveBug(projectId, bugId, 'reopen'));\r\n  };\r\n\r\n  const handleBugClose = () => {\r\n    dispatch(resolveBug(projectId, bugId, 'close'));\r\n  };\r\n\r\n  const adminButtons = () => {\r\n    if (!isAdmin) return null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className={classes.buttonWrapper}>\r\n          <ConfirmDialog\r\n            title=\"Delete Bug\"\r\n            bodyContent=\"Do you want to permanently delete your bug?\"\r\n            buttonText=\"Delete Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Delete Bug',\r\n              icon: DeleteOutlineIcon,\r\n            }}\r\n            actionFunction={handleBugDelete}\r\n          />\r\n        </div>\r\n        {isResolved ? (\r\n          <ConfirmDialog\r\n            title=\"Re-open Bug\"\r\n            bodyContent=\"Do you want to re-open your bug?\"\r\n            buttonText=\"Re-open Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Re-open Bug',\r\n              icon: RedoIcon,\r\n            }}\r\n            actionFunction={handleBugReopen}\r\n          ></ConfirmDialog>\r\n        ) : (\r\n          <ConfirmDialog\r\n            title=\"Close Bug\"\r\n            bodyContent=\"Do you want to close out your bug?\"\r\n            buttonText=\"Close Bug\"\r\n            buttonType={{\r\n              type: 'normal',\r\n              text: 'Close Bug',\r\n              icon: DoneOutlineIcon,\r\n            }}\r\n            actionFunction={handleBugClose}\r\n          ></ConfirmDialog>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!isMobile ? <BugDetails bug={bug} /> : <BugDetailsMobile bug={bug} />}\r\n      <div className={classes.buttons}>{adminButtons()}</div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BugPage;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { navStyles } from '../../styles/muiStyles';\r\nimport { logout } from '../../redux/slices/authSlice';\r\n\r\nconst Navbar = () => {\r\n  const classes = navStyles();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Bug Tracker\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAuthState } from './redux/slices/authSlice';\r\n\r\nimport CreateProjectPage from './pages/create-project/createprojectpage.component';\r\nimport RegisterPage from './pages/register/registerpage.component';\r\nimport LoginPage from './pages/login-page/loginpage.component';\r\nimport HomePage from './pages/home-page/homepage.component';\r\nimport ProjectPage from './pages/project-page/projectpage.component';\r\nimport BugPage from './pages/bug-page/bugpage.component';\r\n\r\nimport Navbar from './components/navbar/navbar.component';\r\nimport Axios from 'axios';\r\nimport backendUrl from './backendUrl';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Container, useMediaQuery } from '@material-ui/core';\r\n\r\nconst Routes = () => {\r\n  const { user } = useSelector(selectAuthState);\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <Container disableGutters={isMobile}>\r\n      <BrowserRouter>\r\n        {user ? <Navbar /> : null}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {user ? <HomePage /> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n          <Route exact path=\"/register\" component={RegisterPage} />\r\n          <Route exact path=\"/login\">\r\n            {!user ? <LoginPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route exact path=\"/createProject\">\r\n            {user ? <CreateProjectPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route exact path=\"/projects/:projectId\">\r\n            {user ? <ProjectPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n          <Route exact path=\"/projects/:projectId/bugs/:bugId\">\r\n            {user ? <BugPage /> : <Redirect to=\"/\" />}\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Routes from './Routes';\r\nimport Axios from 'axios';\r\nimport backendUrl from './backendUrl';\r\n\r\nimport { autoLogin, selectAuthState } from './redux/slices/authSlice';\r\nimport classes from '*.module.css';\r\nimport { useBodyStyles } from './styles/muiStyles';\r\n\r\nAxios.defaults.withCredentials = true;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const classes = useBodyStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(autoLogin());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.body}>\r\n        <Routes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore, Action } from '@reduxjs/toolkit';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport authReducer from './slices/authSlice';\r\nimport projectReducer from './slices/projectSlice';\r\nimport userReducer from './slices/usersSlice';\r\nimport bugReducer from './slices/bugSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    projects: projectReducer,\r\n    users: userReducer,\r\n    bugs: bugReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\r\n\r\nexport default store;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}